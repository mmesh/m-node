// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.15.1
// source: mmesh/protobuf/resources/v1/services/catalog/catalog.proto

package catalog

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	compute "mmesh.dev/m-api-go/grpc/resources/services/catalog/cloud/compute"
	managed "mmesh.dev/m-api-go/grpc/resources/services/catalog/managed"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Catalog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cloud  *CloudCatalog  `protobuf:"bytes,1,opt,name=cloud,proto3" json:"cloud,omitempty"`
	Manage *ManageCatalog `protobuf:"bytes,2,opt,name=manage,proto3" json:"manage,omitempty"`
}

func (x *Catalog) Reset() {
	*x = Catalog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_services_catalog_catalog_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Catalog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Catalog) ProtoMessage() {}

func (x *Catalog) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_services_catalog_catalog_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Catalog.ProtoReflect.Descriptor instead.
func (*Catalog) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_services_catalog_catalog_proto_rawDescGZIP(), []int{0}
}

func (x *Catalog) GetCloud() *CloudCatalog {
	if x != nil {
		return x.Cloud
	}
	return nil
}

func (x *Catalog) GetManage() *ManageCatalog {
	if x != nil {
		return x.Manage
	}
	return nil
}

type CloudCatalog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Regions           []*compute.Region          `protobuf:"bytes,1,rep,name=regions,proto3" json:"regions,omitempty"`
	InstanceTypes     []*compute.InstanceType    `protobuf:"bytes,2,rep,name=instanceTypes,proto3" json:"instanceTypes,omitempty"`
	OSImages          []*compute.Image           `protobuf:"bytes,3,rep,name=OSImages,proto3" json:"OSImages,omitempty"`
	AppImages         []*compute.Image           `protobuf:"bytes,4,rep,name=appImages,proto3" json:"appImages,omitempty"`
	KubernetesOptions *compute.KubernetesOptions `protobuf:"bytes,11,opt,name=kubernetesOptions,proto3" json:"kubernetesOptions,omitempty"`
}

func (x *CloudCatalog) Reset() {
	*x = CloudCatalog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_services_catalog_catalog_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloudCatalog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudCatalog) ProtoMessage() {}

func (x *CloudCatalog) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_services_catalog_catalog_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudCatalog.ProtoReflect.Descriptor instead.
func (*CloudCatalog) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_services_catalog_catalog_proto_rawDescGZIP(), []int{1}
}

func (x *CloudCatalog) GetRegions() []*compute.Region {
	if x != nil {
		return x.Regions
	}
	return nil
}

func (x *CloudCatalog) GetInstanceTypes() []*compute.InstanceType {
	if x != nil {
		return x.InstanceTypes
	}
	return nil
}

func (x *CloudCatalog) GetOSImages() []*compute.Image {
	if x != nil {
		return x.OSImages
	}
	return nil
}

func (x *CloudCatalog) GetAppImages() []*compute.Image {
	if x != nil {
		return x.AppImages
	}
	return nil
}

func (x *CloudCatalog) GetKubernetesOptions() *compute.KubernetesOptions {
	if x != nil {
		return x.KubernetesOptions
	}
	return nil
}

type ManageCatalog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceTypes []*managed.ServiceType `protobuf:"bytes,1,rep,name=serviceTypes,proto3" json:"serviceTypes,omitempty"`
}

func (x *ManageCatalog) Reset() {
	*x = ManageCatalog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_services_catalog_catalog_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManageCatalog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManageCatalog) ProtoMessage() {}

func (x *ManageCatalog) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_services_catalog_catalog_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManageCatalog.ProtoReflect.Descriptor instead.
func (*ManageCatalog) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_services_catalog_catalog_proto_rawDescGZIP(), []int{2}
}

func (x *ManageCatalog) GetServiceTypes() []*managed.ServiceType {
	if x != nil {
		return x.ServiceTypes
	}
	return nil
}

var File_mmesh_protobuf_resources_v1_services_catalog_catalog_proto protoreflect.FileDescriptor

var file_mmesh_protobuf_resources_v1_services_catalog_catalog_proto_rawDesc = []byte{
	0x0a, 0x3a, 0x6d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2f, 0x63,
	0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x63, 0x61,
	0x74, 0x61, 0x6c, 0x6f, 0x67, 0x1a, 0x42, 0x6d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x61, 0x74, 0x61,
	0x6c, 0x6f, 0x67, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x2f, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x47, 0x6d, 0x6d, 0x65, 0x73, 0x68,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f,
	0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x63, 0x6f,
	0x6d, 0x70, 0x75, 0x74, 0x65, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x4d, 0x6d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67,
	0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x46, 0x6d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2f,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2f, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x4b, 0x6d, 0x6d, 0x65, 0x73, 0x68,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f,
	0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x63, 0x6f,
	0x6d, 0x70, 0x75, 0x74, 0x65, 0x2f, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x66, 0x0a, 0x07, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x12, 0x2b, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x12, 0x2e,
	0x0a, 0x06, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x43,
	0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x06, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x22, 0x9a,
	0x02, 0x0a, 0x0c, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x12,
	0x29, 0x0a, 0x07, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x52, 0x07, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3b, 0x0a, 0x0d, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x08, 0x4f, 0x53, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x70,
	0x75, 0x74, 0x65, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x08, 0x4f, 0x53, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65,
	0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x09, 0x61, 0x70, 0x70, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x73, 0x12, 0x48, 0x0a, 0x11, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63,
	0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65,
	0x73, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x11, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e,
	0x65, 0x74, 0x65, 0x73, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x49, 0x0a, 0x0d, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x12, 0x38, 0x0a, 0x0c,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x42, 0x34, 0x5a, 0x32, 0x6d, 0x6d, 0x65, 0x73, 0x68, 0x2e,
	0x64, 0x65, 0x76, 0x2f, 0x6d, 0x2d, 0x61, 0x70, 0x69, 0x2d, 0x67, 0x6f, 0x2f, 0x67, 0x72, 0x70,
	0x63, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mmesh_protobuf_resources_v1_services_catalog_catalog_proto_rawDescOnce sync.Once
	file_mmesh_protobuf_resources_v1_services_catalog_catalog_proto_rawDescData = file_mmesh_protobuf_resources_v1_services_catalog_catalog_proto_rawDesc
)

func file_mmesh_protobuf_resources_v1_services_catalog_catalog_proto_rawDescGZIP() []byte {
	file_mmesh_protobuf_resources_v1_services_catalog_catalog_proto_rawDescOnce.Do(func() {
		file_mmesh_protobuf_resources_v1_services_catalog_catalog_proto_rawDescData = protoimpl.X.CompressGZIP(file_mmesh_protobuf_resources_v1_services_catalog_catalog_proto_rawDescData)
	})
	return file_mmesh_protobuf_resources_v1_services_catalog_catalog_proto_rawDescData
}

var file_mmesh_protobuf_resources_v1_services_catalog_catalog_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_mmesh_protobuf_resources_v1_services_catalog_catalog_proto_goTypes = []interface{}{
	(*Catalog)(nil),                   // 0: catalog.Catalog
	(*CloudCatalog)(nil),              // 1: catalog.CloudCatalog
	(*ManageCatalog)(nil),             // 2: catalog.ManageCatalog
	(*compute.Region)(nil),            // 3: compute.Region
	(*compute.InstanceType)(nil),      // 4: compute.InstanceType
	(*compute.Image)(nil),             // 5: compute.Image
	(*compute.KubernetesOptions)(nil), // 6: compute.KubernetesOptions
	(*managed.ServiceType)(nil),       // 7: managed.ServiceType
}
var file_mmesh_protobuf_resources_v1_services_catalog_catalog_proto_depIdxs = []int32{
	1, // 0: catalog.Catalog.cloud:type_name -> catalog.CloudCatalog
	2, // 1: catalog.Catalog.manage:type_name -> catalog.ManageCatalog
	3, // 2: catalog.CloudCatalog.regions:type_name -> compute.Region
	4, // 3: catalog.CloudCatalog.instanceTypes:type_name -> compute.InstanceType
	5, // 4: catalog.CloudCatalog.OSImages:type_name -> compute.Image
	5, // 5: catalog.CloudCatalog.appImages:type_name -> compute.Image
	6, // 6: catalog.CloudCatalog.kubernetesOptions:type_name -> compute.KubernetesOptions
	7, // 7: catalog.ManageCatalog.serviceTypes:type_name -> managed.ServiceType
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_mmesh_protobuf_resources_v1_services_catalog_catalog_proto_init() }
func file_mmesh_protobuf_resources_v1_services_catalog_catalog_proto_init() {
	if File_mmesh_protobuf_resources_v1_services_catalog_catalog_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mmesh_protobuf_resources_v1_services_catalog_catalog_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Catalog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_services_catalog_catalog_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloudCatalog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_services_catalog_catalog_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManageCatalog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mmesh_protobuf_resources_v1_services_catalog_catalog_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mmesh_protobuf_resources_v1_services_catalog_catalog_proto_goTypes,
		DependencyIndexes: file_mmesh_protobuf_resources_v1_services_catalog_catalog_proto_depIdxs,
		MessageInfos:      file_mmesh_protobuf_resources_v1_services_catalog_catalog_proto_msgTypes,
	}.Build()
	File_mmesh_protobuf_resources_v1_services_catalog_catalog_proto = out.File
	file_mmesh_protobuf_resources_v1_services_catalog_catalog_proto_rawDesc = nil
	file_mmesh_protobuf_resources_v1_services_catalog_catalog_proto_goTypes = nil
	file_mmesh_protobuf_resources_v1_services_catalog_catalog_proto_depIdxs = nil
}
