// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.15.1
// source: mmesh/protobuf/resources/v1/services/platform/cloud/instance.proto

package cloud

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	network "mmesh.dev/m-api-go/grpc/resources/network"
	resource "mmesh.dev/m-api-go/grpc/resources/resource"
	compute "mmesh.dev/m-api-go/grpc/resources/services/catalog/cloud/compute"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type InstanceStatus int32

const (
	InstanceStatus_PENDING  InstanceStatus = 0 // new instance to be provisioned
	InstanceStatus_ACTIVE   InstanceStatus = 1
	InstanceStatus_OFF      InstanceStatus = 2
	InstanceStatus_CANCELED InstanceStatus = 3
	InstanceStatus_UNKNOWN  InstanceStatus = 100
)

// Enum value maps for InstanceStatus.
var (
	InstanceStatus_name = map[int32]string{
		0:   "PENDING",
		1:   "ACTIVE",
		2:   "OFF",
		3:   "CANCELED",
		100: "UNKNOWN",
	}
	InstanceStatus_value = map[string]int32{
		"PENDING":  0,
		"ACTIVE":   1,
		"OFF":      2,
		"CANCELED": 3,
		"UNKNOWN":  100,
	}
)

func (x InstanceStatus) Enum() *InstanceStatus {
	p := new(InstanceStatus)
	*p = x
	return p
}

func (x InstanceStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InstanceStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_enumTypes[0].Descriptor()
}

func (InstanceStatus) Type() protoreflect.EnumType {
	return &file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_enumTypes[0]
}

func (x InstanceStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InstanceStatus.Descriptor instead.
func (InstanceStatus) EnumDescriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_rawDescGZIP(), []int{0}
}

type Instance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceID          string                `protobuf:"bytes,1,opt,name=serviceID,proto3" json:"serviceID,omitempty"`
	ProviderID         string                `protobuf:"bytes,2,opt,name=providerID,proto3" json:"providerID,omitempty"`
	ProductID          string                `protobuf:"bytes,3,opt,name=productID,proto3" json:"productID,omitempty"`
	PriceID            string                `protobuf:"bytes,4,opt,name=priceID,proto3" json:"priceID,omitempty"`
	StripeCustomerID   string                `protobuf:"bytes,11,opt,name=stripeCustomerID,proto3" json:"stripeCustomerID,omitempty"`
	StripeProductID    string                `protobuf:"bytes,12,opt,name=stripeProductID,proto3" json:"stripeProductID,omitempty"`
	StripePriceID      string                `protobuf:"bytes,13,opt,name=stripePriceID,proto3" json:"stripePriceID,omitempty"` // string stripeSubscriptionID = 14;
	AccountID          string                `protobuf:"bytes,21,opt,name=accountID,proto3" json:"accountID,omitempty"`
	ResourceGroupID    string                `protobuf:"bytes,22,opt,name=resourceGroupID,proto3" json:"resourceGroupID,omitempty"`
	InstanceID         string                `protobuf:"bytes,31,opt,name=instanceID,proto3" json:"instanceID,omitempty"` // mmID
	Description        string                `protobuf:"bytes,32,opt,name=description,proto3" json:"description,omitempty"`
	Class              compute.ImageClass    `protobuf:"varint,33,opt,name=class,proto3,enum=compute.ImageClass" json:"class,omitempty"`
	ProviderInstanceID int64                 `protobuf:"varint,35,opt,name=providerInstanceID,proto3" json:"providerInstanceID,omitempty"`
	NodeInstance       *network.NodeInstance `protobuf:"bytes,41,opt,name=nodeInstance,proto3" json:"nodeInstance,omitempty"`
	CreationDate       int64                 `protobuf:"varint,55,opt,name=creationDate,proto3" json:"creationDate,omitempty"`
	LastModified       int64                 `protobuf:"varint,56,opt,name=lastModified,proto3" json:"lastModified,omitempty"`
	StartDate          int64                 `protobuf:"varint,57,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate            int64                 `protobuf:"varint,58,opt,name=endDate,proto3" json:"endDate,omitempty"`
	Managed            bool                  `protobuf:"varint,61,opt,name=managed,proto3" json:"managed,omitempty"`
	Status             InstanceStatus        `protobuf:"varint,65,opt,name=status,proto3,enum=cloud.InstanceStatus" json:"status,omitempty"`
	LastAction         *InstanceAction       `protobuf:"bytes,71,opt,name=lastAction,proto3" json:"lastAction,omitempty"`
	Actions            []*InstanceAction     `protobuf:"bytes,72,rep,name=actions,proto3" json:"actions,omitempty"`
	Spec               *InstanceSpec         `protobuf:"bytes,81,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *Instance) Reset() {
	*x = Instance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instance) ProtoMessage() {}

func (x *Instance) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instance.ProtoReflect.Descriptor instead.
func (*Instance) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_rawDescGZIP(), []int{0}
}

func (x *Instance) GetServiceID() string {
	if x != nil {
		return x.ServiceID
	}
	return ""
}

func (x *Instance) GetProviderID() string {
	if x != nil {
		return x.ProviderID
	}
	return ""
}

func (x *Instance) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *Instance) GetPriceID() string {
	if x != nil {
		return x.PriceID
	}
	return ""
}

func (x *Instance) GetStripeCustomerID() string {
	if x != nil {
		return x.StripeCustomerID
	}
	return ""
}

func (x *Instance) GetStripeProductID() string {
	if x != nil {
		return x.StripeProductID
	}
	return ""
}

func (x *Instance) GetStripePriceID() string {
	if x != nil {
		return x.StripePriceID
	}
	return ""
}

func (x *Instance) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *Instance) GetResourceGroupID() string {
	if x != nil {
		return x.ResourceGroupID
	}
	return ""
}

func (x *Instance) GetInstanceID() string {
	if x != nil {
		return x.InstanceID
	}
	return ""
}

func (x *Instance) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Instance) GetClass() compute.ImageClass {
	if x != nil {
		return x.Class
	}
	return compute.ImageClass_OS
}

func (x *Instance) GetProviderInstanceID() int64 {
	if x != nil {
		return x.ProviderInstanceID
	}
	return 0
}

func (x *Instance) GetNodeInstance() *network.NodeInstance {
	if x != nil {
		return x.NodeInstance
	}
	return nil
}

func (x *Instance) GetCreationDate() int64 {
	if x != nil {
		return x.CreationDate
	}
	return 0
}

func (x *Instance) GetLastModified() int64 {
	if x != nil {
		return x.LastModified
	}
	return 0
}

func (x *Instance) GetStartDate() int64 {
	if x != nil {
		return x.StartDate
	}
	return 0
}

func (x *Instance) GetEndDate() int64 {
	if x != nil {
		return x.EndDate
	}
	return 0
}

func (x *Instance) GetManaged() bool {
	if x != nil {
		return x.Managed
	}
	return false
}

func (x *Instance) GetStatus() InstanceStatus {
	if x != nil {
		return x.Status
	}
	return InstanceStatus_PENDING
}

func (x *Instance) GetLastAction() *InstanceAction {
	if x != nil {
		return x.LastAction
	}
	return nil
}

func (x *Instance) GetActions() []*InstanceAction {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *Instance) GetSpec() *InstanceSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type Instances struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta      *resource.ListResponse `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	Instances []*Instance            `protobuf:"bytes,2,rep,name=instances,proto3" json:"instances,omitempty"`
}

func (x *Instances) Reset() {
	*x = Instances{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instances) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instances) ProtoMessage() {}

func (x *Instances) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instances.ProtoReflect.Descriptor instead.
func (*Instances) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_rawDescGZIP(), []int{1}
}

func (x *Instances) GetMeta() *resource.ListResponse {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Instances) GetInstances() []*Instance {
	if x != nil {
		return x.Instances
	}
	return nil
}

type ListInstancesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta      *resource.ListRequest `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	AccountID string                `protobuf:"bytes,2,opt,name=accountID,proto3" json:"accountID,omitempty"`
}

func (x *ListInstancesRequest) Reset() {
	*x = ListInstancesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInstancesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInstancesRequest) ProtoMessage() {}

func (x *ListInstancesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInstancesRequest.ProtoReflect.Descriptor instead.
func (*ListInstancesRequest) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_rawDescGZIP(), []int{2}
}

func (x *ListInstancesRequest) GetMeta() *resource.ListRequest {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *ListInstancesRequest) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

type InstanceAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionID             int32  `protobuf:"varint,1,opt,name=actionID,proto3" json:"actionID,omitempty"`
	Status               string `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	Type                 string `protobuf:"bytes,12,opt,name=type,proto3" json:"type,omitempty"`
	ProviderResourceID   int32  `protobuf:"varint,21,opt,name=providerResourceID,proto3" json:"providerResourceID,omitempty"`
	ProviderResourceType string `protobuf:"bytes,22,opt,name=providerResourceType,proto3" json:"providerResourceType,omitempty"`
	StartDate            int64  `protobuf:"varint,31,opt,name=startDate,proto3" json:"startDate,omitempty"`
	CompletionDate       int64  `protobuf:"varint,32,opt,name=completionDate,proto3" json:"completionDate,omitempty"`
}

func (x *InstanceAction) Reset() {
	*x = InstanceAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceAction) ProtoMessage() {}

func (x *InstanceAction) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceAction.ProtoReflect.Descriptor instead.
func (*InstanceAction) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_rawDescGZIP(), []int{3}
}

func (x *InstanceAction) GetActionID() int32 {
	if x != nil {
		return x.ActionID
	}
	return 0
}

func (x *InstanceAction) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *InstanceAction) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *InstanceAction) GetProviderResourceID() int32 {
	if x != nil {
		return x.ProviderResourceID
	}
	return 0
}

func (x *InstanceAction) GetProviderResourceType() string {
	if x != nil {
		return x.ProviderResourceType
	}
	return ""
}

func (x *InstanceAction) GetStartDate() int64 {
	if x != nil {
		return x.StartDate
	}
	return 0
}

func (x *InstanceAction) GetCompletionDate() int64 {
	if x != nil {
		return x.CompletionDate
	}
	return 0
}

type InstanceSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region       *compute.Region       `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	InstanceType *compute.InstanceType `protobuf:"bytes,2,opt,name=instanceType,proto3" json:"instanceType,omitempty"`
	Image        *compute.Image        `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	SSHKeys      []*compute.SSHKey     `protobuf:"bytes,4,rep,name=SSHKeys,proto3" json:"SSHKeys,omitempty"`
}

func (x *InstanceSpec) Reset() {
	*x = InstanceSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceSpec) ProtoMessage() {}

func (x *InstanceSpec) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceSpec.ProtoReflect.Descriptor instead.
func (*InstanceSpec) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_rawDescGZIP(), []int{4}
}

func (x *InstanceSpec) GetRegion() *compute.Region {
	if x != nil {
		return x.Region
	}
	return nil
}

func (x *InstanceSpec) GetInstanceType() *compute.InstanceType {
	if x != nil {
		return x.InstanceType
	}
	return nil
}

func (x *InstanceSpec) GetImage() *compute.Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *InstanceSpec) GetSSHKeys() []*compute.SSHKey {
	if x != nil {
		return x.SSHKeys
	}
	return nil
}

type InstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID           string                       `protobuf:"bytes,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	VRF                 *network.VRF                 `protobuf:"bytes,2,opt,name=VRF,proto3" json:"VRF,omitempty"`
	NodeInstanceRequest *network.NodeInstanceRequest `protobuf:"bytes,3,opt,name=nodeInstanceRequest,proto3" json:"nodeInstanceRequest,omitempty"`
	Spec                *InstanceSpec                `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *InstanceRequest) Reset() {
	*x = InstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceRequest) ProtoMessage() {}

func (x *InstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceRequest.ProtoReflect.Descriptor instead.
func (*InstanceRequest) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_rawDescGZIP(), []int{5}
}

func (x *InstanceRequest) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *InstanceRequest) GetVRF() *network.VRF {
	if x != nil {
		return x.VRF
	}
	return nil
}

func (x *InstanceRequest) GetNodeInstanceRequest() *network.NodeInstanceRequest {
	if x != nil {
		return x.NodeInstanceRequest
	}
	return nil
}

func (x *InstanceRequest) GetSpec() *InstanceSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

var File_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto protoreflect.FileDescriptor

var file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_rawDesc = []byte{
	0x0a, 0x42, 0x6d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x1a, 0x2f, 0x6d, 0x6d, 0x65,
	0x73, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2d, 0x6d, 0x6d,
	0x65, 0x73, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x2f, 0x76, 0x72, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x37, 0x6d, 0x6d, 0x65,
	0x73, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x2d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x47, 0x6d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x61, 0x74, 0x61, 0x6c,
	0x6f, 0x67, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65,
	0x2f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x4d, 0x6d,
	0x6d, 0x65, 0x73, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2f, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x46, 0x6d, 0x6d,
	0x65, 0x73, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x47, 0x6d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x61, 0x74, 0x61, 0x6c,
	0x6f, 0x67, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65,
	0x2f, 0x73, 0x73, 0x68, 0x4b, 0x65, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf6, 0x06,
	0x0a, 0x08, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x63, 0x65, 0x49,
	0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x69, 0x63, 0x65, 0x49, 0x44,
	0x12, 0x2a, 0x0a, 0x10, 0x73, 0x74, 0x72, 0x69, 0x70, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x74, 0x72, 0x69,
	0x70, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f,
	0x73, 0x74, 0x72, 0x69, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x74, 0x72, 0x69, 0x70, 0x65, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x74, 0x72, 0x69, 0x70, 0x65,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x49, 0x44, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73,
	0x74, 0x72, 0x69, 0x70, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x49, 0x44, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18,
	0x21, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x05, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x18, 0x23, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x44, 0x12, 0x39, 0x0a, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x0c,
	0x6e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x18, 0x37, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x18, 0x38, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x39, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x3a, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x41, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x35, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x47, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x07,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x48, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x27, 0x0a,
	0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x51, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63,
	0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x66, 0x0a, 0x09, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12,
	0x2d, 0x0a, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x5f,
	0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x6d, 0x65, 0x74,
	0x61, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x22,
	0x82, 0x02, 0x0a, 0x0e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x44,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x44, 0x12, 0x32, 0x0a, 0x14, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x18, 0x20,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x65, 0x22, 0xc3, 0x01, 0x0a, 0x0c, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x27, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e,
	0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x39,
	0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75,
	0x74, 0x65, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x29, 0x0a, 0x07, 0x53, 0x53, 0x48, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x53, 0x53, 0x48, 0x4b, 0x65,
	0x79, 0x52, 0x07, 0x53, 0x53, 0x48, 0x4b, 0x65, 0x79, 0x73, 0x22, 0xc8, 0x01, 0x0a, 0x0f, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x03,
	0x56, 0x52, 0x46, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x2e, 0x56, 0x52, 0x46, 0x52, 0x03, 0x56, 0x52, 0x46, 0x12, 0x4e, 0x0a, 0x13,
	0x6e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x13, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x04,
	0x73, 0x70, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52,
	0x04, 0x73, 0x70, 0x65, 0x63, 0x2a, 0x4d, 0x0a, 0x0e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49,
	0x4e, 0x47, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01,
	0x12, 0x07, 0x0a, 0x03, 0x4f, 0x46, 0x46, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x41, 0x4e,
	0x43, 0x45, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x64, 0x42, 0x3b, 0x5a, 0x39, 0x6d, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x64, 0x65,
	0x76, 0x2f, 0x6d, 0x2d, 0x61, 0x70, 0x69, 0x2d, 0x67, 0x6f, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_rawDescOnce sync.Once
	file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_rawDescData = file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_rawDesc
)

func file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_rawDescGZIP() []byte {
	file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_rawDescOnce.Do(func() {
		file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_rawDescData = protoimpl.X.CompressGZIP(file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_rawDescData)
	})
	return file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_rawDescData
}

var file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_goTypes = []interface{}{
	(InstanceStatus)(0),                 // 0: cloud.InstanceStatus
	(*Instance)(nil),                    // 1: cloud.Instance
	(*Instances)(nil),                   // 2: cloud.Instances
	(*ListInstancesRequest)(nil),        // 3: cloud.ListInstancesRequest
	(*InstanceAction)(nil),              // 4: cloud.InstanceAction
	(*InstanceSpec)(nil),                // 5: cloud.InstanceSpec
	(*InstanceRequest)(nil),             // 6: cloud.InstanceRequest
	(compute.ImageClass)(0),             // 7: compute.ImageClass
	(*network.NodeInstance)(nil),        // 8: network.NodeInstance
	(*resource.ListResponse)(nil),       // 9: resource.ListResponse
	(*resource.ListRequest)(nil),        // 10: resource.ListRequest
	(*compute.Region)(nil),              // 11: compute.Region
	(*compute.InstanceType)(nil),        // 12: compute.InstanceType
	(*compute.Image)(nil),               // 13: compute.Image
	(*compute.SSHKey)(nil),              // 14: compute.SSHKey
	(*network.VRF)(nil),                 // 15: network.VRF
	(*network.NodeInstanceRequest)(nil), // 16: network.NodeInstanceRequest
}
var file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_depIdxs = []int32{
	7,  // 0: cloud.Instance.class:type_name -> compute.ImageClass
	8,  // 1: cloud.Instance.nodeInstance:type_name -> network.NodeInstance
	0,  // 2: cloud.Instance.status:type_name -> cloud.InstanceStatus
	4,  // 3: cloud.Instance.lastAction:type_name -> cloud.InstanceAction
	4,  // 4: cloud.Instance.actions:type_name -> cloud.InstanceAction
	5,  // 5: cloud.Instance.spec:type_name -> cloud.InstanceSpec
	9,  // 6: cloud.Instances.meta:type_name -> resource.ListResponse
	1,  // 7: cloud.Instances.instances:type_name -> cloud.Instance
	10, // 8: cloud.ListInstancesRequest.meta:type_name -> resource.ListRequest
	11, // 9: cloud.InstanceSpec.region:type_name -> compute.Region
	12, // 10: cloud.InstanceSpec.instanceType:type_name -> compute.InstanceType
	13, // 11: cloud.InstanceSpec.image:type_name -> compute.Image
	14, // 12: cloud.InstanceSpec.SSHKeys:type_name -> compute.SSHKey
	15, // 13: cloud.InstanceRequest.VRF:type_name -> network.VRF
	16, // 14: cloud.InstanceRequest.nodeInstanceRequest:type_name -> network.NodeInstanceRequest
	5,  // 15: cloud.InstanceRequest.spec:type_name -> cloud.InstanceSpec
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_init() }
func file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_init() {
	if File_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instances); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInstancesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_goTypes,
		DependencyIndexes: file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_depIdxs,
		EnumInfos:         file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_enumTypes,
		MessageInfos:      file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_msgTypes,
	}.Build()
	File_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto = out.File
	file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_rawDesc = nil
	file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_goTypes = nil
	file_mmesh_protobuf_resources_v1_services_platform_cloud_instance_proto_depIdxs = nil
}
