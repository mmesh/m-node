// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.23.2
// source: mmesh/protobuf/resources/v1/metrics/netdev.proto

package metrics

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NetworkStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prev      map[string]*NetDevStats `protobuf:"bytes,1,rep,name=prev,proto3" json:"prev,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`   // map[iface]*NetDevStats
	Stats     map[string]*NetDevStats `protobuf:"bytes,2,rep,name=stats,proto3" json:"stats,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // map[iface]*NetDevStats
	Timestamp int64                   `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *NetworkStats) Reset() {
	*x = NetworkStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_metrics_netdev_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkStats) ProtoMessage() {}

func (x *NetworkStats) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_metrics_netdev_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkStats.ProtoReflect.Descriptor instead.
func (*NetworkStats) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_metrics_netdev_proto_rawDescGZIP(), []int{0}
}

func (x *NetworkStats) GetPrev() map[string]*NetDevStats {
	if x != nil {
		return x.Prev
	}
	return nil
}

func (x *NetworkStats) GetStats() map[string]*NetDevStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *NetworkStats) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type NetDevStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Iface        string `protobuf:"bytes,1,opt,name=iface,proto3" json:"iface,omitempty"`
	RxBytes      uint64 `protobuf:"varint,2,opt,name=rxBytes,proto3" json:"rxBytes,omitempty"`
	RxPackets    uint64 `protobuf:"varint,3,opt,name=rxPackets,proto3" json:"rxPackets,omitempty"`
	RxErrors     uint64 `protobuf:"varint,4,opt,name=rxErrors,proto3" json:"rxErrors,omitempty"`
	RxDrops      uint64 `protobuf:"varint,5,opt,name=rxDrops,proto3" json:"rxDrops,omitempty"`
	RxFifo       uint64 `protobuf:"varint,6,opt,name=rxFifo,proto3" json:"rxFifo,omitempty"`
	RxFrame      uint64 `protobuf:"varint,7,opt,name=rxFrame,proto3" json:"rxFrame,omitempty"`
	RxCompressed uint64 `protobuf:"varint,8,opt,name=rxCompressed,proto3" json:"rxCompressed,omitempty"`
	RxMulticast  uint64 `protobuf:"varint,9,opt,name=rxMulticast,proto3" json:"rxMulticast,omitempty"`
	TxBytes      uint64 `protobuf:"varint,10,opt,name=txBytes,proto3" json:"txBytes,omitempty"`
	TxPackets    uint64 `protobuf:"varint,11,opt,name=txPackets,proto3" json:"txPackets,omitempty"`
	TxErrors     uint64 `protobuf:"varint,12,opt,name=txErrors,proto3" json:"txErrors,omitempty"`
	TxDrops      uint64 `protobuf:"varint,13,opt,name=txDrops,proto3" json:"txDrops,omitempty"`
	TxFifo       uint64 `protobuf:"varint,14,opt,name=txFifo,proto3" json:"txFifo,omitempty"`
	TxColls      uint64 `protobuf:"varint,15,opt,name=txColls,proto3" json:"txColls,omitempty"`
	TxCarrier    uint64 `protobuf:"varint,16,opt,name=txCarrier,proto3" json:"txCarrier,omitempty"`
	TxCompressed uint64 `protobuf:"varint,17,opt,name=txCompressed,proto3" json:"txCompressed,omitempty"`
}

func (x *NetDevStats) Reset() {
	*x = NetDevStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_metrics_netdev_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetDevStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetDevStats) ProtoMessage() {}

func (x *NetDevStats) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_metrics_netdev_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetDevStats.ProtoReflect.Descriptor instead.
func (*NetDevStats) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_metrics_netdev_proto_rawDescGZIP(), []int{1}
}

func (x *NetDevStats) GetIface() string {
	if x != nil {
		return x.Iface
	}
	return ""
}

func (x *NetDevStats) GetRxBytes() uint64 {
	if x != nil {
		return x.RxBytes
	}
	return 0
}

func (x *NetDevStats) GetRxPackets() uint64 {
	if x != nil {
		return x.RxPackets
	}
	return 0
}

func (x *NetDevStats) GetRxErrors() uint64 {
	if x != nil {
		return x.RxErrors
	}
	return 0
}

func (x *NetDevStats) GetRxDrops() uint64 {
	if x != nil {
		return x.RxDrops
	}
	return 0
}

func (x *NetDevStats) GetRxFifo() uint64 {
	if x != nil {
		return x.RxFifo
	}
	return 0
}

func (x *NetDevStats) GetRxFrame() uint64 {
	if x != nil {
		return x.RxFrame
	}
	return 0
}

func (x *NetDevStats) GetRxCompressed() uint64 {
	if x != nil {
		return x.RxCompressed
	}
	return 0
}

func (x *NetDevStats) GetRxMulticast() uint64 {
	if x != nil {
		return x.RxMulticast
	}
	return 0
}

func (x *NetDevStats) GetTxBytes() uint64 {
	if x != nil {
		return x.TxBytes
	}
	return 0
}

func (x *NetDevStats) GetTxPackets() uint64 {
	if x != nil {
		return x.TxPackets
	}
	return 0
}

func (x *NetDevStats) GetTxErrors() uint64 {
	if x != nil {
		return x.TxErrors
	}
	return 0
}

func (x *NetDevStats) GetTxDrops() uint64 {
	if x != nil {
		return x.TxDrops
	}
	return 0
}

func (x *NetDevStats) GetTxFifo() uint64 {
	if x != nil {
		return x.TxFifo
	}
	return 0
}

func (x *NetDevStats) GetTxColls() uint64 {
	if x != nil {
		return x.TxColls
	}
	return 0
}

func (x *NetDevStats) GetTxCarrier() uint64 {
	if x != nil {
		return x.TxCarrier
	}
	return 0
}

func (x *NetDevStats) GetTxCompressed() uint64 {
	if x != nil {
		return x.TxCompressed
	}
	return 0
}

var File_mmesh_protobuf_resources_v1_metrics_netdev_proto protoreflect.FileDescriptor

var file_mmesh_protobuf_resources_v1_metrics_netdev_proto_rawDesc = []byte{
	0x0a, 0x30, 0x6d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x2f, 0x6e, 0x65, 0x74, 0x64, 0x65, 0x76, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0xb8, 0x02, 0x0a, 0x0c,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x33, 0x0a, 0x04,
	0x70, 0x72, 0x65, 0x76, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x2e, 0x50, 0x72, 0x65, 0x76, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x70, 0x72, 0x65,
	0x76, 0x12, 0x36, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x1a, 0x4d, 0x0a, 0x09, 0x50, 0x72, 0x65, 0x76, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e,
	0x4e, 0x65, 0x74, 0x44, 0x65, 0x76, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x4e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e,
	0x4e, 0x65, 0x74, 0x44, 0x65, 0x76, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xeb, 0x03, 0x0a, 0x0b, 0x4e, 0x65, 0x74, 0x44, 0x65,
	0x76, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x66, 0x61, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x66, 0x61, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x78, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x72,
	0x78, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x78, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x72, 0x78, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x78, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x72, 0x78, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x78, 0x44, 0x72, 0x6f, 0x70, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x72, 0x78, 0x44, 0x72, 0x6f, 0x70, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x78,
	0x46, 0x69, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x78, 0x46, 0x69,
	0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x78, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x72, 0x78, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x72, 0x78, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0c, 0x72, 0x78, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x72, 0x78, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x72, 0x78, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x78, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x78, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x78, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x74, 0x78, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x78,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x74, 0x78,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x78, 0x44, 0x72, 0x6f, 0x70,
	0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x78, 0x44, 0x72, 0x6f, 0x70, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x78, 0x46, 0x69, 0x66, 0x6f, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x74, 0x78, 0x46, 0x69, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x78, 0x43, 0x6f,
	0x6c, 0x6c, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x78, 0x43, 0x6f, 0x6c,
	0x6c, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x78, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x78, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72,
	0x12, 0x22, 0x0a, 0x0c, 0x74, 0x78, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x74, 0x78, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x64, 0x42, 0x2b, 0x5a, 0x29, 0x6d, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x64, 0x65,
	0x76, 0x2f, 0x6d, 0x2d, 0x61, 0x70, 0x69, 0x2d, 0x67, 0x6f, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mmesh_protobuf_resources_v1_metrics_netdev_proto_rawDescOnce sync.Once
	file_mmesh_protobuf_resources_v1_metrics_netdev_proto_rawDescData = file_mmesh_protobuf_resources_v1_metrics_netdev_proto_rawDesc
)

func file_mmesh_protobuf_resources_v1_metrics_netdev_proto_rawDescGZIP() []byte {
	file_mmesh_protobuf_resources_v1_metrics_netdev_proto_rawDescOnce.Do(func() {
		file_mmesh_protobuf_resources_v1_metrics_netdev_proto_rawDescData = protoimpl.X.CompressGZIP(file_mmesh_protobuf_resources_v1_metrics_netdev_proto_rawDescData)
	})
	return file_mmesh_protobuf_resources_v1_metrics_netdev_proto_rawDescData
}

var file_mmesh_protobuf_resources_v1_metrics_netdev_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_mmesh_protobuf_resources_v1_metrics_netdev_proto_goTypes = []interface{}{
	(*NetworkStats)(nil), // 0: metrics.NetworkStats
	(*NetDevStats)(nil),  // 1: metrics.NetDevStats
	nil,                  // 2: metrics.NetworkStats.PrevEntry
	nil,                  // 3: metrics.NetworkStats.StatsEntry
}
var file_mmesh_protobuf_resources_v1_metrics_netdev_proto_depIdxs = []int32{
	2, // 0: metrics.NetworkStats.prev:type_name -> metrics.NetworkStats.PrevEntry
	3, // 1: metrics.NetworkStats.stats:type_name -> metrics.NetworkStats.StatsEntry
	1, // 2: metrics.NetworkStats.PrevEntry.value:type_name -> metrics.NetDevStats
	1, // 3: metrics.NetworkStats.StatsEntry.value:type_name -> metrics.NetDevStats
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_mmesh_protobuf_resources_v1_metrics_netdev_proto_init() }
func file_mmesh_protobuf_resources_v1_metrics_netdev_proto_init() {
	if File_mmesh_protobuf_resources_v1_metrics_netdev_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mmesh_protobuf_resources_v1_metrics_netdev_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_metrics_netdev_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetDevStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mmesh_protobuf_resources_v1_metrics_netdev_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mmesh_protobuf_resources_v1_metrics_netdev_proto_goTypes,
		DependencyIndexes: file_mmesh_protobuf_resources_v1_metrics_netdev_proto_depIdxs,
		MessageInfos:      file_mmesh_protobuf_resources_v1_metrics_netdev_proto_msgTypes,
	}.Build()
	File_mmesh_protobuf_resources_v1_metrics_netdev_proto = out.File
	file_mmesh_protobuf_resources_v1_metrics_netdev_proto_rawDesc = nil
	file_mmesh_protobuf_resources_v1_metrics_netdev_proto_goTypes = nil
	file_mmesh_protobuf_resources_v1_metrics_netdev_proto_depIdxs = nil
}
