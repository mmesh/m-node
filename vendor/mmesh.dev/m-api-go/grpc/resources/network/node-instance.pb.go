// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.15.1
// source: mmesh/protobuf/resources/v1/network/node-instance.proto

package network

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	auth "mmesh.dev/m-api-go/grpc/resources/iam/auth"
	location "mmesh.dev/m-api-go/grpc/resources/location"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type NodeInstanceType int32

const (
	NodeInstanceType_GENERIC           NodeInstanceType = 0
	NodeInstanceType_K8S_RELAY_SERVICE NodeInstanceType = 1
	NodeInstanceType_CLOUD_INSTANCE    NodeInstanceType = 2
)

// Enum value maps for NodeInstanceType.
var (
	NodeInstanceType_name = map[int32]string{
		0: "GENERIC",
		1: "K8S_RELAY_SERVICE",
		2: "CLOUD_INSTANCE",
	}
	NodeInstanceType_value = map[string]int32{
		"GENERIC":           0,
		"K8S_RELAY_SERVICE": 1,
		"CLOUD_INSTANCE":    2,
	}
)

func (x NodeInstanceType) Enum() *NodeInstanceType {
	p := new(NodeInstanceType)
	*p = x
	return p
}

func (x NodeInstanceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeInstanceType) Descriptor() protoreflect.EnumDescriptor {
	return file_mmesh_protobuf_resources_v1_network_node_instance_proto_enumTypes[0].Descriptor()
}

func (NodeInstanceType) Type() protoreflect.EnumType {
	return &file_mmesh_protobuf_resources_v1_network_node_instance_proto_enumTypes[0]
}

func (x NodeInstanceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NodeInstanceType.Descriptor instead.
func (NodeInstanceType) EnumDescriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_network_node_instance_proto_rawDescGZIP(), []int{0}
}

type NodeInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node            *Node               `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	AuthKey         *auth.AuthKey       `protobuf:"bytes,2,opt,name=authKey,proto3" json:"authKey,omitempty"`
	AuthSecret      string              `protobuf:"bytes,3,opt,name=authSecret,proto3" json:"authSecret,omitempty"`
	Namespace       string              `protobuf:"bytes,11,opt,name=namespace,proto3" json:"namespace,omitempty"` // mmesh.namespace
	Location        *location.Location  `protobuf:"bytes,12,opt,name=location,proto3" json:"location,omitempty"`
	FederationID    string              `protobuf:"bytes,13,opt,name=federationID,proto3" json:"federationID,omitempty"`
	FederationVHost string              `protobuf:"bytes,14,opt,name=federationVHost,proto3" json:"federationVHost,omitempty"` // string controllerID = 15;
	ExternalPort    int32               `protobuf:"varint,21,opt,name=externalPort,proto3" json:"externalPort,omitempty"`      // string externalIPv4 = 22;
	Enabled         bool                `protobuf:"varint,31,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Suspended       bool                `protobuf:"varint,32,opt,name=suspended,proto3" json:"suspended,omitempty"`
	Config          *NodeInstanceConfig `protobuf:"bytes,41,opt,name=config,proto3" json:"config,omitempty"`
	Type            NodeInstanceType    `protobuf:"varint,51,opt,name=type,proto3,enum=network.NodeInstanceType" json:"type,omitempty"`
	K8SOpts         *KubernetesOpts     `protobuf:"bytes,61,opt,name=k8sOpts,proto3" json:"k8sOpts,omitempty"`
	CloudOpts       *CloudOpts          `protobuf:"bytes,62,opt,name=cloudOpts,proto3" json:"cloudOpts,omitempty"`
}

func (x *NodeInstance) Reset() {
	*x = NodeInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_network_node_instance_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInstance) ProtoMessage() {}

func (x *NodeInstance) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_network_node_instance_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeInstance.ProtoReflect.Descriptor instead.
func (*NodeInstance) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_network_node_instance_proto_rawDescGZIP(), []int{0}
}

func (x *NodeInstance) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *NodeInstance) GetAuthKey() *auth.AuthKey {
	if x != nil {
		return x.AuthKey
	}
	return nil
}

func (x *NodeInstance) GetAuthSecret() string {
	if x != nil {
		return x.AuthSecret
	}
	return ""
}

func (x *NodeInstance) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *NodeInstance) GetLocation() *location.Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *NodeInstance) GetFederationID() string {
	if x != nil {
		return x.FederationID
	}
	return ""
}

func (x *NodeInstance) GetFederationVHost() string {
	if x != nil {
		return x.FederationVHost
	}
	return ""
}

func (x *NodeInstance) GetExternalPort() int32 {
	if x != nil {
		return x.ExternalPort
	}
	return 0
}

func (x *NodeInstance) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *NodeInstance) GetSuspended() bool {
	if x != nil {
		return x.Suspended
	}
	return false
}

func (x *NodeInstance) GetConfig() *NodeInstanceConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *NodeInstance) GetType() NodeInstanceType {
	if x != nil {
		return x.Type
	}
	return NodeInstanceType_GENERIC
}

func (x *NodeInstance) GetK8SOpts() *KubernetesOpts {
	if x != nil {
		return x.K8SOpts
	}
	return nil
}

func (x *NodeInstance) GetCloudOpts() *CloudOpts {
	if x != nil {
		return x.CloudOpts
	}
	return nil
}

type NodeInstanceConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	YAML string `protobuf:"bytes,1,opt,name=YAML,proto3" json:"YAML,omitempty"`
}

func (x *NodeInstanceConfig) Reset() {
	*x = NodeInstanceConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_network_node_instance_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeInstanceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInstanceConfig) ProtoMessage() {}

func (x *NodeInstanceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_network_node_instance_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeInstanceConfig.ProtoReflect.Descriptor instead.
func (*NodeInstanceConfig) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_network_node_instance_proto_rawDescGZIP(), []int{1}
}

func (x *NodeInstanceConfig) GetYAML() string {
	if x != nil {
		return x.YAML
	}
	return ""
}

type KubernetesOpts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ns      string `protobuf:"bytes,1,opt,name=ns,proto3" json:"ns,omitempty"`     // kubernetes namespace
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` // mmID
	Image   string `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	Version string `protobuf:"bytes,6,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *KubernetesOpts) Reset() {
	*x = KubernetesOpts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_network_node_instance_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KubernetesOpts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesOpts) ProtoMessage() {}

func (x *KubernetesOpts) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_network_node_instance_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesOpts.ProtoReflect.Descriptor instead.
func (*KubernetesOpts) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_network_node_instance_proto_rawDescGZIP(), []int{2}
}

func (x *KubernetesOpts) GetNs() string {
	if x != nil {
		return x.Ns
	}
	return ""
}

func (x *KubernetesOpts) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *KubernetesOpts) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *KubernetesOpts) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type CloudOpts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InitScript string `protobuf:"bytes,1,opt,name=initScript,proto3" json:"initScript,omitempty"`
}

func (x *CloudOpts) Reset() {
	*x = CloudOpts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_network_node_instance_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloudOpts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudOpts) ProtoMessage() {}

func (x *CloudOpts) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_network_node_instance_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudOpts.ProtoReflect.Descriptor instead.
func (*CloudOpts) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_network_node_instance_proto_rawDescGZIP(), []int{3}
}

func (x *CloudOpts) GetInitScript() string {
	if x != nil {
		return x.InitScript
	}
	return ""
}

type NodeInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace       string             `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"` // mmesh.namespace
	Location        *location.Location `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	FederationID    string             `protobuf:"bytes,3,opt,name=federationID,proto3" json:"federationID,omitempty"`
	FederationVHost string             `protobuf:"bytes,4,opt,name=federationVHost,proto3" json:"federationVHost,omitempty"`
	AccountID       string             `protobuf:"bytes,11,opt,name=accountID,proto3" json:"accountID,omitempty"`
	TenantID        string             `protobuf:"bytes,12,opt,name=tenantID,proto3" json:"tenantID,omitempty"`
	NetID           string             `protobuf:"bytes,13,opt,name=netID,proto3" json:"netID,omitempty"`
	VRFID           string             `protobuf:"bytes,14,opt,name=VRFID,proto3" json:"VRFID,omitempty"`
	NodeID          string             `protobuf:"bytes,15,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
}

func (x *NodeInstanceRequest) Reset() {
	*x = NodeInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_network_node_instance_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInstanceRequest) ProtoMessage() {}

func (x *NodeInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_network_node_instance_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeInstanceRequest.ProtoReflect.Descriptor instead.
func (*NodeInstanceRequest) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_network_node_instance_proto_rawDescGZIP(), []int{4}
}

func (x *NodeInstanceRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *NodeInstanceRequest) GetLocation() *location.Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *NodeInstanceRequest) GetFederationID() string {
	if x != nil {
		return x.FederationID
	}
	return ""
}

func (x *NodeInstanceRequest) GetFederationVHost() string {
	if x != nil {
		return x.FederationVHost
	}
	return ""
}

func (x *NodeInstanceRequest) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *NodeInstanceRequest) GetTenantID() string {
	if x != nil {
		return x.TenantID
	}
	return ""
}

func (x *NodeInstanceRequest) GetNetID() string {
	if x != nil {
		return x.NetID
	}
	return ""
}

func (x *NodeInstanceRequest) GetVRFID() string {
	if x != nil {
		return x.VRFID
	}
	return ""
}

func (x *NodeInstanceRequest) GetNodeID() string {
	if x != nil {
		return x.NodeID
	}
	return ""
}

var File_mmesh_protobuf_resources_v1_network_node_instance_proto protoreflect.FileDescriptor

var file_mmesh_protobuf_resources_v1_network_node_instance_proto_rawDesc = []byte{
	0x0a, 0x37, 0x6d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x2d, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x1a, 0x2f, 0x6d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f,
	0x69, 0x61, 0x6d, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x6d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31,
	0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x33, 0x6d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31,
	0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbb, 0x04, 0x0a, 0x0c, 0x4e, 0x6f, 0x64,
	0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x6e, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x27, 0x0a, 0x07,
	0x61, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x52, 0x07, 0x61, 0x75,
	0x74, 0x68, 0x4b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x65, 0x64, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x65, 0x64, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x48, 0x6f, 0x73,
	0x74, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x50, 0x6f, 0x72,
	0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x1f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x20, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x73, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x33, 0x0a,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x19, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x31, 0x0a, 0x07, 0x6b, 0x38, 0x73, 0x4f, 0x70, 0x74, 0x73, 0x18, 0x3d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x4b, 0x75, 0x62,
	0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x4f, 0x70, 0x74, 0x73, 0x52, 0x07, 0x6b, 0x38, 0x73,
	0x4f, 0x70, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x09, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x4f, 0x70, 0x74,
	0x73, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x4f, 0x70, 0x74, 0x73, 0x52, 0x09, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x4f, 0x70, 0x74, 0x73, 0x22, 0x28, 0x0a, 0x12, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x59, 0x41, 0x4d, 0x4c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x59, 0x41, 0x4d, 0x4c,
	0x22, 0x64, 0x0a, 0x0e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x4f, 0x70,
	0x74, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x2b, 0x0a, 0x09, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x4f,
	0x70, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x69, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x69, 0x74, 0x53, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x22, 0xaf, 0x02, 0x0a, 0x13, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x65, 0x64,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x28, 0x0a,
	0x0f, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x48, 0x6f, 0x73, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x56, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49,
	0x44, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49,
	0x44, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x52, 0x46, 0x49, 0x44,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x52, 0x46, 0x49, 0x44, 0x12, 0x16, 0x0a,
	0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e,
	0x6f, 0x64, 0x65, 0x49, 0x44, 0x2a, 0x4a, 0x0a, 0x10, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x47, 0x45, 0x4e,
	0x45, 0x52, 0x49, 0x43, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x4b, 0x38, 0x53, 0x5f, 0x52, 0x45,
	0x4c, 0x41, 0x59, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x10, 0x01, 0x12, 0x12, 0x0a,
	0x0e, 0x43, 0x4c, 0x4f, 0x55, 0x44, 0x5f, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x10,
	0x02, 0x42, 0x2b, 0x5a, 0x29, 0x6d, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x64, 0x65, 0x76, 0x2f, 0x6d,
	0x2d, 0x61, 0x70, 0x69, 0x2d, 0x67, 0x6f, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mmesh_protobuf_resources_v1_network_node_instance_proto_rawDescOnce sync.Once
	file_mmesh_protobuf_resources_v1_network_node_instance_proto_rawDescData = file_mmesh_protobuf_resources_v1_network_node_instance_proto_rawDesc
)

func file_mmesh_protobuf_resources_v1_network_node_instance_proto_rawDescGZIP() []byte {
	file_mmesh_protobuf_resources_v1_network_node_instance_proto_rawDescOnce.Do(func() {
		file_mmesh_protobuf_resources_v1_network_node_instance_proto_rawDescData = protoimpl.X.CompressGZIP(file_mmesh_protobuf_resources_v1_network_node_instance_proto_rawDescData)
	})
	return file_mmesh_protobuf_resources_v1_network_node_instance_proto_rawDescData
}

var file_mmesh_protobuf_resources_v1_network_node_instance_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_mmesh_protobuf_resources_v1_network_node_instance_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_mmesh_protobuf_resources_v1_network_node_instance_proto_goTypes = []interface{}{
	(NodeInstanceType)(0),       // 0: network.NodeInstanceType
	(*NodeInstance)(nil),        // 1: network.NodeInstance
	(*NodeInstanceConfig)(nil),  // 2: network.NodeInstanceConfig
	(*KubernetesOpts)(nil),      // 3: network.KubernetesOpts
	(*CloudOpts)(nil),           // 4: network.CloudOpts
	(*NodeInstanceRequest)(nil), // 5: network.NodeInstanceRequest
	(*Node)(nil),                // 6: network.Node
	(*auth.AuthKey)(nil),        // 7: auth.AuthKey
	(*location.Location)(nil),   // 8: location.Location
}
var file_mmesh_protobuf_resources_v1_network_node_instance_proto_depIdxs = []int32{
	6, // 0: network.NodeInstance.node:type_name -> network.Node
	7, // 1: network.NodeInstance.authKey:type_name -> auth.AuthKey
	8, // 2: network.NodeInstance.location:type_name -> location.Location
	2, // 3: network.NodeInstance.config:type_name -> network.NodeInstanceConfig
	0, // 4: network.NodeInstance.type:type_name -> network.NodeInstanceType
	3, // 5: network.NodeInstance.k8sOpts:type_name -> network.KubernetesOpts
	4, // 6: network.NodeInstance.cloudOpts:type_name -> network.CloudOpts
	8, // 7: network.NodeInstanceRequest.location:type_name -> location.Location
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_mmesh_protobuf_resources_v1_network_node_instance_proto_init() }
func file_mmesh_protobuf_resources_v1_network_node_instance_proto_init() {
	if File_mmesh_protobuf_resources_v1_network_node_instance_proto != nil {
		return
	}
	file_mmesh_protobuf_resources_v1_network_node_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_mmesh_protobuf_resources_v1_network_node_instance_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_network_node_instance_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeInstanceConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_network_node_instance_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KubernetesOpts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_network_node_instance_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloudOpts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_network_node_instance_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mmesh_protobuf_resources_v1_network_node_instance_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mmesh_protobuf_resources_v1_network_node_instance_proto_goTypes,
		DependencyIndexes: file_mmesh_protobuf_resources_v1_network_node_instance_proto_depIdxs,
		EnumInfos:         file_mmesh_protobuf_resources_v1_network_node_instance_proto_enumTypes,
		MessageInfos:      file_mmesh_protobuf_resources_v1_network_node_instance_proto_msgTypes,
	}.Build()
	File_mmesh_protobuf_resources_v1_network_node_instance_proto = out.File
	file_mmesh_protobuf_resources_v1_network_node_instance_proto_rawDesc = nil
	file_mmesh_protobuf_resources_v1_network_node_instance_proto_goTypes = nil
	file_mmesh_protobuf_resources_v1_network_node_instance_proto_depIdxs = nil
}
