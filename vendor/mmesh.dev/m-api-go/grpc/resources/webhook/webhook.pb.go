// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.0
// source: mmesh/protobuf/resources/v1/webhook/webhook.proto

package webhook

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	resource "mmesh.dev/m-api-go/grpc/resources/resource"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WebhookType int32

const (
	WebhookType_WEBHOOK_TYPE_ACCOUNT       WebhookType = 0
	WebhookType_WEBHOOK_TYPE_USER          WebhookType = 1
	WebhookType_WEBHOOK_TYPE_WORKFLOW      WebhookType = 2
	WebhookType_WEBHOOK_TYPE_NODE_INSTANCE WebhookType = 3
)

// Enum value maps for WebhookType.
var (
	WebhookType_name = map[int32]string{
		0: "WEBHOOK_TYPE_ACCOUNT",
		1: "WEBHOOK_TYPE_USER",
		2: "WEBHOOK_TYPE_WORKFLOW",
		3: "WEBHOOK_TYPE_NODE_INSTANCE",
	}
	WebhookType_value = map[string]int32{
		"WEBHOOK_TYPE_ACCOUNT":       0,
		"WEBHOOK_TYPE_USER":          1,
		"WEBHOOK_TYPE_WORKFLOW":      2,
		"WEBHOOK_TYPE_NODE_INSTANCE": 3,
	}
)

func (x WebhookType) Enum() *WebhookType {
	p := new(WebhookType)
	*p = x
	return p
}

func (x WebhookType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WebhookType) Descriptor() protoreflect.EnumDescriptor {
	return file_mmesh_protobuf_resources_v1_webhook_webhook_proto_enumTypes[0].Descriptor()
}

func (WebhookType) Type() protoreflect.EnumType {
	return &file_mmesh_protobuf_resources_v1_webhook_webhook_proto_enumTypes[0]
}

func (x WebhookType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WebhookType.Descriptor instead.
func (WebhookType) EnumDescriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_webhook_webhook_proto_rawDescGZIP(), []int{0}
}

type WebhookAction int32

const (
	WebhookAction_WEBHOOK_ACTION_ACCOUNT_CONFIRMED             WebhookAction = 0
	WebhookAction_WEBHOOK_ACTION_ACCOUNT_ADMIN_EMAIL_CONFIRMED WebhookAction = 1
	WebhookAction_WEBHOOK_ACTION_ACCOUNT_ADMIN_PASSWORD_RESET  WebhookAction = 2
	WebhookAction_WEBHOOK_ACTION_USER_EMAIL_CONFIRMED          WebhookAction = 11
	WebhookAction_WEBHOOK_ACTION_USER_PASSWORD_RESET           WebhookAction = 12
	WebhookAction_WEBHOOK_ACTION_WORKFLOW_REVIEWED_TRUE        WebhookAction = 21
	WebhookAction_WEBHOOK_ACTION_WORKFLOW_REVIEWED_FALSE       WebhookAction = 22
	WebhookAction_WEBHOOK_ACTION_WORKFLOW_APPROVED_TRUE        WebhookAction = 23
	WebhookAction_WEBHOOK_ACTION_WORKFLOW_APPROVED_FALSE       WebhookAction = 24
	WebhookAction_WEBHOOK_ACTION_NODE_INSTANCE_INSTALL_LINUX   WebhookAction = 31
	WebhookAction_WEBHOOK_ACTION_ERROR_EXPIRED_WEBHOOK         WebhookAction = 1001
	WebhookAction_WEBHOOK_ACTION_ERROR_BAD_REQUEST             WebhookAction = 1002
	WebhookAction_WEBHOOK_ACTION_ERROR_INTERNAL_ERROR          WebhookAction = 1003
)

// Enum value maps for WebhookAction.
var (
	WebhookAction_name = map[int32]string{
		0:    "WEBHOOK_ACTION_ACCOUNT_CONFIRMED",
		1:    "WEBHOOK_ACTION_ACCOUNT_ADMIN_EMAIL_CONFIRMED",
		2:    "WEBHOOK_ACTION_ACCOUNT_ADMIN_PASSWORD_RESET",
		11:   "WEBHOOK_ACTION_USER_EMAIL_CONFIRMED",
		12:   "WEBHOOK_ACTION_USER_PASSWORD_RESET",
		21:   "WEBHOOK_ACTION_WORKFLOW_REVIEWED_TRUE",
		22:   "WEBHOOK_ACTION_WORKFLOW_REVIEWED_FALSE",
		23:   "WEBHOOK_ACTION_WORKFLOW_APPROVED_TRUE",
		24:   "WEBHOOK_ACTION_WORKFLOW_APPROVED_FALSE",
		31:   "WEBHOOK_ACTION_NODE_INSTANCE_INSTALL_LINUX",
		1001: "WEBHOOK_ACTION_ERROR_EXPIRED_WEBHOOK",
		1002: "WEBHOOK_ACTION_ERROR_BAD_REQUEST",
		1003: "WEBHOOK_ACTION_ERROR_INTERNAL_ERROR",
	}
	WebhookAction_value = map[string]int32{
		"WEBHOOK_ACTION_ACCOUNT_CONFIRMED":             0,
		"WEBHOOK_ACTION_ACCOUNT_ADMIN_EMAIL_CONFIRMED": 1,
		"WEBHOOK_ACTION_ACCOUNT_ADMIN_PASSWORD_RESET":  2,
		"WEBHOOK_ACTION_USER_EMAIL_CONFIRMED":          11,
		"WEBHOOK_ACTION_USER_PASSWORD_RESET":           12,
		"WEBHOOK_ACTION_WORKFLOW_REVIEWED_TRUE":        21,
		"WEBHOOK_ACTION_WORKFLOW_REVIEWED_FALSE":       22,
		"WEBHOOK_ACTION_WORKFLOW_APPROVED_TRUE":        23,
		"WEBHOOK_ACTION_WORKFLOW_APPROVED_FALSE":       24,
		"WEBHOOK_ACTION_NODE_INSTANCE_INSTALL_LINUX":   31,
		"WEBHOOK_ACTION_ERROR_EXPIRED_WEBHOOK":         1001,
		"WEBHOOK_ACTION_ERROR_BAD_REQUEST":             1002,
		"WEBHOOK_ACTION_ERROR_INTERNAL_ERROR":          1003,
	}
)

func (x WebhookAction) Enum() *WebhookAction {
	p := new(WebhookAction)
	*p = x
	return p
}

func (x WebhookAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WebhookAction) Descriptor() protoreflect.EnumDescriptor {
	return file_mmesh_protobuf_resources_v1_webhook_webhook_proto_enumTypes[1].Descriptor()
}

func (WebhookAction) Type() protoreflect.EnumType {
	return &file_mmesh_protobuf_resources_v1_webhook_webhook_proto_enumTypes[1]
}

func (x WebhookAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WebhookAction.Descriptor instead.
func (WebhookAction) EnumDescriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_webhook_webhook_proto_rawDescGZIP(), []int{1}
}

type Webhook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WebhookID     string        `protobuf:"bytes,1,opt,name=webhookID,proto3" json:"webhookID,omitempty"`
	AccountID     string        `protobuf:"bytes,2,opt,name=accountID,proto3" json:"accountID,omitempty"`
	LocationID    string        `protobuf:"bytes,3,opt,name=locationID,proto3" json:"locationID,omitempty"`
	FederationID  string        `protobuf:"bytes,4,opt,name=federationID,proto3" json:"federationID,omitempty"`
	CallbackToken string        `protobuf:"bytes,11,opt,name=callbackToken,proto3" json:"callbackToken,omitempty"` // according to type: accountToken, userToken, wfToken...
	Type          WebhookType   `protobuf:"varint,12,opt,name=type,proto3,enum=webhook.WebhookType" json:"type,omitempty"`
	Action        WebhookAction `protobuf:"varint,13,opt,name=action,proto3,enum=webhook.WebhookAction" json:"action,omitempty"`
	Payload       []byte        `protobuf:"bytes,17,opt,name=payload,proto3" json:"payload,omitempty"` // store for binary data (install scripts for nodes...)
	Email         string        `protobuf:"bytes,21,opt,name=email,proto3" json:"email,omitempty"`     // destination email and action responsible
	Expiration    int64         `protobuf:"varint,101,opt,name=expiration,proto3" json:"expiration,omitempty"`
	Used          bool          `protobuf:"varint,111,opt,name=used,proto3" json:"used,omitempty"`
}

func (x *Webhook) Reset() {
	*x = Webhook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_webhook_webhook_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Webhook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Webhook) ProtoMessage() {}

func (x *Webhook) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_webhook_webhook_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Webhook.ProtoReflect.Descriptor instead.
func (*Webhook) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_webhook_webhook_proto_rawDescGZIP(), []int{0}
}

func (x *Webhook) GetWebhookID() string {
	if x != nil {
		return x.WebhookID
	}
	return ""
}

func (x *Webhook) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *Webhook) GetLocationID() string {
	if x != nil {
		return x.LocationID
	}
	return ""
}

func (x *Webhook) GetFederationID() string {
	if x != nil {
		return x.FederationID
	}
	return ""
}

func (x *Webhook) GetCallbackToken() string {
	if x != nil {
		return x.CallbackToken
	}
	return ""
}

func (x *Webhook) GetType() WebhookType {
	if x != nil {
		return x.Type
	}
	return WebhookType_WEBHOOK_TYPE_ACCOUNT
}

func (x *Webhook) GetAction() WebhookAction {
	if x != nil {
		return x.Action
	}
	return WebhookAction_WEBHOOK_ACTION_ACCOUNT_CONFIRMED
}

func (x *Webhook) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *Webhook) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Webhook) GetExpiration() int64 {
	if x != nil {
		return x.Expiration
	}
	return 0
}

func (x *Webhook) GetUsed() bool {
	if x != nil {
		return x.Used
	}
	return false
}

type Webhooks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta     *resource.ListResponse `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	Webhooks []*Webhook             `protobuf:"bytes,2,rep,name=webhooks,proto3" json:"webhooks,omitempty"`
}

func (x *Webhooks) Reset() {
	*x = Webhooks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_webhook_webhook_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Webhooks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Webhooks) ProtoMessage() {}

func (x *Webhooks) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_webhook_webhook_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Webhooks.ProtoReflect.Descriptor instead.
func (*Webhooks) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_webhook_webhook_proto_rawDescGZIP(), []int{1}
}

func (x *Webhooks) GetMeta() *resource.ListResponse {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Webhooks) GetWebhooks() []*Webhook {
	if x != nil {
		return x.Webhooks
	}
	return nil
}

type ListWebhooksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta *resource.ListRequest `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *ListWebhooksRequest) Reset() {
	*x = ListWebhooksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_webhook_webhook_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWebhooksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWebhooksRequest) ProtoMessage() {}

func (x *ListWebhooksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_webhook_webhook_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWebhooksRequest.ProtoReflect.Descriptor instead.
func (*ListWebhooksRequest) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_webhook_webhook_proto_rawDescGZIP(), []int{2}
}

func (x *ListWebhooksRequest) GetMeta() *resource.ListRequest {
	if x != nil {
		return x.Meta
	}
	return nil
}

var File_mmesh_protobuf_resources_v1_webhook_webhook_proto protoreflect.FileDescriptor

var file_mmesh_protobuf_resources_v1_webhook_webhook_proto_rawDesc = []byte{
	0x0a, 0x31, 0x6d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2f, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x07, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x1a, 0x2f, 0x6d, 0x6d,
	0x65, 0x73, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xed, 0x02,
	0x0a, 0x07, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x65, 0x62,
	0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x65, 0x64,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x61, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x28, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e,
	0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x77, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x64, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x75, 0x73, 0x65, 0x64, 0x22, 0x64, 0x0a,
	0x08, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x12, 0x2a, 0x0a, 0x04, 0x6d, 0x65, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x08, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f,
	0x6b, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x08, 0x77, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x73, 0x22, 0x40, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x04, 0x6d, 0x65,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x04, 0x6d, 0x65, 0x74, 0x61, 0x2a, 0x79, 0x0a, 0x0b, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x57, 0x45, 0x42, 0x48, 0x4f, 0x4f, 0x4b, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x00, 0x12, 0x15,
	0x0a, 0x11, 0x57, 0x45, 0x42, 0x48, 0x4f, 0x4f, 0x4b, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55,
	0x53, 0x45, 0x52, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x57, 0x45, 0x42, 0x48, 0x4f, 0x4f, 0x4b,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x57, 0x4f, 0x52, 0x4b, 0x46, 0x4c, 0x4f, 0x57, 0x10, 0x02,
	0x12, 0x1e, 0x0a, 0x1a, 0x57, 0x45, 0x42, 0x48, 0x4f, 0x4f, 0x4b, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x03,
	0x2a, 0xc3, 0x04, 0x0a, 0x0d, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x20, 0x57, 0x45, 0x42, 0x48, 0x4f, 0x4f, 0x4b, 0x5f, 0x41, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x43, 0x4f, 0x4e,
	0x46, 0x49, 0x52, 0x4d, 0x45, 0x44, 0x10, 0x00, 0x12, 0x30, 0x0a, 0x2c, 0x57, 0x45, 0x42, 0x48,
	0x4f, 0x4f, 0x4b, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x5f, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x5f, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x43,
	0x4f, 0x4e, 0x46, 0x49, 0x52, 0x4d, 0x45, 0x44, 0x10, 0x01, 0x12, 0x2f, 0x0a, 0x2b, 0x57, 0x45,
	0x42, 0x48, 0x4f, 0x4f, 0x4b, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x43, 0x43,
	0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x57,
	0x4f, 0x52, 0x44, 0x5f, 0x52, 0x45, 0x53, 0x45, 0x54, 0x10, 0x02, 0x12, 0x27, 0x0a, 0x23, 0x57,
	0x45, 0x42, 0x48, 0x4f, 0x4f, 0x4b, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x52, 0x4d,
	0x45, 0x44, 0x10, 0x0b, 0x12, 0x26, 0x0a, 0x22, 0x57, 0x45, 0x42, 0x48, 0x4f, 0x4f, 0x4b, 0x5f,
	0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x41, 0x53, 0x53,
	0x57, 0x4f, 0x52, 0x44, 0x5f, 0x52, 0x45, 0x53, 0x45, 0x54, 0x10, 0x0c, 0x12, 0x29, 0x0a, 0x25,
	0x57, 0x45, 0x42, 0x48, 0x4f, 0x4f, 0x4b, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x57,
	0x4f, 0x52, 0x4b, 0x46, 0x4c, 0x4f, 0x57, 0x5f, 0x52, 0x45, 0x56, 0x49, 0x45, 0x57, 0x45, 0x44,
	0x5f, 0x54, 0x52, 0x55, 0x45, 0x10, 0x15, 0x12, 0x2a, 0x0a, 0x26, 0x57, 0x45, 0x42, 0x48, 0x4f,
	0x4f, 0x4b, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x57, 0x4f, 0x52, 0x4b, 0x46, 0x4c,
	0x4f, 0x57, 0x5f, 0x52, 0x45, 0x56, 0x49, 0x45, 0x57, 0x45, 0x44, 0x5f, 0x46, 0x41, 0x4c, 0x53,
	0x45, 0x10, 0x16, 0x12, 0x29, 0x0a, 0x25, 0x57, 0x45, 0x42, 0x48, 0x4f, 0x4f, 0x4b, 0x5f, 0x41,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x57, 0x4f, 0x52, 0x4b, 0x46, 0x4c, 0x4f, 0x57, 0x5f, 0x41,
	0x50, 0x50, 0x52, 0x4f, 0x56, 0x45, 0x44, 0x5f, 0x54, 0x52, 0x55, 0x45, 0x10, 0x17, 0x12, 0x2a,
	0x0a, 0x26, 0x57, 0x45, 0x42, 0x48, 0x4f, 0x4f, 0x4b, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x57, 0x4f, 0x52, 0x4b, 0x46, 0x4c, 0x4f, 0x57, 0x5f, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56,
	0x45, 0x44, 0x5f, 0x46, 0x41, 0x4c, 0x53, 0x45, 0x10, 0x18, 0x12, 0x2e, 0x0a, 0x2a, 0x57, 0x45,
	0x42, 0x48, 0x4f, 0x4f, 0x4b, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x44,
	0x45, 0x5f, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x49, 0x4e, 0x53, 0x54, 0x41,
	0x4c, 0x4c, 0x5f, 0x4c, 0x49, 0x4e, 0x55, 0x58, 0x10, 0x1f, 0x12, 0x29, 0x0a, 0x24, 0x57, 0x45,
	0x42, 0x48, 0x4f, 0x4f, 0x4b, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x5f, 0x57, 0x45, 0x42, 0x48, 0x4f,
	0x4f, 0x4b, 0x10, 0xe9, 0x07, 0x12, 0x25, 0x0a, 0x20, 0x57, 0x45, 0x42, 0x48, 0x4f, 0x4f, 0x4b,
	0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x42, 0x41,
	0x44, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0xea, 0x07, 0x12, 0x28, 0x0a, 0x23,
	0x57, 0x45, 0x42, 0x48, 0x4f, 0x4f, 0x4b, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0xeb, 0x07, 0x42, 0x2b, 0x5a, 0x29, 0x6d, 0x6d, 0x65, 0x73, 0x68, 0x2e,
	0x64, 0x65, 0x76, 0x2f, 0x6d, 0x2d, 0x61, 0x70, 0x69, 0x2d, 0x67, 0x6f, 0x2f, 0x67, 0x72, 0x70,
	0x63, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x77, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mmesh_protobuf_resources_v1_webhook_webhook_proto_rawDescOnce sync.Once
	file_mmesh_protobuf_resources_v1_webhook_webhook_proto_rawDescData = file_mmesh_protobuf_resources_v1_webhook_webhook_proto_rawDesc
)

func file_mmesh_protobuf_resources_v1_webhook_webhook_proto_rawDescGZIP() []byte {
	file_mmesh_protobuf_resources_v1_webhook_webhook_proto_rawDescOnce.Do(func() {
		file_mmesh_protobuf_resources_v1_webhook_webhook_proto_rawDescData = protoimpl.X.CompressGZIP(file_mmesh_protobuf_resources_v1_webhook_webhook_proto_rawDescData)
	})
	return file_mmesh_protobuf_resources_v1_webhook_webhook_proto_rawDescData
}

var file_mmesh_protobuf_resources_v1_webhook_webhook_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_mmesh_protobuf_resources_v1_webhook_webhook_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_mmesh_protobuf_resources_v1_webhook_webhook_proto_goTypes = []interface{}{
	(WebhookType)(0),              // 0: webhook.WebhookType
	(WebhookAction)(0),            // 1: webhook.WebhookAction
	(*Webhook)(nil),               // 2: webhook.Webhook
	(*Webhooks)(nil),              // 3: webhook.Webhooks
	(*ListWebhooksRequest)(nil),   // 4: webhook.ListWebhooksRequest
	(*resource.ListResponse)(nil), // 5: resource.ListResponse
	(*resource.ListRequest)(nil),  // 6: resource.ListRequest
}
var file_mmesh_protobuf_resources_v1_webhook_webhook_proto_depIdxs = []int32{
	0, // 0: webhook.Webhook.type:type_name -> webhook.WebhookType
	1, // 1: webhook.Webhook.action:type_name -> webhook.WebhookAction
	5, // 2: webhook.Webhooks.meta:type_name -> resource.ListResponse
	2, // 3: webhook.Webhooks.webhooks:type_name -> webhook.Webhook
	6, // 4: webhook.ListWebhooksRequest.meta:type_name -> resource.ListRequest
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_mmesh_protobuf_resources_v1_webhook_webhook_proto_init() }
func file_mmesh_protobuf_resources_v1_webhook_webhook_proto_init() {
	if File_mmesh_protobuf_resources_v1_webhook_webhook_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mmesh_protobuf_resources_v1_webhook_webhook_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Webhook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_webhook_webhook_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Webhooks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_webhook_webhook_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWebhooksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mmesh_protobuf_resources_v1_webhook_webhook_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mmesh_protobuf_resources_v1_webhook_webhook_proto_goTypes,
		DependencyIndexes: file_mmesh_protobuf_resources_v1_webhook_webhook_proto_depIdxs,
		EnumInfos:         file_mmesh_protobuf_resources_v1_webhook_webhook_proto_enumTypes,
		MessageInfos:      file_mmesh_protobuf_resources_v1_webhook_webhook_proto_msgTypes,
	}.Build()
	File_mmesh_protobuf_resources_v1_webhook_webhook_proto = out.File
	file_mmesh_protobuf_resources_v1_webhook_webhook_proto_rawDesc = nil
	file_mmesh_protobuf_resources_v1_webhook_webhook_proto_goTypes = nil
	file_mmesh_protobuf_resources_v1_webhook_webhook_proto_depIdxs = nil
}
