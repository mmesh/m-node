// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.26.0--rc3
// source: mmesh/protobuf/resources/v1/topology/topology.proto

package topology

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TopologyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID string `protobuf:"bytes,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	TenantID  string `protobuf:"bytes,11,opt,name=tenantID,proto3" json:"tenantID,omitempty"`
}

func (x *TopologyRequest) Reset() {
	*x = TopologyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopologyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopologyRequest) ProtoMessage() {}

func (x *TopologyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopologyRequest.ProtoReflect.Descriptor instead.
func (*TopologyRequest) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_topology_topology_proto_rawDescGZIP(), []int{0}
}

func (x *TopologyRequest) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *TopologyRequest) GetTenantID() string {
	if x != nil {
		return x.TenantID
	}
	return ""
}

type TopologyTags struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tags []string `protobuf:"bytes,1000,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *TopologyTags) Reset() {
	*x = TopologyTags{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopologyTags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopologyTags) ProtoMessage() {}

func (x *TopologyTags) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopologyTags.ProtoReflect.Descriptor instead.
func (*TopologyTags) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_topology_topology_proto_rawDescGZIP(), []int{1}
}

func (x *TopologyTags) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type TopologyStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stats *Stats `protobuf:"bytes,1,opt,name=stats,proto3" json:"stats,omitempty"`
}

func (x *TopologyStats) Reset() {
	*x = TopologyStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopologyStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopologyStats) ProtoMessage() {}

func (x *TopologyStats) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopologyStats.ProtoReflect.Descriptor instead.
func (*TopologyStats) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_topology_topology_proto_rawDescGZIP(), []int{2}
}

func (x *TopologyStats) GetStats() *Stats {
	if x != nil {
		return x.Stats
	}
	return nil
}

type TopologyNetworkListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID string `protobuf:"bytes,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	TenantID  string `protobuf:"bytes,2,opt,name=tenantID,proto3" json:"tenantID,omitempty"`
}

func (x *TopologyNetworkListRequest) Reset() {
	*x = TopologyNetworkListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopologyNetworkListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopologyNetworkListRequest) ProtoMessage() {}

func (x *TopologyNetworkListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopologyNetworkListRequest.ProtoReflect.Descriptor instead.
func (*TopologyNetworkListRequest) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_topology_topology_proto_rawDescGZIP(), []int{3}
}

func (x *TopologyNetworkListRequest) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *TopologyNetworkListRequest) GetTenantID() string {
	if x != nil {
		return x.TenantID
	}
	return ""
}

type TopologyNetworkList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Networks []*Network `protobuf:"bytes,1,rep,name=networks,proto3" json:"networks,omitempty"`
}

func (x *TopologyNetworkList) Reset() {
	*x = TopologyNetworkList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopologyNetworkList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopologyNetworkList) ProtoMessage() {}

func (x *TopologyNetworkList) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopologyNetworkList.ProtoReflect.Descriptor instead.
func (*TopologyNetworkList) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_topology_topology_proto_rawDescGZIP(), []int{4}
}

func (x *TopologyNetworkList) GetNetworks() []*Network {
	if x != nil {
		return x.Networks
	}
	return nil
}

type TopologySubnetListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID string `protobuf:"bytes,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	TenantID  string `protobuf:"bytes,2,opt,name=tenantID,proto3" json:"tenantID,omitempty"`
	NetID     string `protobuf:"bytes,3,opt,name=netID,proto3" json:"netID,omitempty"`
}

func (x *TopologySubnetListRequest) Reset() {
	*x = TopologySubnetListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopologySubnetListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopologySubnetListRequest) ProtoMessage() {}

func (x *TopologySubnetListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopologySubnetListRequest.ProtoReflect.Descriptor instead.
func (*TopologySubnetListRequest) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_topology_topology_proto_rawDescGZIP(), []int{5}
}

func (x *TopologySubnetListRequest) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *TopologySubnetListRequest) GetTenantID() string {
	if x != nil {
		return x.TenantID
	}
	return ""
}

func (x *TopologySubnetListRequest) GetNetID() string {
	if x != nil {
		return x.NetID
	}
	return ""
}

type TopologySubnetList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subnets []*Subnet `protobuf:"bytes,1,rep,name=subnets,proto3" json:"subnets,omitempty"`
}

func (x *TopologySubnetList) Reset() {
	*x = TopologySubnetList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopologySubnetList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopologySubnetList) ProtoMessage() {}

func (x *TopologySubnetList) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopologySubnetList.ProtoReflect.Descriptor instead.
func (*TopologySubnetList) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_topology_topology_proto_rawDescGZIP(), []int{6}
}

func (x *TopologySubnetList) GetSubnets() []*Subnet {
	if x != nil {
		return x.Subnets
	}
	return nil
}

type TopologyNodeListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID string      `protobuf:"bytes,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	TenantID  string      `protobuf:"bytes,2,opt,name=tenantID,proto3" json:"tenantID,omitempty"`
	Filter    *NodeFilter `protobuf:"bytes,101,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *TopologyNodeListRequest) Reset() {
	*x = TopologyNodeListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopologyNodeListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopologyNodeListRequest) ProtoMessage() {}

func (x *TopologyNodeListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopologyNodeListRequest.ProtoReflect.Descriptor instead.
func (*TopologyNodeListRequest) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_topology_topology_proto_rawDescGZIP(), []int{7}
}

func (x *TopologyNodeListRequest) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *TopologyNodeListRequest) GetTenantID() string {
	if x != nil {
		return x.TenantID
	}
	return ""
}

func (x *TopologyNodeListRequest) GetFilter() *NodeFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type TopologyNodeList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*TopologyNode `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *TopologyNodeList) Reset() {
	*x = TopologyNodeList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopologyNodeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopologyNodeList) ProtoMessage() {}

func (x *TopologyNodeList) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopologyNodeList.ProtoReflect.Descriptor instead.
func (*TopologyNodeList) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_topology_topology_proto_rawDescGZIP(), []int{8}
}

func (x *TopologyNodeList) GetNodes() []*TopologyNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type TopologyVSListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID string `protobuf:"bytes,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	TenantID  string `protobuf:"bytes,2,opt,name=tenantID,proto3" json:"tenantID,omitempty"`
	NetID     string `protobuf:"bytes,3,opt,name=netID,proto3" json:"netID,omitempty"`
}

func (x *TopologyVSListRequest) Reset() {
	*x = TopologyVSListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopologyVSListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopologyVSListRequest) ProtoMessage() {}

func (x *TopologyVSListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopologyVSListRequest.ProtoReflect.Descriptor instead.
func (*TopologyVSListRequest) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_topology_topology_proto_rawDescGZIP(), []int{9}
}

func (x *TopologyVSListRequest) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *TopologyVSListRequest) GetTenantID() string {
	if x != nil {
		return x.TenantID
	}
	return ""
}

func (x *TopologyVSListRequest) GetNetID() string {
	if x != nil {
		return x.NetID
	}
	return ""
}

type TopologyVSList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VSs []*VS `protobuf:"bytes,1,rep,name=VSs,proto3" json:"VSs,omitempty"`
}

func (x *TopologyVSList) Reset() {
	*x = TopologyVSList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopologyVSList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopologyVSList) ProtoMessage() {}

func (x *TopologyVSList) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopologyVSList.ProtoReflect.Descriptor instead.
func (*TopologyVSList) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_topology_topology_proto_rawDescGZIP(), []int{10}
}

func (x *TopologyVSList) GetVSs() []*VS {
	if x != nil {
		return x.VSs
	}
	return nil
}

type TopologyNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node      *Node         `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	Endpoints []*Endpoint   `protobuf:"bytes,11,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	Online    bool          `protobuf:"varint,101,opt,name=online,proto3" json:"online,omitempty"`
	Alerts    *AlertMetrics `protobuf:"bytes,111,opt,name=alerts,proto3" json:"alerts,omitempty"`
}

func (x *TopologyNode) Reset() {
	*x = TopologyNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopologyNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopologyNode) ProtoMessage() {}

func (x *TopologyNode) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopologyNode.ProtoReflect.Descriptor instead.
func (*TopologyNode) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_topology_topology_proto_rawDescGZIP(), []int{11}
}

func (x *TopologyNode) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *TopologyNode) GetEndpoints() []*Endpoint {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *TopologyNode) GetOnline() bool {
	if x != nil {
		return x.Online
	}
	return false
}

func (x *TopologyNode) GetAlerts() *AlertMetrics {
	if x != nil {
		return x.Alerts
	}
	return nil
}

type Stats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalNetworks  int32    `protobuf:"varint,11,opt,name=totalNetworks,proto3" json:"totalNetworks,omitempty"`
	TotalSubnets   int32    `protobuf:"varint,21,opt,name=totalSubnets,proto3" json:"totalSubnets,omitempty"`
	TotalNodes     int32    `protobuf:"varint,31,opt,name=totalNodes,proto3" json:"totalNodes,omitempty"`
	TotalEndpoints int32    `protobuf:"varint,37,opt,name=totalEndpoints,proto3" json:"totalEndpoints,omitempty"`
	TotalVSs       int32    `protobuf:"varint,51,opt,name=totalVSs,proto3" json:"totalVSs,omitempty"`
	Metrics        *Metrics `protobuf:"bytes,101,opt,name=metrics,proto3" json:"metrics,omitempty"`
}

func (x *Stats) Reset() {
	*x = Stats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stats) ProtoMessage() {}

func (x *Stats) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stats.ProtoReflect.Descriptor instead.
func (*Stats) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_topology_topology_proto_rawDescGZIP(), []int{12}
}

func (x *Stats) GetTotalNetworks() int32 {
	if x != nil {
		return x.TotalNetworks
	}
	return 0
}

func (x *Stats) GetTotalSubnets() int32 {
	if x != nil {
		return x.TotalSubnets
	}
	return 0
}

func (x *Stats) GetTotalNodes() int32 {
	if x != nil {
		return x.TotalNodes
	}
	return 0
}

func (x *Stats) GetTotalEndpoints() int32 {
	if x != nil {
		return x.TotalEndpoints
	}
	return 0
}

func (x *Stats) GetTotalVSs() int32 {
	if x != nil {
		return x.TotalVSs
	}
	return 0
}

func (x *Stats) GetMetrics() *Metrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type Metrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodesByStatus    *ByStatus     `protobuf:"bytes,11,opt,name=nodesByStatus,proto3" json:"nodesByStatus,omitempty"`
	NodesByNodeClass *ByNodeClass  `protobuf:"bytes,21,opt,name=nodesByNodeClass,proto3" json:"nodesByNodeClass,omitempty"`
	NodesByNodeState *ByNodeState  `protobuf:"bytes,31,opt,name=nodesByNodeState,proto3" json:"nodesByNodeState,omitempty"`
	NodesByOS        *ByOS         `protobuf:"bytes,41,opt,name=nodesByOS,proto3" json:"nodesByOS,omitempty"`
	Alerts           *AlertMetrics `protobuf:"bytes,101,opt,name=alerts,proto3" json:"alerts,omitempty"`
	Ops              *OpsMetrics   `protobuf:"bytes,201,opt,name=ops,proto3" json:"ops,omitempty"`
}

func (x *Metrics) Reset() {
	*x = Metrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metrics) ProtoMessage() {}

func (x *Metrics) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metrics.ProtoReflect.Descriptor instead.
func (*Metrics) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_topology_topology_proto_rawDescGZIP(), []int{13}
}

func (x *Metrics) GetNodesByStatus() *ByStatus {
	if x != nil {
		return x.NodesByStatus
	}
	return nil
}

func (x *Metrics) GetNodesByNodeClass() *ByNodeClass {
	if x != nil {
		return x.NodesByNodeClass
	}
	return nil
}

func (x *Metrics) GetNodesByNodeState() *ByNodeState {
	if x != nil {
		return x.NodesByNodeState
	}
	return nil
}

func (x *Metrics) GetNodesByOS() *ByOS {
	if x != nil {
		return x.NodesByOS
	}
	return nil
}

func (x *Metrics) GetAlerts() *AlertMetrics {
	if x != nil {
		return x.Alerts
	}
	return nil
}

func (x *Metrics) GetOps() *OpsMetrics {
	if x != nil {
		return x.Ops
	}
	return nil
}

type ByStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Online  int32 `protobuf:"varint,11,opt,name=online,proto3" json:"online,omitempty"`
	Offline int32 `protobuf:"varint,21,opt,name=offline,proto3" json:"offline,omitempty"`
}

func (x *ByStatus) Reset() {
	*x = ByStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ByStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByStatus) ProtoMessage() {}

func (x *ByStatus) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByStatus.ProtoReflect.Descriptor instead.
func (*ByStatus) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_topology_topology_proto_rawDescGZIP(), []int{14}
}

func (x *ByStatus) GetOnline() int32 {
	if x != nil {
		return x.Online
	}
	return 0
}

func (x *ByStatus) GetOffline() int32 {
	if x != nil {
		return x.Offline
	}
	return 0
}

type ByNodeClass struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Compute    int32 `protobuf:"varint,11,opt,name=compute,proto3" json:"compute,omitempty"`
	Serverless int32 `protobuf:"varint,21,opt,name=serverless,proto3" json:"serverless,omitempty"`
}

func (x *ByNodeClass) Reset() {
	*x = ByNodeClass{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ByNodeClass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByNodeClass) ProtoMessage() {}

func (x *ByNodeClass) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByNodeClass.ProtoReflect.Descriptor instead.
func (*ByNodeClass) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_topology_topology_proto_rawDescGZIP(), []int{15}
}

func (x *ByNodeClass) GetCompute() int32 {
	if x != nil {
		return x.Compute
	}
	return 0
}

func (x *ByNodeClass) GetServerless() int32 {
	if x != nil {
		return x.Serverless
	}
	return 0
}

type ByNodeState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Connected    int32 `protobuf:"varint,11,opt,name=connected,proto3" json:"connected,omitempty"`
	Stubby       int32 `protobuf:"varint,21,opt,name=stubby,proto3" json:"stubby,omitempty"`
	PendingSetup int32 `protobuf:"varint,31,opt,name=pendingSetup,proto3" json:"pendingSetup,omitempty"`
}

func (x *ByNodeState) Reset() {
	*x = ByNodeState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ByNodeState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByNodeState) ProtoMessage() {}

func (x *ByNodeState) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByNodeState.ProtoReflect.Descriptor instead.
func (*ByNodeState) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_topology_topology_proto_rawDescGZIP(), []int{16}
}

func (x *ByNodeState) GetConnected() int32 {
	if x != nil {
		return x.Connected
	}
	return 0
}

func (x *ByNodeState) GetStubby() int32 {
	if x != nil {
		return x.Stubby
	}
	return 0
}

func (x *ByNodeState) GetPendingSetup() int32 {
	if x != nil {
		return x.PendingSetup
	}
	return 0
}

type ByOS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unknown int32 `protobuf:"varint,1,opt,name=unknown,proto3" json:"unknown,omitempty"`
	Linux   int32 `protobuf:"varint,11,opt,name=linux,proto3" json:"linux,omitempty"`
	MacOS   int32 `protobuf:"varint,21,opt,name=macOS,proto3" json:"macOS,omitempty"`
	Windows int32 `protobuf:"varint,31,opt,name=windows,proto3" json:"windows,omitempty"`
}

func (x *ByOS) Reset() {
	*x = ByOS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ByOS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByOS) ProtoMessage() {}

func (x *ByOS) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByOS.ProtoReflect.Descriptor instead.
func (*ByOS) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_topology_topology_proto_rawDescGZIP(), []int{17}
}

func (x *ByOS) GetUnknown() int32 {
	if x != nil {
		return x.Unknown
	}
	return 0
}

func (x *ByOS) GetLinux() int32 {
	if x != nil {
		return x.Linux
	}
	return 0
}

func (x *ByOS) GetMacOS() int32 {
	if x != nil {
		return x.MacOS
	}
	return 0
}

func (x *ByOS) GetWindows() int32 {
	if x != nil {
		return x.Windows
	}
	return 0
}

type AlertMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalAlerts    int32 `protobuf:"varint,1,opt,name=totalAlerts,proto3" json:"totalAlerts,omitempty"`
	TotalTriggered int32 `protobuf:"varint,11,opt,name=totalTriggered,proto3" json:"totalTriggered,omitempty"`
	TotalResolved  int32 `protobuf:"varint,12,opt,name=totalResolved,proto3" json:"totalResolved,omitempty"`
	TotalInfo      int32 `protobuf:"varint,21,opt,name=totalInfo,proto3" json:"totalInfo,omitempty"`
	TotalWarning   int32 `protobuf:"varint,22,opt,name=totalWarning,proto3" json:"totalWarning,omitempty"`
	TotalError     int32 `protobuf:"varint,23,opt,name=totalError,proto3" json:"totalError,omitempty"`
	TotalCritical  int32 `protobuf:"varint,24,opt,name=totalCritical,proto3" json:"totalCritical,omitempty"`
}

func (x *AlertMetrics) Reset() {
	*x = AlertMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertMetrics) ProtoMessage() {}

func (x *AlertMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertMetrics.ProtoReflect.Descriptor instead.
func (*AlertMetrics) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_topology_topology_proto_rawDescGZIP(), []int{18}
}

func (x *AlertMetrics) GetTotalAlerts() int32 {
	if x != nil {
		return x.TotalAlerts
	}
	return 0
}

func (x *AlertMetrics) GetTotalTriggered() int32 {
	if x != nil {
		return x.TotalTriggered
	}
	return 0
}

func (x *AlertMetrics) GetTotalResolved() int32 {
	if x != nil {
		return x.TotalResolved
	}
	return 0
}

func (x *AlertMetrics) GetTotalInfo() int32 {
	if x != nil {
		return x.TotalInfo
	}
	return 0
}

func (x *AlertMetrics) GetTotalWarning() int32 {
	if x != nil {
		return x.TotalWarning
	}
	return 0
}

func (x *AlertMetrics) GetTotalError() int32 {
	if x != nil {
		return x.TotalError
	}
	return 0
}

func (x *AlertMetrics) GetTotalCritical() int32 {
	if x != nil {
		return x.TotalCritical
	}
	return 0
}

type OpsMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalProjects  int32            `protobuf:"varint,11,opt,name=totalProjects,proto3" json:"totalProjects,omitempty"`
	TotalWorkflows int32            `protobuf:"varint,21,opt,name=totalWorkflows,proto3" json:"totalWorkflows,omitempty"`
	TotalTasks     int32            `protobuf:"varint,31,opt,name=totalTasks,proto3" json:"totalTasks,omitempty"`
	LastResult     *WorkflowMetrics `protobuf:"bytes,101,opt,name=lastResult,proto3" json:"lastResult,omitempty"`
}

func (x *OpsMetrics) Reset() {
	*x = OpsMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpsMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpsMetrics) ProtoMessage() {}

func (x *OpsMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpsMetrics.ProtoReflect.Descriptor instead.
func (*OpsMetrics) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_topology_topology_proto_rawDescGZIP(), []int{19}
}

func (x *OpsMetrics) GetTotalProjects() int32 {
	if x != nil {
		return x.TotalProjects
	}
	return 0
}

func (x *OpsMetrics) GetTotalWorkflows() int32 {
	if x != nil {
		return x.TotalWorkflows
	}
	return 0
}

func (x *OpsMetrics) GetTotalTasks() int32 {
	if x != nil {
		return x.TotalTasks
	}
	return 0
}

func (x *OpsMetrics) GetLastResult() *WorkflowMetrics {
	if x != nil {
		return x.LastResult
	}
	return nil
}

type WorkflowMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnknownResultWorkflows int32 `protobuf:"varint,1,opt,name=unknownResultWorkflows,proto3" json:"unknownResultWorkflows,omitempty"`
	SuccessfulWorkflows    int32 `protobuf:"varint,11,opt,name=successfulWorkflows,proto3" json:"successfulWorkflows,omitempty"`
	FailedWorkflows        int32 `protobuf:"varint,21,opt,name=failedWorkflows,proto3" json:"failedWorkflows,omitempty"`
}

func (x *WorkflowMetrics) Reset() {
	*x = WorkflowMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowMetrics) ProtoMessage() {}

func (x *WorkflowMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowMetrics.ProtoReflect.Descriptor instead.
func (*WorkflowMetrics) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_topology_topology_proto_rawDescGZIP(), []int{20}
}

func (x *WorkflowMetrics) GetUnknownResultWorkflows() int32 {
	if x != nil {
		return x.UnknownResultWorkflows
	}
	return 0
}

func (x *WorkflowMetrics) GetSuccessfulWorkflows() int32 {
	if x != nil {
		return x.SuccessfulWorkflows
	}
	return 0
}

func (x *WorkflowMetrics) GetFailedWorkflows() int32 {
	if x != nil {
		return x.FailedWorkflows
	}
	return 0
}

type NodeSummaryMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes map[string]*NodeSummary `protobuf:"bytes,11,rep,name=nodes,proto3" json:"nodes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // map[nodeID]*NodeSummary
}

func (x *NodeSummaryMap) Reset() {
	*x = NodeSummaryMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeSummaryMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeSummaryMap) ProtoMessage() {}

func (x *NodeSummaryMap) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeSummaryMap.ProtoReflect.Descriptor instead.
func (*NodeSummaryMap) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_topology_topology_proto_rawDescGZIP(), []int{21}
}

func (x *NodeSummaryMap) GetNodes() map[string]*NodeSummary {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type NodeSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID          string `protobuf:"bytes,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	TenantID           string `protobuf:"bytes,11,opt,name=tenantID,proto3" json:"tenantID,omitempty"`
	TenantName         string `protobuf:"bytes,12,opt,name=tenantName,proto3" json:"tenantName,omitempty"`
	TenantDescription  string `protobuf:"bytes,13,opt,name=tenantDescription,proto3" json:"tenantDescription,omitempty"`
	NetID              string `protobuf:"bytes,21,opt,name=netID,proto3" json:"netID,omitempty"`
	NetworkDescription string `protobuf:"bytes,22,opt,name=networkDescription,proto3" json:"networkDescription,omitempty"`
	NetworkCIDR        string `protobuf:"bytes,23,opt,name=networkCIDR,proto3" json:"networkCIDR,omitempty"`
	NetworkLocationID  string `protobuf:"bytes,24,opt,name=networkLocationID,proto3" json:"networkLocationID,omitempty"`
	SubnetID           string `protobuf:"bytes,31,opt,name=subnetID,proto3" json:"subnetID,omitempty"`
	SubnetDescription  string `protobuf:"bytes,32,opt,name=subnetDescription,proto3" json:"subnetDescription,omitempty"`
	SubnetCIDR         string `protobuf:"bytes,33,opt,name=subnetCIDR,proto3" json:"subnetCIDR,omitempty"`
	NodeID             string `protobuf:"bytes,41,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	NodeName           string `protobuf:"bytes,42,opt,name=nodeName,proto3" json:"nodeName,omitempty"`
	NodeDescription    string `protobuf:"bytes,43,opt,name=nodeDescription,proto3" json:"nodeDescription,omitempty"`
	NodeCanRelay       bool   `protobuf:"varint,47,opt,name=nodeCanRelay,proto3" json:"nodeCanRelay,omitempty"`
	NodeKubernetesGw   bool   `protobuf:"varint,48,opt,name=nodeKubernetesGw,proto3" json:"nodeKubernetesGw,omitempty"`
	NodeOffline        bool   `protobuf:"varint,49,opt,name=nodeOffline,proto3" json:"nodeOffline,omitempty"`
}

func (x *NodeSummary) Reset() {
	*x = NodeSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeSummary) ProtoMessage() {}

func (x *NodeSummary) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeSummary.ProtoReflect.Descriptor instead.
func (*NodeSummary) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_topology_topology_proto_rawDescGZIP(), []int{22}
}

func (x *NodeSummary) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *NodeSummary) GetTenantID() string {
	if x != nil {
		return x.TenantID
	}
	return ""
}

func (x *NodeSummary) GetTenantName() string {
	if x != nil {
		return x.TenantName
	}
	return ""
}

func (x *NodeSummary) GetTenantDescription() string {
	if x != nil {
		return x.TenantDescription
	}
	return ""
}

func (x *NodeSummary) GetNetID() string {
	if x != nil {
		return x.NetID
	}
	return ""
}

func (x *NodeSummary) GetNetworkDescription() string {
	if x != nil {
		return x.NetworkDescription
	}
	return ""
}

func (x *NodeSummary) GetNetworkCIDR() string {
	if x != nil {
		return x.NetworkCIDR
	}
	return ""
}

func (x *NodeSummary) GetNetworkLocationID() string {
	if x != nil {
		return x.NetworkLocationID
	}
	return ""
}

func (x *NodeSummary) GetSubnetID() string {
	if x != nil {
		return x.SubnetID
	}
	return ""
}

func (x *NodeSummary) GetSubnetDescription() string {
	if x != nil {
		return x.SubnetDescription
	}
	return ""
}

func (x *NodeSummary) GetSubnetCIDR() string {
	if x != nil {
		return x.SubnetCIDR
	}
	return ""
}

func (x *NodeSummary) GetNodeID() string {
	if x != nil {
		return x.NodeID
	}
	return ""
}

func (x *NodeSummary) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *NodeSummary) GetNodeDescription() string {
	if x != nil {
		return x.NodeDescription
	}
	return ""
}

func (x *NodeSummary) GetNodeCanRelay() bool {
	if x != nil {
		return x.NodeCanRelay
	}
	return false
}

func (x *NodeSummary) GetNodeKubernetesGw() bool {
	if x != nil {
		return x.NodeKubernetesGw
	}
	return false
}

func (x *NodeSummary) GetNodeOffline() bool {
	if x != nil {
		return x.NodeOffline
	}
	return false
}

var File_mmesh_protobuf_resources_v1_topology_topology_proto protoreflect.FileDescriptor

var file_mmesh_protobuf_resources_v1_topology_topology_proto_rawDesc = []byte{
	0x0a, 0x33, 0x6d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x6f,
	0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2f, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x1a,
	0x32, 0x6d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x6f, 0x70,
	0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x31, 0x6d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31,
	0x2f, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2f, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x6d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x2f, 0x76, 0x31, 0x2f, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2f, 0x6e, 0x6f, 0x64,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2d, 0x6d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2f, 0x76, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4b, 0x0a, 0x0f, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f,
	0x67, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x49, 0x44, 0x22, 0x23, 0x0a, 0x0c, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x54,
	0x61, 0x67, 0x73, 0x12, 0x13, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0xe8, 0x07, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x36, 0x0a, 0x0d, 0x54, 0x6f, 0x70, 0x6f,
	0x6c, 0x6f, 0x67, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x25, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x6c,
	0x6f, 0x67, 0x79, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x22, 0x56, 0x0a, 0x1a, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x44, 0x0a, 0x13, 0x54, 0x6f, 0x70, 0x6f,
	0x6c, 0x6f, 0x67, 0x79, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x2d, 0x0a, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x52, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x22, 0x6b,
	0x0a, 0x19, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x22, 0x40, 0x0a, 0x12, 0x54,
	0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x2a, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x53, 0x75,
	0x62, 0x6e, 0x65, 0x74, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x73, 0x22, 0x81, 0x01,
	0x0a, 0x17, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x65, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x22, 0x40, 0x0a, 0x10, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x4e, 0x6f, 0x64,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e,
	0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f,
	0x64, 0x65, 0x73, 0x22, 0x67, 0x0a, 0x15, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x56,
	0x53, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x22, 0x30, 0x0a, 0x0e,
	0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x56, 0x53, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e,
	0x0a, 0x03, 0x56, 0x53, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x74, 0x6f,
	0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x56, 0x53, 0x52, 0x03, 0x56, 0x53, 0x73, 0x22, 0xac,
	0x01, 0x0a, 0x0c, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x12,
	0x22, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6e,
	0x6f, 0x64, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67,
	0x79, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18,
	0x65, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x2e, 0x0a,
	0x06, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x06, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x22, 0xe2, 0x01,
	0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x12, 0x22, 0x0a,
	0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x73, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x18,
	0x1f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65,
	0x73, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x18, 0x25, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x56, 0x53, 0x73, 0x18, 0x33, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x56, 0x53, 0x73, 0x12, 0x2b, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67,
	0x79, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x22, 0xd0, 0x02, 0x0a, 0x07, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x38,
	0x0a, 0x0d, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x42, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79,
	0x2e, 0x42, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0d, 0x6e, 0x6f, 0x64, 0x65, 0x73,
	0x42, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x41, 0x0a, 0x10, 0x6e, 0x6f, 0x64, 0x65,
	0x73, 0x42, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x42, 0x79,
	0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x10, 0x6e, 0x6f, 0x64, 0x65, 0x73,
	0x42, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x41, 0x0a, 0x10, 0x6e,
	0x6f, 0x64, 0x65, 0x73, 0x42, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79,
	0x2e, 0x42, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x10, 0x6e, 0x6f,
	0x64, 0x65, 0x73, 0x42, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2c,
	0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x42, 0x79, 0x4f, 0x53, 0x18, 0x29, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x42, 0x79, 0x4f,
	0x53, 0x52, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x42, 0x79, 0x4f, 0x53, 0x12, 0x2e, 0x0a, 0x06,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74,
	0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x52, 0x06, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x12, 0x27, 0x0a, 0x03,
	0x6f, 0x70, 0x73, 0x18, 0xc9, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x6f, 0x70,
	0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x4f, 0x70, 0x73, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x52, 0x03, 0x6f, 0x70, 0x73, 0x22, 0x3c, 0x0a, 0x08, 0x42, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x66, 0x66,
	0x6c, 0x69, 0x6e, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6f, 0x66, 0x66, 0x6c,
	0x69, 0x6e, 0x65, 0x22, 0x47, 0x0a, 0x0b, 0x42, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x22, 0x67, 0x0a, 0x0b,
	0x42, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x75,
	0x62, 0x62, 0x79, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x75, 0x62, 0x62,
	0x79, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74, 0x75,
	0x70, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x53, 0x65, 0x74, 0x75, 0x70, 0x22, 0x66, 0x0a, 0x04, 0x42, 0x79, 0x4f, 0x53, 0x12, 0x18, 0x0a,
	0x07, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x75, 0x78,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x75, 0x78, 0x12, 0x14, 0x0a,
	0x05, 0x6d, 0x61, 0x63, 0x4f, 0x53, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x61,
	0x63, 0x4f, 0x53, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x18, 0x1f,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x22, 0x86, 0x02,
	0x0a, 0x0c, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73,
	0x12, 0x26, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x0c,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x24, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x72,
	0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x22, 0xb5, 0x01, 0x0a, 0x0a, 0x4f, 0x70, 0x73, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x61, 0x73, 0x6b,
	0x73, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x61,
	0x73, 0x6b, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f,
	0x67, 0x79, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xa5,
	0x01, 0x0a, 0x0f, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x12, 0x36, 0x0a, 0x16, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x16, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x66, 0x75, 0x6c, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x12, 0x28, 0x0a, 0x0f,
	0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x57, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x22, 0x9c, 0x01, 0x0a, 0x0e, 0x4e, 0x6f, 0x64, 0x65, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x4d, 0x61, 0x70, 0x12, 0x39, 0x0a, 0x05, 0x6e, 0x6f, 0x64,
	0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x6c,
	0x6f, 0x67, 0x79, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x4d,
	0x61, 0x70, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x6e,
	0x6f, 0x64, 0x65, 0x73, 0x1a, 0x4f, 0x0a, 0x0a, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe5, 0x04, 0x0a, 0x0b, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x12,
	0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x2c, 0x0a, 0x11, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x65,
	0x74, 0x49, 0x44, 0x12, 0x2e, 0x0a, 0x12, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x49,
	0x44, 0x52, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x43, 0x49, 0x44, 0x52, 0x12, 0x2c, 0x0a, 0x11, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x18,
	0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x12,
	0x2c, 0x0a, 0x11, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x75, 0x62, 0x6e,
	0x65, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x43, 0x49, 0x44, 0x52, 0x18, 0x21, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x43, 0x49, 0x44, 0x52, 0x12, 0x16, 0x0a,
	0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e,
	0x6f, 0x64, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x28, 0x0a, 0x0f, 0x6e, 0x6f, 0x64, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6e, 0x6f, 0x64, 0x65,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x6e,
	0x6f, 0x64, 0x65, 0x43, 0x61, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x2f, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x61, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x12,
	0x2a, 0x0a, 0x10, 0x6e, 0x6f, 0x64, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65,
	0x73, 0x47, 0x77, 0x18, 0x30, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x6e, 0x6f, 0x64, 0x65, 0x4b,
	0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x47, 0x77, 0x12, 0x20, 0x0a, 0x0b, 0x6e,
	0x6f, 0x64, 0x65, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x31, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x6e, 0x6f, 0x64, 0x65, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x42, 0x2c, 0x5a,
	0x2a, 0x6d, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x64, 0x65, 0x76, 0x2f, 0x6d, 0x2d, 0x61, 0x70, 0x69,
	0x2d, 0x67, 0x6f, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x2f, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_mmesh_protobuf_resources_v1_topology_topology_proto_rawDescOnce sync.Once
	file_mmesh_protobuf_resources_v1_topology_topology_proto_rawDescData = file_mmesh_protobuf_resources_v1_topology_topology_proto_rawDesc
)

func file_mmesh_protobuf_resources_v1_topology_topology_proto_rawDescGZIP() []byte {
	file_mmesh_protobuf_resources_v1_topology_topology_proto_rawDescOnce.Do(func() {
		file_mmesh_protobuf_resources_v1_topology_topology_proto_rawDescData = protoimpl.X.CompressGZIP(file_mmesh_protobuf_resources_v1_topology_topology_proto_rawDescData)
	})
	return file_mmesh_protobuf_resources_v1_topology_topology_proto_rawDescData
}

var file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_mmesh_protobuf_resources_v1_topology_topology_proto_goTypes = []interface{}{
	(*TopologyRequest)(nil),            // 0: topology.TopologyRequest
	(*TopologyTags)(nil),               // 1: topology.TopologyTags
	(*TopologyStats)(nil),              // 2: topology.TopologyStats
	(*TopologyNetworkListRequest)(nil), // 3: topology.TopologyNetworkListRequest
	(*TopologyNetworkList)(nil),        // 4: topology.TopologyNetworkList
	(*TopologySubnetListRequest)(nil),  // 5: topology.TopologySubnetListRequest
	(*TopologySubnetList)(nil),         // 6: topology.TopologySubnetList
	(*TopologyNodeListRequest)(nil),    // 7: topology.TopologyNodeListRequest
	(*TopologyNodeList)(nil),           // 8: topology.TopologyNodeList
	(*TopologyVSListRequest)(nil),      // 9: topology.TopologyVSListRequest
	(*TopologyVSList)(nil),             // 10: topology.TopologyVSList
	(*TopologyNode)(nil),               // 11: topology.TopologyNode
	(*Stats)(nil),                      // 12: topology.Stats
	(*Metrics)(nil),                    // 13: topology.Metrics
	(*ByStatus)(nil),                   // 14: topology.ByStatus
	(*ByNodeClass)(nil),                // 15: topology.ByNodeClass
	(*ByNodeState)(nil),                // 16: topology.ByNodeState
	(*ByOS)(nil),                       // 17: topology.ByOS
	(*AlertMetrics)(nil),               // 18: topology.AlertMetrics
	(*OpsMetrics)(nil),                 // 19: topology.OpsMetrics
	(*WorkflowMetrics)(nil),            // 20: topology.WorkflowMetrics
	(*NodeSummaryMap)(nil),             // 21: topology.NodeSummaryMap
	(*NodeSummary)(nil),                // 22: topology.NodeSummary
	nil,                                // 23: topology.NodeSummaryMap.NodesEntry
	(*Network)(nil),                    // 24: topology.Network
	(*Subnet)(nil),                     // 25: topology.Subnet
	(*NodeFilter)(nil),                 // 26: topology.NodeFilter
	(*VS)(nil),                         // 27: topology.VS
	(*Node)(nil),                       // 28: topology.Node
	(*Endpoint)(nil),                   // 29: topology.Endpoint
}
var file_mmesh_protobuf_resources_v1_topology_topology_proto_depIdxs = []int32{
	12, // 0: topology.TopologyStats.stats:type_name -> topology.Stats
	24, // 1: topology.TopologyNetworkList.networks:type_name -> topology.Network
	25, // 2: topology.TopologySubnetList.subnets:type_name -> topology.Subnet
	26, // 3: topology.TopologyNodeListRequest.filter:type_name -> topology.NodeFilter
	11, // 4: topology.TopologyNodeList.nodes:type_name -> topology.TopologyNode
	27, // 5: topology.TopologyVSList.VSs:type_name -> topology.VS
	28, // 6: topology.TopologyNode.node:type_name -> topology.Node
	29, // 7: topology.TopologyNode.endpoints:type_name -> topology.Endpoint
	18, // 8: topology.TopologyNode.alerts:type_name -> topology.AlertMetrics
	13, // 9: topology.Stats.metrics:type_name -> topology.Metrics
	14, // 10: topology.Metrics.nodesByStatus:type_name -> topology.ByStatus
	15, // 11: topology.Metrics.nodesByNodeClass:type_name -> topology.ByNodeClass
	16, // 12: topology.Metrics.nodesByNodeState:type_name -> topology.ByNodeState
	17, // 13: topology.Metrics.nodesByOS:type_name -> topology.ByOS
	18, // 14: topology.Metrics.alerts:type_name -> topology.AlertMetrics
	19, // 15: topology.Metrics.ops:type_name -> topology.OpsMetrics
	20, // 16: topology.OpsMetrics.lastResult:type_name -> topology.WorkflowMetrics
	23, // 17: topology.NodeSummaryMap.nodes:type_name -> topology.NodeSummaryMap.NodesEntry
	22, // 18: topology.NodeSummaryMap.NodesEntry.value:type_name -> topology.NodeSummary
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_mmesh_protobuf_resources_v1_topology_topology_proto_init() }
func file_mmesh_protobuf_resources_v1_topology_topology_proto_init() {
	if File_mmesh_protobuf_resources_v1_topology_topology_proto != nil {
		return
	}
	file_mmesh_protobuf_resources_v1_topology_network_proto_init()
	file_mmesh_protobuf_resources_v1_topology_subnet_proto_init()
	file_mmesh_protobuf_resources_v1_topology_node_proto_init()
	file_mmesh_protobuf_resources_v1_topology_vs_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopologyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopologyTags); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopologyStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopologyNetworkListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopologyNetworkList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopologySubnetListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopologySubnetList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopologyNodeListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopologyNodeList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopologyVSListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopologyVSList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopologyNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ByStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ByNodeClass); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ByNodeState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ByOS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpsMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeSummaryMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mmesh_protobuf_resources_v1_topology_topology_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mmesh_protobuf_resources_v1_topology_topology_proto_goTypes,
		DependencyIndexes: file_mmesh_protobuf_resources_v1_topology_topology_proto_depIdxs,
		MessageInfos:      file_mmesh_protobuf_resources_v1_topology_topology_proto_msgTypes,
	}.Build()
	File_mmesh_protobuf_resources_v1_topology_topology_proto = out.File
	file_mmesh_protobuf_resources_v1_topology_topology_proto_rawDesc = nil
	file_mmesh_protobuf_resources_v1_topology_topology_proto_goTypes = nil
	file_mmesh_protobuf_resources_v1_topology_topology_proto_depIdxs = nil
}
