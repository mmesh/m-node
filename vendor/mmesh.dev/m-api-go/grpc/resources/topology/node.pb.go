// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.0--rc2
// source: mmesh/protobuf/resources/v1/topology/node.proto

package topology

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	datetime "mmesh.dev/m-api-go/grpc/common/datetime"
	metrics "mmesh.dev/m-api-go/grpc/resources/metrics"
	resource "mmesh.dev/m-api-go/grpc/resources/resource"
	tenant "mmesh.dev/m-api-go/grpc/resources/tenant"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NodeType int32

const (
	NodeType_GENERIC     NodeType = 0
	NodeType_K8S_GATEWAY NodeType = 11
	NodeType_K8S_POD     NodeType = 12
)

// Enum value maps for NodeType.
var (
	NodeType_name = map[int32]string{
		0:  "GENERIC",
		11: "K8S_GATEWAY",
		12: "K8S_POD",
	}
	NodeType_value = map[string]int32{
		"GENERIC":     0,
		"K8S_GATEWAY": 11,
		"K8S_POD":     12,
	}
)

func (x NodeType) Enum() *NodeType {
	p := new(NodeType)
	*p = x
	return p
}

func (x NodeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeType) Descriptor() protoreflect.EnumDescriptor {
	return file_mmesh_protobuf_resources_v1_topology_node_proto_enumTypes[0].Descriptor()
}

func (NodeType) Type() protoreflect.EnumType {
	return &file_mmesh_protobuf_resources_v1_topology_node_proto_enumTypes[0]
}

func (x NodeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NodeType.Descriptor instead.
func (NodeType) EnumDescriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_topology_node_proto_rawDescGZIP(), []int{0}
}

type NetworkAccessTokenPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID string `protobuf:"bytes,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	TenantID  string `protobuf:"bytes,2,opt,name=tenantID,proto3" json:"tenantID,omitempty"`
	// string netID = 3;
	// string subnetID = 4;
	NodeID    string `protobuf:"bytes,5,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	AccessKey string `protobuf:"bytes,11,opt,name=accessKey,proto3" json:"accessKey,omitempty"` // generated accessKey
}

func (x *NetworkAccessTokenPayload) Reset() {
	*x = NetworkAccessTokenPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkAccessTokenPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkAccessTokenPayload) ProtoMessage() {}

func (x *NetworkAccessTokenPayload) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkAccessTokenPayload.ProtoReflect.Descriptor instead.
func (*NetworkAccessTokenPayload) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_topology_node_proto_rawDescGZIP(), []int{0}
}

func (x *NetworkAccessTokenPayload) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *NetworkAccessTokenPayload) GetTenantID() string {
	if x != nil {
		return x.TenantID
	}
	return ""
}

func (x *NetworkAccessTokenPayload) GetNodeID() string {
	if x != nil {
		return x.NodeID
	}
	return ""
}

func (x *NetworkAccessTokenPayload) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

type NodeTokenPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkAccessToken string `protobuf:"bytes,1,opt,name=networkAccessToken,proto3" json:"networkAccessToken,omitempty"` // b64-encoded & encripted NetworkAccessTokenPayload struct
	ControllerEndpoint string `protobuf:"bytes,11,opt,name=controllerEndpoint,proto3" json:"controllerEndpoint,omitempty"`
}

func (x *NodeTokenPayload) Reset() {
	*x = NodeTokenPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeTokenPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeTokenPayload) ProtoMessage() {}

func (x *NodeTokenPayload) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeTokenPayload.ProtoReflect.Descriptor instead.
func (*NodeTokenPayload) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_topology_node_proto_rawDescGZIP(), []int{1}
}

func (x *NodeTokenPayload) GetNetworkAccessToken() string {
	if x != nil {
		return x.NetworkAccessToken
	}
	return ""
}

func (x *NodeTokenPayload) GetControllerEndpoint() string {
	if x != nil {
		return x.ControllerEndpoint
	}
	return ""
}

type NewNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID   string   `protobuf:"bytes,11,opt,name=accountID,proto3" json:"accountID,omitempty"`
	TenantID    string   `protobuf:"bytes,12,opt,name=tenantID,proto3" json:"tenantID,omitempty"`
	NetID       string   `protobuf:"bytes,13,opt,name=netID,proto3" json:"netID,omitempty"`
	SubnetID    string   `protobuf:"bytes,14,opt,name=subnetID,proto3" json:"subnetID,omitempty"`
	NodeName    string   `protobuf:"bytes,21,opt,name=nodeName,proto3" json:"nodeName,omitempty"`
	Description string   `protobuf:"bytes,22,opt,name=description,proto3" json:"description,omitempty"`
	Port        int32    `protobuf:"varint,31,opt,name=port,proto3" json:"port,omitempty"`
	Type        NodeType `protobuf:"varint,41,opt,name=type,proto3,enum=topology.NodeType" json:"type,omitempty"`
}

func (x *NewNodeRequest) Reset() {
	*x = NewNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewNodeRequest) ProtoMessage() {}

func (x *NewNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewNodeRequest.ProtoReflect.Descriptor instead.
func (*NewNodeRequest) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_topology_node_proto_rawDescGZIP(), []int{2}
}

func (x *NewNodeRequest) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *NewNodeRequest) GetTenantID() string {
	if x != nil {
		return x.TenantID
	}
	return ""
}

func (x *NewNodeRequest) GetNetID() string {
	if x != nil {
		return x.NetID
	}
	return ""
}

func (x *NewNodeRequest) GetSubnetID() string {
	if x != nil {
		return x.SubnetID
	}
	return ""
}

func (x *NewNodeRequest) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *NewNodeRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *NewNodeRequest) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *NewNodeRequest) GetType() NodeType {
	if x != nil {
		return x.Type
	}
	return NodeType_GENERIC
}

type UpdateNodeMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeReq     *NodeReq `protobuf:"bytes,1,opt,name=nodeReq,proto3" json:"nodeReq,omitempty"`
	NodeName    string   `protobuf:"bytes,11,opt,name=nodeName,proto3" json:"nodeName,omitempty"`
	Description string   `protobuf:"bytes,21,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *UpdateNodeMetadataRequest) Reset() {
	*x = UpdateNodeMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNodeMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNodeMetadataRequest) ProtoMessage() {}

func (x *UpdateNodeMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNodeMetadataRequest.ProtoReflect.Descriptor instead.
func (*UpdateNodeMetadataRequest) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_topology_node_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateNodeMetadataRequest) GetNodeReq() *NodeReq {
	if x != nil {
		return x.NodeReq
	}
	return nil
}

func (x *UpdateNodeMetadataRequest) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *UpdateNodeMetadataRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type UpdateNodeNetworkingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeReq           *NodeReq `protobuf:"bytes,1,opt,name=nodeReq,proto3" json:"nodeReq,omitempty"`
	NetID             string   `protobuf:"bytes,11,opt,name=netID,proto3" json:"netID,omitempty"`
	SubnetID          string   `protobuf:"bytes,21,opt,name=subnetID,proto3" json:"subnetID,omitempty"`
	Tags              []string `protobuf:"bytes,31,rep,name=tags,proto3" json:"tags,omitempty"`
	Priority          int32    `protobuf:"varint,41,opt,name=priority,proto3" json:"priority,omitempty"`
	KubernetesGw      bool     `protobuf:"varint,51,opt,name=kubernetesGw,proto3" json:"kubernetesGw,omitempty"`
	DisableRelay      bool     `protobuf:"varint,61,opt,name=disableRelay,proto3" json:"disableRelay,omitempty"`
	DisableNetworking bool     `protobuf:"varint,72,opt,name=disableNetworking,proto3" json:"disableNetworking,omitempty"`
}

func (x *UpdateNodeNetworkingRequest) Reset() {
	*x = UpdateNodeNetworkingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNodeNetworkingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNodeNetworkingRequest) ProtoMessage() {}

func (x *UpdateNodeNetworkingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNodeNetworkingRequest.ProtoReflect.Descriptor instead.
func (*UpdateNodeNetworkingRequest) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_topology_node_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateNodeNetworkingRequest) GetNodeReq() *NodeReq {
	if x != nil {
		return x.NodeReq
	}
	return nil
}

func (x *UpdateNodeNetworkingRequest) GetNetID() string {
	if x != nil {
		return x.NetID
	}
	return ""
}

func (x *UpdateNodeNetworkingRequest) GetSubnetID() string {
	if x != nil {
		return x.SubnetID
	}
	return ""
}

func (x *UpdateNodeNetworkingRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *UpdateNodeNetworkingRequest) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *UpdateNodeNetworkingRequest) GetKubernetesGw() bool {
	if x != nil {
		return x.KubernetesGw
	}
	return false
}

func (x *UpdateNodeNetworkingRequest) GetDisableRelay() bool {
	if x != nil {
		return x.DisableRelay
	}
	return false
}

func (x *UpdateNodeNetworkingRequest) GetDisableNetworking() bool {
	if x != nil {
		return x.DisableNetworking
	}
	return false
}

type UpdateNodeManagementRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeReq               *NodeReq `protobuf:"bytes,1,opt,name=nodeReq,proto3" json:"nodeReq,omitempty"`
	DisableOps            bool     `protobuf:"varint,11,opt,name=disableOps,proto3" json:"disableOps,omitempty"`
	DisableExec           bool     `protobuf:"varint,21,opt,name=disableExec,proto3" json:"disableExec,omitempty"`
	DisableTransfer       bool     `protobuf:"varint,31,opt,name=disableTransfer,proto3" json:"disableTransfer,omitempty"`
	DisablePortForwarding bool     `protobuf:"varint,41,opt,name=disablePortForwarding,proto3" json:"disablePortForwarding,omitempty"`
}

func (x *UpdateNodeManagementRequest) Reset() {
	*x = UpdateNodeManagementRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNodeManagementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNodeManagementRequest) ProtoMessage() {}

func (x *UpdateNodeManagementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNodeManagementRequest.ProtoReflect.Descriptor instead.
func (*UpdateNodeManagementRequest) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_topology_node_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateNodeManagementRequest) GetNodeReq() *NodeReq {
	if x != nil {
		return x.NodeReq
	}
	return nil
}

func (x *UpdateNodeManagementRequest) GetDisableOps() bool {
	if x != nil {
		return x.DisableOps
	}
	return false
}

func (x *UpdateNodeManagementRequest) GetDisableExec() bool {
	if x != nil {
		return x.DisableExec
	}
	return false
}

func (x *UpdateNodeManagementRequest) GetDisableTransfer() bool {
	if x != nil {
		return x.DisableTransfer
	}
	return false
}

func (x *UpdateNodeManagementRequest) GetDisablePortForwarding() bool {
	if x != nil {
		return x.DisablePortForwarding
	}
	return false
}

type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID string `protobuf:"bytes,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	TenantID  string `protobuf:"bytes,2,opt,name=tenantID,proto3" json:"tenantID,omitempty"`
	// temp
	NetID        string                `protobuf:"bytes,3,opt,name=netID,proto3" json:"netID,omitempty"`       // temp
	SubnetID     string                `protobuf:"bytes,4,opt,name=subnetID,proto3" json:"subnetID,omitempty"` // temp
	NodeID       string                `protobuf:"bytes,5,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	NodeToken    string                `protobuf:"bytes,11,opt,name=nodeToken,proto3" json:"nodeToken,omitempty"` // b64-encoded NodeTokenPayload struct
	Cfg          *NodeCfg              `protobuf:"bytes,31,opt,name=cfg,proto3" json:"cfg,omitempty"`
	Agent        *Agent                `protobuf:"bytes,41,opt,name=agent,proto3" json:"agent,omitempty"`
	Endpoints    map[string]*Endpoint  `protobuf:"bytes,51,rep,name=endpoints,proto3" json:"endpoints,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // map[endpointID]*Endpoint
	EventMetrics *metrics.EventMetrics `protobuf:"bytes,61,opt,name=eventMetrics,proto3" json:"eventMetrics,omitempty"`
	ReplicaSet   bool                  `protobuf:"varint,101,opt,name=replicaSet,proto3" json:"replicaSet,omitempty"` // for kubernetes pods
	LastSeen     int64                 `protobuf:"varint,201,opt,name=lastSeen,proto3" json:"lastSeen,omitempty"`
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_topology_node_proto_rawDescGZIP(), []int{6}
}

func (x *Node) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *Node) GetTenantID() string {
	if x != nil {
		return x.TenantID
	}
	return ""
}

func (x *Node) GetNetID() string {
	if x != nil {
		return x.NetID
	}
	return ""
}

func (x *Node) GetSubnetID() string {
	if x != nil {
		return x.SubnetID
	}
	return ""
}

func (x *Node) GetNodeID() string {
	if x != nil {
		return x.NodeID
	}
	return ""
}

func (x *Node) GetNodeToken() string {
	if x != nil {
		return x.NodeToken
	}
	return ""
}

func (x *Node) GetCfg() *NodeCfg {
	if x != nil {
		return x.Cfg
	}
	return nil
}

func (x *Node) GetAgent() *Agent {
	if x != nil {
		return x.Agent
	}
	return nil
}

func (x *Node) GetEndpoints() map[string]*Endpoint {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *Node) GetEventMetrics() *metrics.EventMetrics {
	if x != nil {
		return x.EventMetrics
	}
	return nil
}

func (x *Node) GetReplicaSet() bool {
	if x != nil {
		return x.ReplicaSet
	}
	return false
}

func (x *Node) GetLastSeen() int64 {
	if x != nil {
		return x.LastSeen
	}
	return 0
}

type Nodes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta  *resource.ListResponse `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	Nodes []*Node                `protobuf:"bytes,2,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *Nodes) Reset() {
	*x = Nodes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Nodes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Nodes) ProtoMessage() {}

func (x *Nodes) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Nodes.ProtoReflect.Descriptor instead.
func (*Nodes) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_topology_node_proto_rawDescGZIP(), []int{7}
}

func (x *Nodes) GetMeta() *resource.ListResponse {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Nodes) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type ListNodesByTenantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta   *resource.ListRequest `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	Tenant *tenant.TenantReq     `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
}

func (x *ListNodesByTenantRequest) Reset() {
	*x = ListNodesByTenantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNodesByTenantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodesByTenantRequest) ProtoMessage() {}

func (x *ListNodesByTenantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodesByTenantRequest.ProtoReflect.Descriptor instead.
func (*ListNodesByTenantRequest) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_topology_node_proto_rawDescGZIP(), []int{8}
}

func (x *ListNodesByTenantRequest) GetMeta() *resource.ListRequest {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *ListNodesByTenantRequest) GetTenant() *tenant.TenantReq {
	if x != nil {
		return x.Tenant
	}
	return nil
}

type ListNodesBySubnetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta   *resource.ListRequest `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	Subnet *SubnetReq            `protobuf:"bytes,2,opt,name=subnet,proto3" json:"subnet,omitempty"`
}

func (x *ListNodesBySubnetRequest) Reset() {
	*x = ListNodesBySubnetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNodesBySubnetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodesBySubnetRequest) ProtoMessage() {}

func (x *ListNodesBySubnetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodesBySubnetRequest.ProtoReflect.Descriptor instead.
func (*ListNodesBySubnetRequest) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_topology_node_proto_rawDescGZIP(), []int{9}
}

func (x *ListNodesBySubnetRequest) GetMeta() *resource.ListRequest {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *ListNodesBySubnetRequest) GetSubnet() *SubnetReq {
	if x != nil {
		return x.Subnet
	}
	return nil
}

type NodeCfg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeName          string           `protobuf:"bytes,1,opt,name=nodeName,proto3" json:"nodeName,omitempty"`
	Description       string           `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	NetID             string           `protobuf:"bytes,11,opt,name=netID,proto3" json:"netID,omitempty"`
	SubnetID          string           `protobuf:"bytes,12,opt,name=subnetID,proto3" json:"subnetID,omitempty"`
	Tags              []string         `protobuf:"bytes,15,rep,name=tags,proto3" json:"tags,omitempty"`
	Priority          int32            `protobuf:"varint,21,opt,name=priority,proto3" json:"priority,omitempty"`
	KubernetesGw      bool             `protobuf:"varint,31,opt,name=kubernetesGw,proto3" json:"kubernetesGw,omitempty"`
	DisableRelay      bool             `protobuf:"varint,51,opt,name=disableRelay,proto3" json:"disableRelay,omitempty"`
	DisableNetworking bool             `protobuf:"varint,52,opt,name=disableNetworking,proto3" json:"disableNetworking,omitempty"`
	Management        *NodeManagement  `protobuf:"bytes,61,opt,name=management,proto3" json:"management,omitempty"`
	Maintenance       *NodeMaintenance `protobuf:"bytes,71,opt,name=maintenance,proto3" json:"maintenance,omitempty"`
}

func (x *NodeCfg) Reset() {
	*x = NodeCfg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeCfg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeCfg) ProtoMessage() {}

func (x *NodeCfg) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeCfg.ProtoReflect.Descriptor instead.
func (*NodeCfg) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_topology_node_proto_rawDescGZIP(), []int{10}
}

func (x *NodeCfg) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *NodeCfg) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *NodeCfg) GetNetID() string {
	if x != nil {
		return x.NetID
	}
	return ""
}

func (x *NodeCfg) GetSubnetID() string {
	if x != nil {
		return x.SubnetID
	}
	return ""
}

func (x *NodeCfg) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *NodeCfg) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *NodeCfg) GetKubernetesGw() bool {
	if x != nil {
		return x.KubernetesGw
	}
	return false
}

func (x *NodeCfg) GetDisableRelay() bool {
	if x != nil {
		return x.DisableRelay
	}
	return false
}

func (x *NodeCfg) GetDisableNetworking() bool {
	if x != nil {
		return x.DisableNetworking
	}
	return false
}

func (x *NodeCfg) GetManagement() *NodeManagement {
	if x != nil {
		return x.Management
	}
	return nil
}

func (x *NodeCfg) GetMaintenance() *NodeMaintenance {
	if x != nil {
		return x.Maintenance
	}
	return nil
}

type NodeManagement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisableExec           bool `protobuf:"varint,1,opt,name=disableExec,proto3" json:"disableExec,omitempty"`
	DisableTransfer       bool `protobuf:"varint,2,opt,name=disableTransfer,proto3" json:"disableTransfer,omitempty"`
	DisablePortForwarding bool `protobuf:"varint,3,opt,name=disablePortForwarding,proto3" json:"disablePortForwarding,omitempty"`
	DisableOps            bool `protobuf:"varint,11,opt,name=disableOps,proto3" json:"disableOps,omitempty"`
}

func (x *NodeManagement) Reset() {
	*x = NodeManagement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeManagement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeManagement) ProtoMessage() {}

func (x *NodeManagement) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeManagement.ProtoReflect.Descriptor instead.
func (*NodeManagement) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_topology_node_proto_rawDescGZIP(), []int{11}
}

func (x *NodeManagement) GetDisableExec() bool {
	if x != nil {
		return x.DisableExec
	}
	return false
}

func (x *NodeManagement) GetDisableTransfer() bool {
	if x != nil {
		return x.DisableTransfer
	}
	return false
}

func (x *NodeManagement) GetDisablePortForwarding() bool {
	if x != nil {
		return x.DisablePortForwarding
	}
	return false
}

func (x *NodeManagement) GetDisableOps() bool {
	if x != nil {
		return x.DisableOps
	}
	return false
}

type NodeMaintenance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AutoUpdate bool               `protobuf:"varint,1,opt,name=autoUpdate,proto3" json:"autoUpdate,omitempty"`
	Schedule   *datetime.DateTime `protobuf:"bytes,2,opt,name=schedule,proto3" json:"schedule,omitempty"`
}

func (x *NodeMaintenance) Reset() {
	*x = NodeMaintenance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeMaintenance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeMaintenance) ProtoMessage() {}

func (x *NodeMaintenance) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeMaintenance.ProtoReflect.Descriptor instead.
func (*NodeMaintenance) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_topology_node_proto_rawDescGZIP(), []int{12}
}

func (x *NodeMaintenance) GetAutoUpdate() bool {
	if x != nil {
		return x.AutoUpdate
	}
	return false
}

func (x *NodeMaintenance) GetSchedule() *datetime.DateTime {
	if x != nil {
		return x.Schedule
	}
	return nil
}

type Agent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	P2PHostID string `protobuf:"bytes,1,opt,name=P2PHostID,proto3" json:"P2PHostID,omitempty"`
	Hostname  string `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Port      int32  `protobuf:"varint,11,opt,name=port,proto3" json:"port,omitempty"`
	// string transport = 12;
	DNSPort      int32  `protobuf:"varint,15,opt,name=DNSPort,proto3" json:"DNSPort,omitempty"`
	ExternalIPv4 string `protobuf:"bytes,21,opt,name=externalIPv4,proto3" json:"externalIPv4,omitempty"`
	// string externalPort = 22;
	CanRelay bool          `protobuf:"varint,25,opt,name=canRelay,proto3" json:"canRelay,omitempty"`
	MAddrs   []string      `protobuf:"bytes,31,rep,name=MAddrs,proto3" json:"MAddrs,omitempty"`
	Routes   *Routes       `protobuf:"bytes,41,opt,name=routes,proto3" json:"routes,omitempty"`
	Metrics  *AgentMetrics `protobuf:"bytes,101,opt,name=metrics,proto3" json:"metrics,omitempty"`
	Version  string        `protobuf:"bytes,1000,opt,name=version,proto3" json:"version,omitempty"`
	DevMode  bool          `protobuf:"varint,1001,opt,name=devMode,proto3" json:"devMode,omitempty"`
}

func (x *Agent) Reset() {
	*x = Agent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Agent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Agent) ProtoMessage() {}

func (x *Agent) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Agent.ProtoReflect.Descriptor instead.
func (*Agent) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_topology_node_proto_rawDescGZIP(), []int{13}
}

func (x *Agent) GetP2PHostID() string {
	if x != nil {
		return x.P2PHostID
	}
	return ""
}

func (x *Agent) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *Agent) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Agent) GetDNSPort() int32 {
	if x != nil {
		return x.DNSPort
	}
	return 0
}

func (x *Agent) GetExternalIPv4() string {
	if x != nil {
		return x.ExternalIPv4
	}
	return ""
}

func (x *Agent) GetCanRelay() bool {
	if x != nil {
		return x.CanRelay
	}
	return false
}

func (x *Agent) GetMAddrs() []string {
	if x != nil {
		return x.MAddrs
	}
	return nil
}

func (x *Agent) GetRoutes() *Routes {
	if x != nil {
		return x.Routes
	}
	return nil
}

func (x *Agent) GetMetrics() *AgentMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *Agent) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Agent) GetDevMode() bool {
	if x != nil {
		return x.DevMode
	}
	return false
}

type Routes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Export []string `protobuf:"bytes,1,rep,name=export,proto3" json:"export,omitempty"`
	Import []string `protobuf:"bytes,2,rep,name=import,proto3" json:"import,omitempty"`
}

func (x *Routes) Reset() {
	*x = Routes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Routes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Routes) ProtoMessage() {}

func (x *Routes) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Routes.ProtoReflect.Descriptor instead.
func (*Routes) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_topology_node_proto_rawDescGZIP(), []int{14}
}

func (x *Routes) GetExport() []string {
	if x != nil {
		return x.Export
	}
	return nil
}

func (x *Routes) GetImport() []string {
	if x != nil {
		return x.Import
	}
	return nil
}

type AgentMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastUpdated int64                `protobuf:"varint,1,opt,name=lastUpdated,proto3" json:"lastUpdated,omitempty"`
	HostMetrics *metrics.HostMetrics `protobuf:"bytes,11,opt,name=hostMetrics,proto3" json:"hostMetrics,omitempty"`
}

func (x *AgentMetrics) Reset() {
	*x = AgentMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentMetrics) ProtoMessage() {}

func (x *AgentMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentMetrics.ProtoReflect.Descriptor instead.
func (*AgentMetrics) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_topology_node_proto_rawDescGZIP(), []int{15}
}

func (x *AgentMetrics) GetLastUpdated() int64 {
	if x != nil {
		return x.LastUpdated
	}
	return 0
}

func (x *AgentMetrics) GetHostMetrics() *metrics.HostMetrics {
	if x != nil {
		return x.HostMetrics
	}
	return nil
}

type Endpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EndpointID string `protobuf:"bytes,1,opt,name=endpointID,proto3" json:"endpointID,omitempty"`
	IPv4       string `protobuf:"bytes,11,opt,name=IPv4,proto3" json:"IPv4,omitempty"`
	IPv6       string `protobuf:"bytes,12,opt,name=IPv6,proto3" json:"IPv6,omitempty"`
	DNSName    string `protobuf:"bytes,21,opt,name=DNSName,proto3" json:"DNSName,omitempty"`
	// string DNSDomain = 5;
	// string FQDN = 6;
	ReqIPv4 string `protobuf:"bytes,31,opt,name=reqIPv4,proto3" json:"reqIPv4,omitempty"`
}

func (x *Endpoint) Reset() {
	*x = Endpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Endpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Endpoint) ProtoMessage() {}

func (x *Endpoint) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Endpoint.ProtoReflect.Descriptor instead.
func (*Endpoint) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_topology_node_proto_rawDescGZIP(), []int{16}
}

func (x *Endpoint) GetEndpointID() string {
	if x != nil {
		return x.EndpointID
	}
	return ""
}

func (x *Endpoint) GetIPv4() string {
	if x != nil {
		return x.IPv4
	}
	return ""
}

func (x *Endpoint) GetIPv6() string {
	if x != nil {
		return x.IPv6
	}
	return ""
}

func (x *Endpoint) GetDNSName() string {
	if x != nil {
		return x.DNSName
	}
	return ""
}

func (x *Endpoint) GetReqIPv4() string {
	if x != nil {
		return x.ReqIPv4
	}
	return ""
}

type NodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID string `protobuf:"bytes,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	TenantID  string `protobuf:"bytes,2,opt,name=tenantID,proto3" json:"tenantID,omitempty"`
	// TEMP
	NetID    string `protobuf:"bytes,3,opt,name=netID,proto3" json:"netID,omitempty"`       // TEMP
	SubnetID string `protobuf:"bytes,4,opt,name=subnetID,proto3" json:"subnetID,omitempty"` // TEMP
	NodeID   string `protobuf:"bytes,5,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
}

func (x *NodeReq) Reset() {
	*x = NodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeReq) ProtoMessage() {}

func (x *NodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeReq.ProtoReflect.Descriptor instead.
func (*NodeReq) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_topology_node_proto_rawDescGZIP(), []int{17}
}

func (x *NodeReq) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *NodeReq) GetTenantID() string {
	if x != nil {
		return x.TenantID
	}
	return ""
}

func (x *NodeReq) GetNetID() string {
	if x != nil {
		return x.NetID
	}
	return ""
}

func (x *NodeReq) GetSubnetID() string {
	if x != nil {
		return x.SubnetID
	}
	return ""
}

func (x *NodeReq) GetNodeID() string {
	if x != nil {
		return x.NodeID
	}
	return ""
}

type EndpointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeReq    *NodeReq `protobuf:"bytes,1,opt,name=nodeReq,proto3" json:"nodeReq,omitempty"` // parent node
	EndpointID string   `protobuf:"bytes,21,opt,name=endpointID,proto3" json:"endpointID,omitempty"`
}

func (x *EndpointRequest) Reset() {
	*x = EndpointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndpointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndpointRequest) ProtoMessage() {}

func (x *EndpointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndpointRequest.ProtoReflect.Descriptor instead.
func (*EndpointRequest) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_resources_v1_topology_node_proto_rawDescGZIP(), []int{18}
}

func (x *EndpointRequest) GetNodeReq() *NodeReq {
	if x != nil {
		return x.NodeReq
	}
	return nil
}

func (x *EndpointRequest) GetEndpointID() string {
	if x != nil {
		return x.EndpointID
	}
	return ""
}

var File_mmesh_protobuf_resources_v1_topology_node_proto protoreflect.FileDescriptor

var file_mmesh_protobuf_resources_v1_topology_node_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x6d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x6f,
	0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x08, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x1a, 0x2f, 0x6d, 0x6d, 0x65,
	0x73, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x6d, 0x6d,
	0x65, 0x73, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x2f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x31, 0x6d,
	0x6d, 0x65, 0x73, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x6f, 0x70, 0x6f, 0x6c,
	0x6f, 0x67, 0x79, 0x2f, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x2e, 0x6d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x2f, 0x6d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x30, 0x6d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x2f, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x8b, 0x01, 0x0a, 0x19, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x6e,
	0x6f, 0x64, 0x65, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65,
	0x79, 0x22, 0x72, 0x0a, 0x10, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0xf6, 0x01, 0x0a, 0x0e, 0x4e, 0x65, 0x77, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x49, 0x44, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x6e,
	0x65, 0x74, 0x49, 0x44, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x6e,
	0x65, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x29,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x86,
	0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x07,
	0x6e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x52, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f, 0x64,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa2, 0x02, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x6c,
	0x6f, 0x67, 0x79, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x52, 0x07, 0x6e, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75,
	0x62, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75,
	0x62, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x1f,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x29, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e,
	0x65, 0x74, 0x65, 0x73, 0x47, 0x77, 0x18, 0x33, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6b, 0x75,
	0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x47, 0x77, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x2c,
	0x0a, 0x11, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x18, 0x48, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x64, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x22, 0xec, 0x01, 0x0a,
	0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x07,
	0x6e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x52, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x4f, 0x70, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x70, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x45, 0x78, 0x65, 0x63, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x78, 0x65, 0x63, 0x12, 0x28, 0x0a, 0x0f, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18, 0x1f,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x15, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x50, 0x6f, 0x72, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x29,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x6f, 0x72,
	0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x22, 0xfb, 0x03, 0x0a, 0x04,
	0x4e, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x14,
	0x0a, 0x05, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e,
	0x65, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x44,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x44,
	0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x6f, 0x64,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x23, 0x0a, 0x03, 0x63, 0x66, 0x67, 0x18, 0x1f, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x43, 0x66, 0x67, 0x52, 0x03, 0x63, 0x66, 0x67, 0x12, 0x25, 0x0a, 0x05, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x6f, 0x70,
	0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18,
	0x33, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79,
	0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12,
	0x39, 0x0a, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18,
	0x3d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x0c, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x53, 0x65, 0x74, 0x18, 0x65, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x53, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x08, 0x6c, 0x61,
	0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x18, 0xc9, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c,
	0x61, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x1a, 0x50, 0x0a, 0x0e, 0x45, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x6f, 0x70,
	0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x59, 0x0a, 0x05, 0x4e, 0x6f, 0x64,
	0x65, 0x73, 0x12, 0x2a, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x24,
	0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e,
	0x6f, 0x64, 0x65, 0x73, 0x22, 0x70, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65,
	0x73, 0x42, 0x79, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x29, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x06, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x52, 0x06,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x22, 0x72, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f,
	0x64, 0x65, 0x73, 0x42, 0x79, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x29, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x2b, 0x0a,
	0x06, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x52, 0x06, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x22, 0x96, 0x03, 0x0a, 0x07, 0x4e,
	0x6f, 0x64, 0x65, 0x43, 0x66, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75,
	0x62, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75,
	0x62, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0f,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e,
	0x65, 0x74, 0x65, 0x73, 0x47, 0x77, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6b, 0x75,
	0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x47, 0x77, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x33, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x2c,
	0x0a, 0x11, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x18, 0x34, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x64, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x38, 0x0a, 0x0a,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x47, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x6f,
	0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x63, 0x65, 0x22, 0xb2, 0x01, 0x0a, 0x0e, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x45, 0x78, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x45, 0x78, 0x65, 0x63, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x12, 0x34, 0x0a, 0x15, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x6f, 0x72,
	0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x15, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x46, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x4f, 0x70, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x70, 0x73, 0x22, 0x61, 0x0a, 0x0f, 0x4e, 0x6f, 0x64, 0x65,
	0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x75, 0x74, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x61, 0x75, 0x74, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x22, 0xd9, 0x02, 0x0a, 0x05,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x32, 0x50, 0x48, 0x6f, 0x73, 0x74,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x32, 0x50, 0x48, 0x6f, 0x73,
	0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x44, 0x4e, 0x53, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x44, 0x4e, 0x53, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x50, 0x76, 0x34, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x50, 0x76,
	0x34, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x4d, 0x41, 0x64, 0x64, 0x72, 0x73, 0x18, 0x1f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x4d,
	0x41, 0x64, 0x64, 0x72, 0x73, 0x12, 0x28, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18,
	0x29, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79,
	0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x12,
	0x30, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x12, 0x19, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0xe8, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x07,
	0x64, 0x65, 0x76, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0xe9, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x64, 0x65, 0x76, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x38, 0x0a, 0x06, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x22, 0x68, 0x0a, 0x0c, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x36, 0x0a, 0x0b, 0x68, 0x6f, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x0b,
	0x68, 0x6f, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0x86, 0x01, 0x0a, 0x08,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x50, 0x76, 0x34,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x50, 0x76, 0x34, 0x12, 0x12, 0x0a, 0x04,
	0x49, 0x50, 0x76, 0x36, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x50, 0x76, 0x36,
	0x12, 0x18, 0x0a, 0x07, 0x44, 0x4e, 0x53, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x44, 0x4e, 0x53, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65,
	0x71, 0x49, 0x50, 0x76, 0x34, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x71,
	0x49, 0x50, 0x76, 0x34, 0x22, 0x8d, 0x01, 0x0a, 0x07, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1a,
	0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x65,
	0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x65, 0x74, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x6e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f,
	0x64, 0x65, 0x49, 0x44, 0x22, 0x5e, 0x0a, 0x0f, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x6c,
	0x6f, 0x67, 0x79, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x52, 0x07, 0x6e, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x49, 0x44, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x49, 0x44, 0x2a, 0x35, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0b, 0x0a, 0x07, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x49, 0x43, 0x10, 0x00, 0x12, 0x0f, 0x0a,
	0x0b, 0x4b, 0x38, 0x53, 0x5f, 0x47, 0x41, 0x54, 0x45, 0x57, 0x41, 0x59, 0x10, 0x0b, 0x12, 0x0b,
	0x0a, 0x07, 0x4b, 0x38, 0x53, 0x5f, 0x50, 0x4f, 0x44, 0x10, 0x0c, 0x42, 0x2c, 0x5a, 0x2a, 0x6d,
	0x6d, 0x65, 0x73, 0x68, 0x2e, 0x64, 0x65, 0x76, 0x2f, 0x6d, 0x2d, 0x61, 0x70, 0x69, 0x2d, 0x67,
	0x6f, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x2f, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_mmesh_protobuf_resources_v1_topology_node_proto_rawDescOnce sync.Once
	file_mmesh_protobuf_resources_v1_topology_node_proto_rawDescData = file_mmesh_protobuf_resources_v1_topology_node_proto_rawDesc
)

func file_mmesh_protobuf_resources_v1_topology_node_proto_rawDescGZIP() []byte {
	file_mmesh_protobuf_resources_v1_topology_node_proto_rawDescOnce.Do(func() {
		file_mmesh_protobuf_resources_v1_topology_node_proto_rawDescData = protoimpl.X.CompressGZIP(file_mmesh_protobuf_resources_v1_topology_node_proto_rawDescData)
	})
	return file_mmesh_protobuf_resources_v1_topology_node_proto_rawDescData
}

var file_mmesh_protobuf_resources_v1_topology_node_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_mmesh_protobuf_resources_v1_topology_node_proto_goTypes = []interface{}{
	(NodeType)(0),                       // 0: topology.NodeType
	(*NetworkAccessTokenPayload)(nil),   // 1: topology.NetworkAccessTokenPayload
	(*NodeTokenPayload)(nil),            // 2: topology.NodeTokenPayload
	(*NewNodeRequest)(nil),              // 3: topology.NewNodeRequest
	(*UpdateNodeMetadataRequest)(nil),   // 4: topology.UpdateNodeMetadataRequest
	(*UpdateNodeNetworkingRequest)(nil), // 5: topology.UpdateNodeNetworkingRequest
	(*UpdateNodeManagementRequest)(nil), // 6: topology.UpdateNodeManagementRequest
	(*Node)(nil),                        // 7: topology.Node
	(*Nodes)(nil),                       // 8: topology.Nodes
	(*ListNodesByTenantRequest)(nil),    // 9: topology.ListNodesByTenantRequest
	(*ListNodesBySubnetRequest)(nil),    // 10: topology.ListNodesBySubnetRequest
	(*NodeCfg)(nil),                     // 11: topology.NodeCfg
	(*NodeManagement)(nil),              // 12: topology.NodeManagement
	(*NodeMaintenance)(nil),             // 13: topology.NodeMaintenance
	(*Agent)(nil),                       // 14: topology.Agent
	(*Routes)(nil),                      // 15: topology.Routes
	(*AgentMetrics)(nil),                // 16: topology.AgentMetrics
	(*Endpoint)(nil),                    // 17: topology.Endpoint
	(*NodeReq)(nil),                     // 18: topology.NodeReq
	(*EndpointRequest)(nil),             // 19: topology.EndpointRequest
	nil,                                 // 20: topology.Node.EndpointsEntry
	(*metrics.EventMetrics)(nil),        // 21: metrics.EventMetrics
	(*resource.ListResponse)(nil),       // 22: resource.ListResponse
	(*resource.ListRequest)(nil),        // 23: resource.ListRequest
	(*tenant.TenantReq)(nil),            // 24: tenant.TenantReq
	(*SubnetReq)(nil),                   // 25: topology.SubnetReq
	(*datetime.DateTime)(nil),           // 26: datetime.DateTime
	(*metrics.HostMetrics)(nil),         // 27: metrics.HostMetrics
}
var file_mmesh_protobuf_resources_v1_topology_node_proto_depIdxs = []int32{
	0,  // 0: topology.NewNodeRequest.type:type_name -> topology.NodeType
	18, // 1: topology.UpdateNodeMetadataRequest.nodeReq:type_name -> topology.NodeReq
	18, // 2: topology.UpdateNodeNetworkingRequest.nodeReq:type_name -> topology.NodeReq
	18, // 3: topology.UpdateNodeManagementRequest.nodeReq:type_name -> topology.NodeReq
	11, // 4: topology.Node.cfg:type_name -> topology.NodeCfg
	14, // 5: topology.Node.agent:type_name -> topology.Agent
	20, // 6: topology.Node.endpoints:type_name -> topology.Node.EndpointsEntry
	21, // 7: topology.Node.eventMetrics:type_name -> metrics.EventMetrics
	22, // 8: topology.Nodes.meta:type_name -> resource.ListResponse
	7,  // 9: topology.Nodes.nodes:type_name -> topology.Node
	23, // 10: topology.ListNodesByTenantRequest.meta:type_name -> resource.ListRequest
	24, // 11: topology.ListNodesByTenantRequest.tenant:type_name -> tenant.TenantReq
	23, // 12: topology.ListNodesBySubnetRequest.meta:type_name -> resource.ListRequest
	25, // 13: topology.ListNodesBySubnetRequest.subnet:type_name -> topology.SubnetReq
	12, // 14: topology.NodeCfg.management:type_name -> topology.NodeManagement
	13, // 15: topology.NodeCfg.maintenance:type_name -> topology.NodeMaintenance
	26, // 16: topology.NodeMaintenance.schedule:type_name -> datetime.DateTime
	15, // 17: topology.Agent.routes:type_name -> topology.Routes
	16, // 18: topology.Agent.metrics:type_name -> topology.AgentMetrics
	27, // 19: topology.AgentMetrics.hostMetrics:type_name -> metrics.HostMetrics
	18, // 20: topology.EndpointRequest.nodeReq:type_name -> topology.NodeReq
	17, // 21: topology.Node.EndpointsEntry.value:type_name -> topology.Endpoint
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_mmesh_protobuf_resources_v1_topology_node_proto_init() }
func file_mmesh_protobuf_resources_v1_topology_node_proto_init() {
	if File_mmesh_protobuf_resources_v1_topology_node_proto != nil {
		return
	}
	file_mmesh_protobuf_resources_v1_topology_subnet_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkAccessTokenPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeTokenPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNodeMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNodeNetworkingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNodeManagementRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Nodes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNodesByTenantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNodesBySubnetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeCfg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeManagement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeMaintenance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Agent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Routes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Endpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndpointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mmesh_protobuf_resources_v1_topology_node_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mmesh_protobuf_resources_v1_topology_node_proto_goTypes,
		DependencyIndexes: file_mmesh_protobuf_resources_v1_topology_node_proto_depIdxs,
		EnumInfos:         file_mmesh_protobuf_resources_v1_topology_node_proto_enumTypes,
		MessageInfos:      file_mmesh_protobuf_resources_v1_topology_node_proto_msgTypes,
	}.Build()
	File_mmesh_protobuf_resources_v1_topology_node_proto = out.File
	file_mmesh_protobuf_resources_v1_topology_node_proto_rawDesc = nil
	file_mmesh_protobuf_resources_v1_topology_node_proto_goTypes = nil
	file_mmesh_protobuf_resources_v1_topology_node_proto_depIdxs = nil
}
