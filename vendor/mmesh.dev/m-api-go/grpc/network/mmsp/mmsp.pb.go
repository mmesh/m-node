// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: mmesh/protobuf/network/v1/mmsp/mmsp.proto

package mmsp

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	command "mmesh.dev/m-api-go/grpc/network/mmsp/command"
	portFwd "mmesh.dev/m-api-go/grpc/network/mmsp/portFwd"
	transfer "mmesh.dev/m-api-go/grpc/network/mmsp/transfer"
	workflow "mmesh.dev/m-api-go/grpc/network/resources/ae/workflow"
	auth "mmesh.dev/m-api-go/grpc/network/resources/iam/auth"
	network "mmesh.dev/m-api-go/grpc/network/resources/network"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID              string        `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	SrcID           string        `protobuf:"bytes,2,opt,name=srcID,proto3" json:"srcID,omitempty"`
	DstID           string        `protobuf:"bytes,3,opt,name=dstID,proto3" json:"dstID,omitempty"`
	SrcControllerID string        `protobuf:"bytes,4,opt,name=srcControllerID,proto3" json:"srcControllerID,omitempty"`
	DstControllerID string        `protobuf:"bytes,5,opt,name=dstControllerID,proto3" json:"dstControllerID,omitempty"`
	RequesterID     string        `protobuf:"bytes,6,opt,name=requesterID,proto3" json:"requesterID,omitempty"`
	Interactive     bool          `protobuf:"varint,7,opt,name=interactive,proto3" json:"interactive,omitempty"`
	AuthKey         *auth.AuthKey `protobuf:"bytes,8,opt,name=authKey,proto3" json:"authKey,omitempty"`
	PSK             string        `protobuf:"bytes,9,opt,name=PSK,proto3" json:"PSK,omitempty"`
	SecurityToken   string        `protobuf:"bytes,10,opt,name=securityToken,proto3" json:"securityToken,omitempty"`
	PayloadType     int32         `protobuf:"varint,11,opt,name=payloadType,proto3" json:"payloadType,omitempty"`
	// Payload types
	Node     *network.Node      `protobuf:"bytes,12,opt,name=node,proto3" json:"node,omitempty"` // required for mmpInit
	Command  *command.Command   `protobuf:"bytes,13,opt,name=command,proto3" json:"command,omitempty"`
	Transfer *transfer.Transfer `protobuf:"bytes,14,opt,name=transfer,proto3" json:"transfer,omitempty"`
	PortFwd  *portFwd.PortFwd   `protobuf:"bytes,15,opt,name=portFwd,proto3" json:"portFwd,omitempty"`
	Workflow *workflow.Workflow `protobuf:"bytes,16,opt,name=workflow,proto3" json:"workflow,omitempty"`
}

func (x *Payload) Reset() {
	*x = Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_network_v1_mmsp_mmsp_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payload) ProtoMessage() {}

func (x *Payload) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_network_v1_mmsp_mmsp_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payload.ProtoReflect.Descriptor instead.
func (*Payload) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_network_v1_mmsp_mmsp_proto_rawDescGZIP(), []int{0}
}

func (x *Payload) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Payload) GetSrcID() string {
	if x != nil {
		return x.SrcID
	}
	return ""
}

func (x *Payload) GetDstID() string {
	if x != nil {
		return x.DstID
	}
	return ""
}

func (x *Payload) GetSrcControllerID() string {
	if x != nil {
		return x.SrcControllerID
	}
	return ""
}

func (x *Payload) GetDstControllerID() string {
	if x != nil {
		return x.DstControllerID
	}
	return ""
}

func (x *Payload) GetRequesterID() string {
	if x != nil {
		return x.RequesterID
	}
	return ""
}

func (x *Payload) GetInteractive() bool {
	if x != nil {
		return x.Interactive
	}
	return false
}

func (x *Payload) GetAuthKey() *auth.AuthKey {
	if x != nil {
		return x.AuthKey
	}
	return nil
}

func (x *Payload) GetPSK() string {
	if x != nil {
		return x.PSK
	}
	return ""
}

func (x *Payload) GetSecurityToken() string {
	if x != nil {
		return x.SecurityToken
	}
	return ""
}

func (x *Payload) GetPayloadType() int32 {
	if x != nil {
		return x.PayloadType
	}
	return 0
}

func (x *Payload) GetNode() *network.Node {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *Payload) GetCommand() *command.Command {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *Payload) GetTransfer() *transfer.Transfer {
	if x != nil {
		return x.Transfer
	}
	return nil
}

func (x *Payload) GetPortFwd() *portFwd.PortFwd {
	if x != nil {
		return x.PortFwd
	}
	return nil
}

func (x *Payload) GetWorkflow() *workflow.Workflow {
	if x != nil {
		return x.Workflow
	}
	return nil
}

var File_mmesh_protobuf_network_v1_mmsp_mmsp_proto protoreflect.FileDescriptor

var file_mmesh_protobuf_network_v1_mmsp_mmsp_proto_rawDesc = []byte{
	0x0a, 0x29, 0x6d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6d, 0x73, 0x70,
	0x2f, 0x6d, 0x6d, 0x73, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6d, 0x6d, 0x73,
	0x70, 0x1a, 0x2c, 0x6d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6d, 0x73,
	0x70, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x2d, 0x6d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6d, 0x73, 0x70, 0x2f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c,
	0x6d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6d, 0x73, 0x70, 0x2f, 0x70,
	0x6f, 0x72, 0x74, 0x46, 0x77, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x37, 0x6d, 0x6d,
	0x65, 0x73, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3e, 0x6d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x76, 0x31,
	0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x61, 0x65, 0x2f, 0x77, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x36, 0x6d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x76, 0x31,
	0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbb, 0x04,
	0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x72, 0x63,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x72, 0x63, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x64, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x64, 0x73, 0x74, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x72, 0x63, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x73, 0x72, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x28, 0x0a, 0x0f, 0x64, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x73, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x27, 0x0a,
	0x07, 0x61, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x52, 0x07, 0x61,
	0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x53, 0x4b, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x50, 0x53, 0x4b, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x20,
	0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x21, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6e,
	0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12,
	0x2e, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12,
	0x2a, 0x0a, 0x07, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x77, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x77, 0x64, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x46,
	0x77, 0x64, 0x52, 0x07, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x77, 0x64, 0x12, 0x2e, 0x0a, 0x08, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x42, 0x26, 0x5a, 0x24, 0x6d,
	0x6d, 0x65, 0x73, 0x68, 0x2e, 0x64, 0x65, 0x76, 0x2f, 0x6d, 0x2d, 0x61, 0x70, 0x69, 0x2d, 0x67,
	0x6f, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x6d,
	0x6d, 0x73, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mmesh_protobuf_network_v1_mmsp_mmsp_proto_rawDescOnce sync.Once
	file_mmesh_protobuf_network_v1_mmsp_mmsp_proto_rawDescData = file_mmesh_protobuf_network_v1_mmsp_mmsp_proto_rawDesc
)

func file_mmesh_protobuf_network_v1_mmsp_mmsp_proto_rawDescGZIP() []byte {
	file_mmesh_protobuf_network_v1_mmsp_mmsp_proto_rawDescOnce.Do(func() {
		file_mmesh_protobuf_network_v1_mmsp_mmsp_proto_rawDescData = protoimpl.X.CompressGZIP(file_mmesh_protobuf_network_v1_mmsp_mmsp_proto_rawDescData)
	})
	return file_mmesh_protobuf_network_v1_mmsp_mmsp_proto_rawDescData
}

var file_mmesh_protobuf_network_v1_mmsp_mmsp_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_mmesh_protobuf_network_v1_mmsp_mmsp_proto_goTypes = []interface{}{
	(*Payload)(nil),           // 0: mmsp.Payload
	(*auth.AuthKey)(nil),      // 1: auth.AuthKey
	(*network.Node)(nil),      // 2: network.Node
	(*command.Command)(nil),   // 3: command.Command
	(*transfer.Transfer)(nil), // 4: transfer.Transfer
	(*portFwd.PortFwd)(nil),   // 5: portFwd.PortFwd
	(*workflow.Workflow)(nil), // 6: workflow.Workflow
}
var file_mmesh_protobuf_network_v1_mmsp_mmsp_proto_depIdxs = []int32{
	1, // 0: mmsp.Payload.authKey:type_name -> auth.AuthKey
	2, // 1: mmsp.Payload.node:type_name -> network.Node
	3, // 2: mmsp.Payload.command:type_name -> command.Command
	4, // 3: mmsp.Payload.transfer:type_name -> transfer.Transfer
	5, // 4: mmsp.Payload.portFwd:type_name -> portFwd.PortFwd
	6, // 5: mmsp.Payload.workflow:type_name -> workflow.Workflow
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_mmesh_protobuf_network_v1_mmsp_mmsp_proto_init() }
func file_mmesh_protobuf_network_v1_mmsp_mmsp_proto_init() {
	if File_mmesh_protobuf_network_v1_mmsp_mmsp_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mmesh_protobuf_network_v1_mmsp_mmsp_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mmesh_protobuf_network_v1_mmsp_mmsp_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mmesh_protobuf_network_v1_mmsp_mmsp_proto_goTypes,
		DependencyIndexes: file_mmesh_protobuf_network_v1_mmsp_mmsp_proto_depIdxs,
		MessageInfos:      file_mmesh_protobuf_network_v1_mmsp_mmsp_proto_msgTypes,
	}.Build()
	File_mmesh_protobuf_network_v1_mmsp_mmsp_proto = out.File
	file_mmesh_protobuf_network_v1_mmsp_mmsp_proto_rawDesc = nil
	file_mmesh_protobuf_network_v1_mmsp_mmsp_proto_goTypes = nil
	file_mmesh_protobuf_network_v1_mmsp_mmsp_proto_depIdxs = nil
}
