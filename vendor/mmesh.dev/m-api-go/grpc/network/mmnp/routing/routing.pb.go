// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.0
// source: mmesh/protobuf/network/v1/mmnp/routing.proto

package routing

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	status "mmesh.dev/m-api-go/grpc/common/status"
	network "mmesh.dev/m-api-go/grpc/resources/network"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Scope int32

const (
	Scope_NETWORK Scope = 0
	Scope_VRF     Scope = 1
)

// Enum value maps for Scope.
var (
	Scope_name = map[int32]string{
		0: "NETWORK",
		1: "VRF",
	}
	Scope_value = map[string]int32{
		"NETWORK": 0,
		"VRF":     1,
	}
)

func (x Scope) Enum() *Scope {
	p := new(Scope)
	*p = x
	return p
}

func (x Scope) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Scope) Descriptor() protoreflect.EnumDescriptor {
	return file_mmesh_protobuf_network_v1_mmnp_routing_proto_enumTypes[0].Descriptor()
}

func (Scope) Type() protoreflect.EnumType {
	return &file_mmesh_protobuf_network_v1_mmnp_routing_proto_enumTypes[0]
}

func (x Scope) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Scope.Descriptor instead.
func (Scope) EnumDescriptor() ([]byte, []int) {
	return file_mmesh_protobuf_network_v1_mmnp_routing_proto_rawDescGZIP(), []int{0}
}

type RouteType int32

const (
	RouteType_CONNECTED RouteType = 0
	RouteType_STATIC    RouteType = 1
	RouteType_DYNAMIC   RouteType = 2
)

// Enum value maps for RouteType.
var (
	RouteType_name = map[int32]string{
		0: "CONNECTED",
		1: "STATIC",
		2: "DYNAMIC",
	}
	RouteType_value = map[string]int32{
		"CONNECTED": 0,
		"STATIC":    1,
		"DYNAMIC":   2,
	}
)

func (x RouteType) Enum() *RouteType {
	p := new(RouteType)
	*p = x
	return p
}

func (x RouteType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RouteType) Descriptor() protoreflect.EnumDescriptor {
	return file_mmesh_protobuf_network_v1_mmnp_routing_proto_enumTypes[1].Descriptor()
}

func (RouteType) Type() protoreflect.EnumType {
	return &file_mmesh_protobuf_network_v1_mmnp_routing_proto_enumTypes[1]
}

func (x RouteType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RouteType.Descriptor instead.
func (RouteType) EnumDescriptor() ([]byte, []int) {
	return file_mmesh_protobuf_network_v1_mmnp_routing_proto_rawDescGZIP(), []int{1}
}

type RTRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node        *network.Node `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	Connections int32         `protobuf:"varint,2,opt,name=connections,proto3" json:"connections,omitempty"`
}

func (x *RTRequest) Reset() {
	*x = RTRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_network_v1_mmnp_routing_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RTRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RTRequest) ProtoMessage() {}

func (x *RTRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_network_v1_mmnp_routing_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RTRequest.ProtoReflect.Descriptor instead.
func (*RTRequest) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_network_v1_mmnp_routing_proto_rawDescGZIP(), []int{0}
}

func (x *RTRequest) GetNode() *network.Node {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *RTRequest) GetConnections() int32 {
	if x != nil {
		return x.Connections
	}
	return 0
}

type RTResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *status.StatusResponse `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	RT     *RoutingTable          `protobuf:"bytes,2,opt,name=RT,proto3" json:"RT,omitempty"`
}

func (x *RTResponse) Reset() {
	*x = RTResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_network_v1_mmnp_routing_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RTResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RTResponse) ProtoMessage() {}

func (x *RTResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_network_v1_mmnp_routing_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RTResponse.ProtoReflect.Descriptor instead.
func (*RTResponse) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_network_v1_mmnp_routing_proto_rawDescGZIP(), []int{1}
}

func (x *RTResponse) GetStatus() *status.StatusResponse {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *RTResponse) GetRT() *RoutingTable {
	if x != nil {
		return x.RT
	}
	return nil
}

type RoutingTableOpts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID   string `protobuf:"bytes,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	TenantID    string `protobuf:"bytes,2,opt,name=tenantID,proto3" json:"tenantID,omitempty"`
	NetID       string `protobuf:"bytes,3,opt,name=netID,proto3" json:"netID,omitempty"`
	Scope       Scope  `protobuf:"varint,4,opt,name=scope,proto3,enum=routing.Scope" json:"scope,omitempty"`
	NetworkCIDR string `protobuf:"bytes,5,opt,name=networkCIDR,proto3" json:"networkCIDR,omitempty"`
}

func (x *RoutingTableOpts) Reset() {
	*x = RoutingTableOpts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_network_v1_mmnp_routing_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoutingTableOpts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutingTableOpts) ProtoMessage() {}

func (x *RoutingTableOpts) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_network_v1_mmnp_routing_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutingTableOpts.ProtoReflect.Descriptor instead.
func (*RoutingTableOpts) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_network_v1_mmnp_routing_proto_rawDescGZIP(), []int{2}
}

func (x *RoutingTableOpts) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *RoutingTableOpts) GetTenantID() string {
	if x != nil {
		return x.TenantID
	}
	return ""
}

func (x *RoutingTableOpts) GetNetID() string {
	if x != nil {
		return x.NetID
	}
	return ""
}

func (x *RoutingTableOpts) GetScope() Scope {
	if x != nil {
		return x.Scope
	}
	return Scope_NETWORK
}

func (x *RoutingTableOpts) GetNetworkCIDR() string {
	if x != nil {
		return x.NetworkCIDR
	}
	return ""
}

type RoutingTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID string                   `protobuf:"bytes,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	TenantID  string                   `protobuf:"bytes,2,opt,name=tenantID,proto3" json:"tenantID,omitempty"`
	NetID     string                   `protobuf:"bytes,3,opt,name=netID,proto3" json:"netID,omitempty"`
	RTID      string                   `protobuf:"bytes,4,opt,name=RTID,proto3" json:"RTID,omitempty"`
	Scope     Scope                    `protobuf:"varint,5,opt,name=scope,proto3,enum=routing.Scope" json:"scope,omitempty"`
	RE        map[string]*RoutingEntry `protobuf:"bytes,6,rep,name=RE,proto3" json:"RE,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // map[addr]*RoutingEntry
	// map<string, NetRelay> relays = 7; // map[maddr]*NetRelay
	Relays      []*NetRelay                      `protobuf:"bytes,7,rep,name=relays,proto3" json:"relays,omitempty"`
	Policy      map[string]*network.Policy       `protobuf:"bytes,8,rep,name=policy,proto3" json:"policy,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // map[vrfID]*Policy
	LastUpdated int64                            `protobuf:"varint,9,opt,name=lastUpdated,proto3" json:"lastUpdated,omitempty"`
	MRS         map[string]*network.NodeInstance `protobuf:"bytes,101,rep,name=MRS,proto3" json:"MRS,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // map[vrfID]*NodeInstance
}

func (x *RoutingTable) Reset() {
	*x = RoutingTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_network_v1_mmnp_routing_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoutingTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutingTable) ProtoMessage() {}

func (x *RoutingTable) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_network_v1_mmnp_routing_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutingTable.ProtoReflect.Descriptor instead.
func (*RoutingTable) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_network_v1_mmnp_routing_proto_rawDescGZIP(), []int{3}
}

func (x *RoutingTable) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *RoutingTable) GetTenantID() string {
	if x != nil {
		return x.TenantID
	}
	return ""
}

func (x *RoutingTable) GetNetID() string {
	if x != nil {
		return x.NetID
	}
	return ""
}

func (x *RoutingTable) GetRTID() string {
	if x != nil {
		return x.RTID
	}
	return ""
}

func (x *RoutingTable) GetScope() Scope {
	if x != nil {
		return x.Scope
	}
	return Scope_NETWORK
}

func (x *RoutingTable) GetRE() map[string]*RoutingEntry {
	if x != nil {
		return x.RE
	}
	return nil
}

func (x *RoutingTable) GetRelays() []*NetRelay {
	if x != nil {
		return x.Relays
	}
	return nil
}

func (x *RoutingTable) GetPolicy() map[string]*network.Policy {
	if x != nil {
		return x.Policy
	}
	return nil
}

func (x *RoutingTable) GetLastUpdated() int64 {
	if x != nil {
		return x.LastUpdated
	}
	return 0
}

func (x *RoutingTable) GetMRS() map[string]*network.NodeInstance {
	if x != nil {
		return x.MRS
	}
	return nil
}

type RoutingEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VRFID         string            `protobuf:"bytes,1,opt,name=VRFID,proto3" json:"VRFID,omitempty"`
	AddressFamily int32             `protobuf:"varint,2,opt,name=addressFamily,proto3" json:"addressFamily,omitempty"`
	Type          RouteType         `protobuf:"varint,3,opt,name=type,proto3,enum=routing.RouteType" json:"type,omitempty"`
	Gw            map[int32]*NetHop `protobuf:"bytes,4,rep,name=gw,proto3" json:"gw,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //network.NetworkPolicy networkPolicy = 5;
}

func (x *RoutingEntry) Reset() {
	*x = RoutingEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_network_v1_mmnp_routing_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoutingEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutingEntry) ProtoMessage() {}

func (x *RoutingEntry) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_network_v1_mmnp_routing_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutingEntry.ProtoReflect.Descriptor instead.
func (*RoutingEntry) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_network_v1_mmnp_routing_proto_rawDescGZIP(), []int{4}
}

func (x *RoutingEntry) GetVRFID() string {
	if x != nil {
		return x.VRFID
	}
	return ""
}

func (x *RoutingEntry) GetAddressFamily() int32 {
	if x != nil {
		return x.AddressFamily
	}
	return 0
}

func (x *RoutingEntry) GetType() RouteType {
	if x != nil {
		return x.Type
	}
	return RouteType_CONNECTED
}

func (x *RoutingEntry) GetGw() map[int32]*NetHop {
	if x != nil {
		return x.Gw
	}
	return nil
}

type NetRelay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VRFID       string `protobuf:"bytes,1,opt,name=VRFID,proto3" json:"VRFID,omitempty"`
	MAddr       string `protobuf:"bytes,2,opt,name=MAddr,proto3" json:"MAddr,omitempty"`
	Connections int32  `protobuf:"varint,3,opt,name=connections,proto3" json:"connections,omitempty"`
}

func (x *NetRelay) Reset() {
	*x = NetRelay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_network_v1_mmnp_routing_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetRelay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetRelay) ProtoMessage() {}

func (x *NetRelay) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_network_v1_mmnp_routing_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetRelay.ProtoReflect.Descriptor instead.
func (*NetRelay) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_network_v1_mmnp_routing_proto_rawDescGZIP(), []int{5}
}

func (x *NetRelay) GetVRFID() string {
	if x != nil {
		return x.VRFID
	}
	return ""
}

func (x *NetRelay) GetMAddr() string {
	if x != nil {
		return x.MAddr
	}
	return ""
}

func (x *NetRelay) GetConnections() int32 {
	if x != nil {
		return x.Connections
	}
	return 0
}

type NetHop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Agent      *network.Agent `protobuf:"bytes,1,opt,name=agent,proto3" json:"agent,omitempty"`
	Healthy    bool           `protobuf:"varint,2,opt,name=healthy,proto3" json:"healthy,omitempty"`
	LinkStatus *LinkStatus    `protobuf:"bytes,3,opt,name=linkStatus,proto3" json:"linkStatus,omitempty"`
}

func (x *NetHop) Reset() {
	*x = NetHop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_network_v1_mmnp_routing_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetHop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetHop) ProtoMessage() {}

func (x *NetHop) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_network_v1_mmnp_routing_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetHop.ProtoReflect.Descriptor instead.
func (*NetHop) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_network_v1_mmnp_routing_proto_rawDescGZIP(), []int{6}
}

func (x *NetHop) GetAgent() *network.Agent {
	if x != nil {
		return x.Agent
	}
	return nil
}

func (x *NetHop) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

func (x *NetHop) GetLinkStatus() *LinkStatus {
	if x != nil {
		return x.LinkStatus
	}
	return nil
}

type LinkStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Connected   bool  `protobuf:"varint,1,opt,name=connected,proto3" json:"connected,omitempty"`
	Connections int32 `protobuf:"varint,2,opt,name=connections,proto3" json:"connections,omitempty"`
	LastSeen    int64 `protobuf:"varint,3,opt,name=lastSeen,proto3" json:"lastSeen,omitempty"`
}

func (x *LinkStatus) Reset() {
	*x = LinkStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mmesh_protobuf_network_v1_mmnp_routing_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkStatus) ProtoMessage() {}

func (x *LinkStatus) ProtoReflect() protoreflect.Message {
	mi := &file_mmesh_protobuf_network_v1_mmnp_routing_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkStatus.ProtoReflect.Descriptor instead.
func (*LinkStatus) Descriptor() ([]byte, []int) {
	return file_mmesh_protobuf_network_v1_mmnp_routing_proto_rawDescGZIP(), []int{7}
}

func (x *LinkStatus) GetConnected() bool {
	if x != nil {
		return x.Connected
	}
	return false
}

func (x *LinkStatus) GetConnections() int32 {
	if x != nil {
		return x.Connections
	}
	return 0
}

func (x *LinkStatus) GetLastSeen() int64 {
	if x != nil {
		return x.LastSeen
	}
	return 0
}

var File_mmesh_protobuf_network_v1_mmnp_routing_proto protoreflect.FileDescriptor

var file_mmesh_protobuf_network_v1_mmnp_routing_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x6d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6d, 0x6e, 0x70,
	0x2f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07,
	0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x1a, 0x2e, 0x6d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x6e, 0x6f, 0x64,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x37, 0x6d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x6e, 0x6f, 0x64,
	0x65, 0x2d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x30, 0x6d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x2c, 0x6d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x50, 0x0a, 0x09, 0x52, 0x54, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x63, 0x0a, 0x0a, 0x52, 0x54, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x25, 0x0a, 0x02, 0x52, 0x54, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x02, 0x52, 0x54, 0x22, 0xaa, 0x01, 0x0a, 0x10, 0x52, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x67, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x05,
	0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x72, 0x6f,
	0x75, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x49, 0x44,
	0x52, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x43, 0x49, 0x44, 0x52, 0x22, 0xea, 0x04, 0x0a, 0x0c, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6e, 0x65, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x54, 0x49, 0x44, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x52, 0x54, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x05, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12,
	0x2d, 0x0a, 0x02, 0x52, 0x45, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x6f,
	0x75, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x2e, 0x52, 0x45, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x02, 0x52, 0x45, 0x12, 0x29,
	0x0a, 0x06, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4e, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61,
	0x79, 0x52, 0x06, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x73, 0x12, 0x39, 0x0a, 0x06, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x72, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x30, 0x0a, 0x03, 0x4d, 0x52, 0x53, 0x18, 0x65, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x6f,
	0x75, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x4d, 0x52, 0x53, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x03, 0x4d, 0x52, 0x53, 0x1a, 0x4c, 0x0a, 0x07, 0x52, 0x45, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x52,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x4a, 0x0a, 0x0b, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x4d, 0x0a, 0x08, 0x4d, 0x52, 0x53, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0xe9, 0x01, 0x0a, 0x0c, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x52, 0x46, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x56, 0x52, 0x46, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12, 0x26,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x72,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a, 0x02, 0x67, 0x77, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x47, 0x77, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x02, 0x67, 0x77, 0x1a, 0x46, 0x0a, 0x07, 0x47, 0x77, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x25, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4e, 0x65, 0x74, 0x48,
	0x6f, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x58, 0x0a,
	0x08, 0x4e, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x52, 0x46,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x52, 0x46, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x4d, 0x41, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x4d, 0x41, 0x64, 0x64, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x7d, 0x0a, 0x06, 0x4e, 0x65, 0x74, 0x48, 0x6f,
	0x70, 0x12, 0x24, 0x0a, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x52, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x79, 0x12, 0x33, 0x0a, 0x0a, 0x6c, 0x69, 0x6e, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x6c, 0x69, 0x6e, 0x6b,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x68, 0x0a, 0x0a, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e,
	0x2a, 0x1d, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x45, 0x54,
	0x57, 0x4f, 0x52, 0x4b, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x56, 0x52, 0x46, 0x10, 0x01, 0x2a,
	0x33, 0x0a, 0x09, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09,
	0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53,
	0x54, 0x41, 0x54, 0x49, 0x43, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x59, 0x4e, 0x41, 0x4d,
	0x49, 0x43, 0x10, 0x02, 0x42, 0x2e, 0x5a, 0x2c, 0x6d, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x64, 0x65,
	0x76, 0x2f, 0x6d, 0x2d, 0x61, 0x70, 0x69, 0x2d, 0x67, 0x6f, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x6d, 0x6d, 0x6e, 0x70, 0x2f, 0x72, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mmesh_protobuf_network_v1_mmnp_routing_proto_rawDescOnce sync.Once
	file_mmesh_protobuf_network_v1_mmnp_routing_proto_rawDescData = file_mmesh_protobuf_network_v1_mmnp_routing_proto_rawDesc
)

func file_mmesh_protobuf_network_v1_mmnp_routing_proto_rawDescGZIP() []byte {
	file_mmesh_protobuf_network_v1_mmnp_routing_proto_rawDescOnce.Do(func() {
		file_mmesh_protobuf_network_v1_mmnp_routing_proto_rawDescData = protoimpl.X.CompressGZIP(file_mmesh_protobuf_network_v1_mmnp_routing_proto_rawDescData)
	})
	return file_mmesh_protobuf_network_v1_mmnp_routing_proto_rawDescData
}

var file_mmesh_protobuf_network_v1_mmnp_routing_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_mmesh_protobuf_network_v1_mmnp_routing_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_mmesh_protobuf_network_v1_mmnp_routing_proto_goTypes = []interface{}{
	(Scope)(0),                    // 0: routing.Scope
	(RouteType)(0),                // 1: routing.RouteType
	(*RTRequest)(nil),             // 2: routing.RTRequest
	(*RTResponse)(nil),            // 3: routing.RTResponse
	(*RoutingTableOpts)(nil),      // 4: routing.RoutingTableOpts
	(*RoutingTable)(nil),          // 5: routing.RoutingTable
	(*RoutingEntry)(nil),          // 6: routing.RoutingEntry
	(*NetRelay)(nil),              // 7: routing.NetRelay
	(*NetHop)(nil),                // 8: routing.NetHop
	(*LinkStatus)(nil),            // 9: routing.LinkStatus
	nil,                           // 10: routing.RoutingTable.REEntry
	nil,                           // 11: routing.RoutingTable.PolicyEntry
	nil,                           // 12: routing.RoutingTable.MRSEntry
	nil,                           // 13: routing.RoutingEntry.GwEntry
	(*network.Node)(nil),          // 14: network.Node
	(*status.StatusResponse)(nil), // 15: status.StatusResponse
	(*network.Agent)(nil),         // 16: network.Agent
	(*network.Policy)(nil),        // 17: network.Policy
	(*network.NodeInstance)(nil),  // 18: network.NodeInstance
}
var file_mmesh_protobuf_network_v1_mmnp_routing_proto_depIdxs = []int32{
	14, // 0: routing.RTRequest.node:type_name -> network.Node
	15, // 1: routing.RTResponse.status:type_name -> status.StatusResponse
	5,  // 2: routing.RTResponse.RT:type_name -> routing.RoutingTable
	0,  // 3: routing.RoutingTableOpts.scope:type_name -> routing.Scope
	0,  // 4: routing.RoutingTable.scope:type_name -> routing.Scope
	10, // 5: routing.RoutingTable.RE:type_name -> routing.RoutingTable.REEntry
	7,  // 6: routing.RoutingTable.relays:type_name -> routing.NetRelay
	11, // 7: routing.RoutingTable.policy:type_name -> routing.RoutingTable.PolicyEntry
	12, // 8: routing.RoutingTable.MRS:type_name -> routing.RoutingTable.MRSEntry
	1,  // 9: routing.RoutingEntry.type:type_name -> routing.RouteType
	13, // 10: routing.RoutingEntry.gw:type_name -> routing.RoutingEntry.GwEntry
	16, // 11: routing.NetHop.agent:type_name -> network.Agent
	9,  // 12: routing.NetHop.linkStatus:type_name -> routing.LinkStatus
	6,  // 13: routing.RoutingTable.REEntry.value:type_name -> routing.RoutingEntry
	17, // 14: routing.RoutingTable.PolicyEntry.value:type_name -> network.Policy
	18, // 15: routing.RoutingTable.MRSEntry.value:type_name -> network.NodeInstance
	8,  // 16: routing.RoutingEntry.GwEntry.value:type_name -> routing.NetHop
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_mmesh_protobuf_network_v1_mmnp_routing_proto_init() }
func file_mmesh_protobuf_network_v1_mmnp_routing_proto_init() {
	if File_mmesh_protobuf_network_v1_mmnp_routing_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mmesh_protobuf_network_v1_mmnp_routing_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RTRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_network_v1_mmnp_routing_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RTResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_network_v1_mmnp_routing_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoutingTableOpts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_network_v1_mmnp_routing_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoutingTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_network_v1_mmnp_routing_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoutingEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_network_v1_mmnp_routing_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetRelay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_network_v1_mmnp_routing_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetHop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mmesh_protobuf_network_v1_mmnp_routing_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mmesh_protobuf_network_v1_mmnp_routing_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mmesh_protobuf_network_v1_mmnp_routing_proto_goTypes,
		DependencyIndexes: file_mmesh_protobuf_network_v1_mmnp_routing_proto_depIdxs,
		EnumInfos:         file_mmesh_protobuf_network_v1_mmnp_routing_proto_enumTypes,
		MessageInfos:      file_mmesh_protobuf_network_v1_mmnp_routing_proto_msgTypes,
	}.Build()
	File_mmesh_protobuf_network_v1_mmnp_routing_proto = out.File
	file_mmesh_protobuf_network_v1_mmnp_routing_proto_rawDesc = nil
	file_mmesh_protobuf_network_v1_mmnp_routing_proto_goTypes = nil
	file_mmesh_protobuf_network_v1_mmnp_routing_proto_depIdxs = nil
}
