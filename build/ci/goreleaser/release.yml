project_name: mmesh-node

dist: _dist

# env_files:
#   github_token: ~/.cloud/github/github_token.buildbot

env:
  - GO111MODULE=on
  # - PKG_REPO='mmesh'
  # - PKG_REPO_DEV='mmesh-dev'

before:
  hooks:
    # - go mod tidy -v
    # - go mod vendor
    # - go mod verify
    # - go generate $(go list ./... | grep -v /vendor/)
    # - go fmt $(go list ./... | grep -v '/vendor/' | grep -v '.pb.go' | grep -v '.twirp.go' | grep -v 'bindata.go') | tee /dev/stderr

builds:
  - id: "mmesh-node"
    main: cmd/node/main.go
    binary: mmesh-node
    flags:
      #- -tags=dev
      - -tags="static_build,netgo"
      - -v
      - -a
      - -mod=vendor
      - -installsuffix=netgo
      - -trimpath
      #- -race # requires CGO_ENABLED=1
    # Custom ldflags templates.
    # Default is `-s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{.Date}} -X main.builtBy=goreleaser`.
    ldflags:
      - -s
      - -w
      - -X mmesh.dev/m-lib/pkg/version.GitRepository={{.GitURL}}
      - -X mmesh.dev/m-lib/pkg/version.GitCommit={{.ShortCommit}}
      - -X mmesh.dev/m-lib/pkg/version.VersionNumber={{.Tag}}
      - -X mmesh.dev/m-lib/pkg/version.VersionDate={{.Env.VERSION_DATE}}
      - -X mmesh.dev/m-lib/pkg/version.GoVersion={{.Env.GO_VERSION}}
      - -extldflags -static
      #- ./usemsan=-msan
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
      - windows
      ### - freebsd
    goarch:
      - amd64
      # - 386
      - arm64
      # - arm
    goamd64:
      - v1
      ## - v2
      ## - v3
      ## - v4
    goarm:
      - 6
      ## - 7
    ignore:
      # - goos: linux
      #   goarch: 386
      # - goos: darwin
      #   goarch: 386
      # - goos: darwin
      #   goarch: arm
      # - goos: windows
      #   goarch: 386
      # - goos: windows
      #   goarch: arm64
      # - goos: windows
      #   goarch: arm

    # lang: go

snapshot:
  # name_template: '{{ .Tag }}-SNAPSHOT-{{.ShortCommit}}'
  # name_template: '{{ .Version }}-SNAPSHOT-{{.ShortCommit}}'
  name_template: "{{ .Version }}-{{.Env.VERSION_DATE}}-SNAPSHOT-{{.ShortCommit}}"

checksum:
  # name_template: '{{ .ProjectName }}_{{ .Tag }}_checksums.txt'
  # name_template: '{{ .ProjectName }}_{{ .Version }}_checksums.txt'
  name_template: "checksums.txt"
  algorithm: sha256

signs:
  - cmd: cosign
    env:
      # - COSIGN_EXPERIMENTAL=1
    stdin: "{{ .Env.COSIGN_PWD }}"
    # certificate: "${artifact}.pem"
    args:
      - "sign-blob"
      - "--key=/cosign/cosign.key"
      # - "--output-certificate=${certificate}"
      - "--output-signature=${signature}"
      - "${artifact}"
      - "--yes" # needed on cosign 2.0.0+
    artifacts: checksum
    output: false

docker_signs:
  - cmd: cosign
    env:
      # - COSIGN_EXPERIMENTAL=1
    stdin: "{{ .Env.COSIGN_PWD }}"
    args:
      - "sign"
      - "--key=/cosign/cosign.key"
      - "${artifact}"
      - "--yes" # needed on cosign 2.0.0+
    artifacts: manifests
    output: false

sboms:
  - artifacts: archive

archives:
  - id: mmesh-node
    builds:
      - mmesh-node
    # name_template: "{{ .ProjectName }}_{{ .Tag }}_{{ .Os }}_{{ .Arch }}"
    name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    wrap_in_directory: false
    format: tar.gz
    format_overrides:
      - goos: windows
        format: zip
    files:
      - ./README.md
      - ./SECURITY.md
      - ./SUPPORT.md
      - ./LICENSE

brews:
  - name: mmesh-node
    repository:
      owner: mmesh
      name: homebrew-tap
      branch: master
    folder: Formula
    goarm: "6"
    goamd64: v1
    commit_author:
      name: mmeshbot
      email: mmeshbot@mmesh.io
    # commit_msg_template: "Brew formula update for {{ .ProjectName }} version {{ .Tag }}"
    homepage: https://mmesh.io
    description: mmesh-node agent
    license: "Apache License 2.0"
    # Reference: https://developer.apple.com/library/archive/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CreatingLaunchdJobs.html#//apple_ref/doc/uid/10000172i-SW7-SW3
    # plist: |
    #   <?xml version="1.0" encoding="UTF-8"?>
    #   <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
    #   <plist version="1.0">
    #       <dict>
    #           <key>Label</key>
    #           <string>com.mmesh.mmesh-node</string>
    #           <key>ProgramArguments</key>
    #           <array>
    #               <string>/opt/mmesh/libexec/mmesh-node</string>
    #               <string>start</string>
    #               <string>--config</string>
    #               <string>/opt/mmesh/etc/mmesh-node.yml</string>
    #           </array>
    #           <key>RunAtLoad</key>
    #           <true/>
    #           <key>KeepAlive</key>
    #           <true/>
    #           <key>Disabled</key>
    #           <false/>
    #       </dict>
    #   </plist>
    test: |-
      system "#{libexec}/mmesh-node version"
    install: |-
      libexec.install "mmesh-node"
    # post_install: |-
    #   etc.install "mmesh-node.yml"

nfpms:
  - id: mmesh-node
    package_name: mmesh-node
    # file_name_template: "{{ .ProjectName }}_{{ .Tag }}_{{ .Os }}_{{ .Arch }}"
    # file_name_template: "{{ .ProjectName }}_{{ .Arch }}"
    # file_name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    file_name_template: "{{ .ConventionalFileName }}"
    builds:
      - mmesh-node
    vendor: mmesh.io
    homepage: https://mmesh.io
    maintainer: mmeshbot <mmeshbot@mmesh.io>
    description: mmesh-node
    license: "Apache License 2.0"
    formats:
      - deb
      - rpm
      # - apk
      # - archlinux
    bindir: /usr/bin
    dependencies:
      - kmod
      # - iproute2
    section: misc
    priority: optional
    meta: false
    contents:
      # basic files that apply to all packagers
      - src: ./build/package/linux/mmesh-node.service
        dst: /etc/systemd/system/mmesh-node.service
      - src: ./README.md
        dst: /usr/share/doc/mmesh-node/README.md
      - src: ./SECURITY.md
        dst: /usr/share/doc/mmesh-node/SECURITY.md
      - src: ./SUPPORT.md
        dst: /usr/share/doc/mmesh-node/SUPPORT.md
      - src: ./LICENSE
        dst: /usr/share/doc/mmesh-node/LICENSE
      # config files:
      - src: ./configs/mmesh-node.yml
        dst: /etc/mmesh/mmesh-node.yml
        type: config
      # empty dir
      - dst: /var/lib/mmesh
        type: dir
      - dst: /var/cache/mmesh
        type: dir
    deb:
      lintian_overrides:
        - statically-linked-binary
        - changelog-file-missing-in-native-package

dockers:
  - dockerfile: ./build/package/dockerfiles/Dockerfile
    image_templates:
      - "mmeshdev/mmesh-node:latest"
      - "mmeshdev/mmesh-node:snapshot"
      - "mmeshdev/mmesh-node:dev"
      - "mmeshdev/mmesh-node:stable"
      - "mmeshdev/mmesh-node:{{ .Tag }}"
      - "mmeshdev/mmesh-node:{{ .Tag }}-{{ .Env.GO_VERSION }}"
      - "mmeshdev/mmesh-node:v{{ .Major }}"
      - "mmeshdev/mmesh-node:v{{ .Major }}.{{ .Minor }}"
      # - "ghcr.io/mmesh/mmesh-node:latest"
      # - "ghcr.io/mmesh/mmesh-node:snapshot"
      # - "ghcr.io/mmesh/mmesh-node:dev"
      # - "ghcr.io/mmesh/mmesh-node:stable"
      # - "ghcr.io/mmesh/mmesh-node:{{ .Tag }}"
      # - "ghcr.io/mmesh/mmesh-node:{{ .Tag }}-{{ .Env.GO_VERSION }}"
      # - "ghcr.io/mmesh/mmesh-node:v{{ .Major }}"
      # - "ghcr.io/mmesh/mmesh-node:v{{ .Major }}.{{ .Minor }}"
    use: buildx
    goos: linux
    goarch: amd64
    build_flag_templates:
      - "--pull"
      - "--label=io.artifacthub.package.readme-url=https://raw.githubusercontent.com/mmesh/m-node/master/README.md"
      - "--label=io.artifacthub.package.license=Apache License 2.0"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.name={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      # - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--label=org.opencontainers.image.source=https://github.com/mmesh/m-node"
      - "--platform=linux/amd64"
      - "--rm"
      - "--force-rm"
      - "--no-cache"

release:
  github:
    owner: mmesh
    name: m-node
  draft: false
  prerelease: auto # auto | true | false
  name_template: "{{.Tag}}"
  disable: false
  # extra_files:
  #   - glob: ./_dist/*.sig
  footer: |
    **Full Changelog**: https://github.com/mmesh/m-node/compare/{{ .PreviousTag }}...{{ .Tag }}

    ## What to do next?

    - Read the [documentation](https://mmesh.io/docs/)
    - Join our [Discord server](https://mmesh.io/discord)
    - Follow us on [Twitter](https://twitter.com/mmesh_io)

changelog:
  disable: false
  use: github
  sort: asc
  groups:
    - title: Features
      regexp: "^.*feat[(\\w)]*:+.*$"
      order: 0
    - title: "Bug fixes"
      regexp: "^.*fix[(\\w)]*:+.*$"
      order: 1
    - title: Others
      order: 999
  filters:
    exclude:
      - "^doc"
      - "^chore"
      - "^wip"
      - "^test"
      - "^typo"
      - "^Merge"

announce:
  discord:
    enabled: true
    author: mmesh
    color: "46299"
    icon_url: https://raw.githubusercontent.com/mmesh/assets/master/images/logo/mmesh_logo_v5_symbol_512x512.png
  twitter:
    enabled: false

# publishers:
#   # dev repos
#   - name: repo.mmesh.dev/apt
#     cmd: ./build/_deps/scripts/_local/build/pkg-upload.sh '{{ dir .ArtifactPath }}/{{ .ProjectName }}-node_{{ .Tag }}_{{ .Os }}_{{ .Arch }}.deb' '{{.Env.PKG_REPO_DEV}}'
#   - name: repo.mmesh.dev/yum
#     cmd: ./build/_deps/scripts/_local/build/pkg-upload.sh '{{ dir .ArtifactPath }}/{{ .ProjectName }}-node_{{ .Tag }}_{{ .Os }}_{{ .Arch }}.rpm' '{{.Env.PKG_REPO_DEV}}'
#   # stable repos
#   - name: repo.mmesh.io/apt
#     cmd: ./build/_deps/scripts/_local/build/pkg-upload.sh '{{ dir .ArtifactPath }}/{{ .ProjectName }}-node_{{ .Tag }}_{{ .Os }}_{{ .Arch }}.deb' '{{.Env.PKG_REPO}}'
#   - name: repo.mmesh.io/yum
#     cmd: ./build/_deps/scripts/_local/build/pkg-upload.sh '{{ dir .ArtifactPath }}/{{ .ProjectName }}-node_{{ .Tag }}_{{ .Os }}_{{ .Arch }}.rpm' '{{.Env.PKG_REPO}}'
