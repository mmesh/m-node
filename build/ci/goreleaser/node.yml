project_name: mmesh

dist: _dist

env:
  - GO111MODULE=on

builds:
- id: "mmesh-node"
  main: cmd/node/main.go
  binary: mmesh-node
  flags:
    #- -tags=dev
    - -tags="static_build,netgo"
    - -v
    - -a
    - -mod=vendor
    - -installsuffix=netgo
    - -trimpath
    #- -race # requires CGO_ENABLED=1
  # Custom ldflags templates.
  # Default is `-s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{.Date}} -X main.builtBy=goreleaser`.
  ldflags:
    - -s
    - -w
    - -X mmesh.dev/m-lib/pkg/version.GitRepository={{.GitURL}}
    - -X mmesh.dev/m-lib/pkg/version.GitCommit={{.ShortCommit}}
    - -X mmesh.dev/m-lib/pkg/version.VersionNumber={{.Tag}}
    - -X mmesh.dev/m-lib/pkg/version.VersionDate={{.Env.VERSION_DATE}}
    - -X mmesh.dev/m-lib/pkg/version.GoVersion={{.Env.GO_VERSION}}
    - -extldflags -static
    #- ./usemsan=-msan
  env:
    - CGO_ENABLED=0
  goos:
    - linux
    # - darwin
    # - windows
  goarch:
    - amd64
  lang: go

# snapshot:
#   name_template: '{{.Tag}}-{{.Env.VERSION_DATE}}-SNAPSHOT-{{.ShortCommit}}'

# archives:
#   - name_template: '{{.Tag}}-{{.Env.VERSION_DATE}}-SNAPSHOT-{{.ShortCommit}}'

# dockers:
#   - dockerfile: ./build/package/dockerfiles/dockerfile-node
#     image_templates:
#       - "mmeshdev/mmesh-node:dev"
#       - "mmeshdev/mmesh-node:snapshot"
#       # - "mmeshdev/mmesh-node:{{.Tag}}-{{.Env.VERSION_DATE}}-{{ .Env.GO_VERSION }}"
#     use: docker
#     goos: linux
#     goarch: amd64
#     build_flag_templates:
#       - "--pull"
#       - "--label=org.opencontainers.image.created={{.Date}}"
#       - "--label=org.opencontainers.image.name={{.ProjectName}}"
#       - "--label=org.opencontainers.image.revision={{.FullCommit}}"
#       - "--label=org.opencontainers.image.version={{.Version}}"
#       - "--label=org.opencontainers.image.source={{.GitURL}}"
#       - "--platform=linux/amd64"
#       - "--rm"
#       - "--force-rm"
#       - "--no-cache"

# release:
#   disable: true
