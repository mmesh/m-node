version: '2'

silent: true

vars:
  NAME: m-node
  ORG: mmesh
  DOMAIN: mmesh.dev
  PROJECT: mmesh
  GITHUB_PKG: 'github.com/{{.ORG}}/{{.NAME}}'
  PREFIX: {sh: pwd}
  DIST_DIR: '{{.PREFIX}}/_dist'
  VERSION: {sh: cat VERSION}
  LOCAL_UID: {sh: id -u}
  LOCAL_GID: {sh: id -g}
  GS_BUCKET: 'gs://mmesh-io'

env:
  PKG: '{{.DOMAIN}}/{{.PROJECT}}'
  VERSION: {sh: cat VERSION}
  VERSION_DATE: {sh: date -u +%Y%m%d%H%M%S}
  GO_VERSION: {sh: go version | cut -f 3 -d ' '}
  GO111MODULE: on
  CGO_ENABLED: 0
  #GOPRIVATE: 'mmesh.dev/api-go,mmesh.dev/mmesh/lib'

tasks:
  _build-all:
    cmds:
      - task: _build-node

  _build-node:
    cmds:
      - task: golang:go-generate
      - task: golang:gofmt
      - task: golang:go-verify-vendor
      # - task: golang:golangci-lint
      - goreleaser -f build/ci/goreleaser/node.yml --snapshot --rm-dist

  build-all:
    desc: Build all binaries.
    deps: [golang:golang-builder]
    cmds:
      - docker run --rm -v {{.PREFIX}}:/go/src/{{.NAME}} -v /var/run/docker.sock:/var/run/docker.sock -w /go/src/{{.NAME}} --cap-add=IPC_LOCK --ulimit memlock=-1:-1 x6adev/golang-builder:latest _build-all

  build-node:
    desc: Build the node binary.
    deps: [golang:golang-builder]
    cmds:
      - docker run --rm -v {{.PREFIX}}:/go/src/{{.NAME}} -v /var/run/docker.sock:/var/run/docker.sock -w /go/src/{{.NAME}} --cap-add=IPC_LOCK --ulimit memlock=-1:-1 x6adev/golang-builder:latest _build-node
      - sudo chown -R {{.LOCAL_UID}}:{{.LOCAL_GID}} .

  clean:
    desc: Clean everything.
    deps: [golang:go-clean, docker:docker-images-clean]
    cmds:
      - echo 'Cleaning dist working directory...'
      - rm -rf {{.DIST_DIR}}

  docker-generate-node:
    desc: docker build and push -- mmesh-node
    deps: [build-node]
    cmds:
    - task: docker:docker-build
      vars: {IMAGE: "mmesh-node", DIR: "_dist/node/mmesh-node_linux_amd64", DOCKERFILE: "./build/package/dockerfiles/dockerfile-node"}
    - task: docker:docker-push
      vars: {IMAGE: "mmesh-node", REPO: "x6adev"}
    - task: docker:image-scan
      vars: {IMAGE: "mmesh-node", REPO: "x6adev"}

  release-binaries:
    desc: Release binaries.
    dir: '{{.PREFIX}}'
    cmds:
      - ./scripts/_local/build/release.sh '{{.VERSION}}' '{{.DIST_DIR}}' '{{.GS_BUCKET}}'

  release-all:
    desc: Release docker images and binaries.
    cmds:
      - task: docker-generate-node
      - task: release-binaries

  goreleaser:
    desc: Build and release all the packages.
    deps: [docker:docker-login]
    cmds:
      - task: golang:go-generate
      - task: golang:golang:gofmt
      - task: golang:go-verify-vendor
      # - task: golang:go-vet
      # - task: golang:golangci-lint
      - goreleaser -f build/ci/goreleaser/release.yml --rm-dist

  update-git-repo:
    desc: Create a new git tag and push to GitHub.
    deps: [git:version-bump]
    cmds:
      - task: git:tag

includes:
  git: ./build/taskfiles/build/gitTasks.yml
  golang: ./build/taskfiles/build/golangTasks.yml
  docker: ./build/taskfiles/build/dockerTasks.yml
